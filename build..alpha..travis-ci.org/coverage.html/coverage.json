{"/home/travis/build/npmtest/node-npmtest-katex/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_katex */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-katex/lib.npmtest_katex.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/lib.npmtest_katex.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":50}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":56}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_katex */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_katex = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_katex = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-katex/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":49}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":63},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-katex && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_katex */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_katex","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_katex.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_katex.rollup.js'] =","            local.assetsDict['/assets.npmtest_katex.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_katex.__dirname + '/lib.npmtest_katex.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/katex.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/katex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1},"b":{"1":[0,1],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":13},"end":{"line":21,"column":53}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":17},"end":{"line":40,"column":28}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":21},"end":{"line":49,"column":51}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":24},"end":{"line":59,"column":54}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":45}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":41}},"3":{"start":{"line":13,"column":0},"end":{"line":13,"column":43}},"4":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":35}},"6":{"start":{"line":21,"column":0},"end":{"line":30,"column":2}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":30}},"8":{"start":{"line":24,"column":4},"end":{"line":24,"column":41}},"9":{"start":{"line":26,"column":4},"end":{"line":26,"column":47}},"10":{"start":{"line":27,"column":4},"end":{"line":27,"column":62}},"11":{"start":{"line":29,"column":4},"end":{"line":29,"column":31}},"12":{"start":{"line":34,"column":0},"end":{"line":44,"column":1}},"13":{"start":{"line":35,"column":4},"end":{"line":43,"column":5}},"14":{"start":{"line":36,"column":8},"end":{"line":38,"column":51}},"15":{"start":{"line":40,"column":8},"end":{"line":42,"column":10}},"16":{"start":{"line":41,"column":12},"end":{"line":41,"column":71}},"17":{"start":{"line":49,"column":0},"end":{"line":54,"column":2}},"18":{"start":{"line":50,"column":4},"end":{"line":50,"column":41}},"19":{"start":{"line":52,"column":4},"end":{"line":52,"column":47}},"20":{"start":{"line":53,"column":4},"end":{"line":53,"column":60}},"21":{"start":{"line":59,"column":0},"end":{"line":62,"column":2}},"22":{"start":{"line":60,"column":4},"end":{"line":60,"column":41}},"23":{"start":{"line":61,"column":4},"end":{"line":61,"column":43}},"24":{"start":{"line":64,"column":0},"end":{"line":74,"column":2}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":0},"end":{"line":34,"column":0}},{"start":{"line":34,"column":0},"end":{"line":34,"column":0}}]},"2":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":4},"end":{"line":35,"column":4}},{"start":{"line":35,"column":4},"end":{"line":35,"column":4}}]},"3":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":8},"end":{"line":36,"column":38}},{"start":{"line":36,"column":42},"end":{"line":38,"column":50}}]}},"code":["/* eslint no-console:0 */","/**"," * This is the main entry point for KaTeX. Here, we expose functions for"," * rendering expressions either to DOM nodes or to markup strings."," *"," * We also expose the ParseError class to check if errors thrown from KaTeX are"," * errors in the expression, or errors in javascript handling."," */","","var ParseError = require(\"./src/ParseError\");","var Settings = require(\"./src/Settings\");","","var buildTree = require(\"./src/buildTree\");","var parseTree = require(\"./src/parseTree\");","var utils = require(\"./src/utils\");","","/**"," * Parse and build an expression, and place that expression in the DOM node"," * given."," */","var render = function(expression, baseNode, options) {","    utils.clearNode(baseNode);","","    var settings = new Settings(options);","","    var tree = parseTree(expression, settings);","    var node = buildTree(tree, expression, settings).toNode();","","    baseNode.appendChild(node);","};","","// KaTeX's styles don't work properly in quirks mode. Print out an error, and","// disable rendering.","if (typeof document !== \"undefined\") {","    if (document.compatMode !== \"CSS1Compat\") {","        typeof console !== \"undefined\" && console.warn(","            \"Warning: KaTeX doesn't work in quirks mode. Make sure your \" +","                \"website has a suitable doctype.\");","","        render = function() {","            throw new ParseError(\"KaTeX doesn't work in quirks mode.\");","        };","    }","}","","/**"," * Parse and build an expression, and return the markup for that."," */","var renderToString = function(expression, options) {","    var settings = new Settings(options);","","    var tree = parseTree(expression, settings);","    return buildTree(tree, expression, settings).toMarkup();","};","","/**"," * Parse an expression and return the parse tree."," */","var generateParseTree = function(expression, options) {","    var settings = new Settings(options);","    return parseTree(expression, settings);","};","","module.exports = {","    render: render,","    renderToString: renderToString,","    /**","     * NOTE: This method is not currently recommended for public use.","     * The internal tree representation is unstable and is very likely","     * to change. Use at your own risk.","     */","    __parse: generateParseTree,","    ParseError: ParseError","};",""],"l":{"10":1,"11":1,"13":1,"14":1,"15":1,"21":1,"22":0,"24":0,"26":0,"27":0,"29":0,"34":1,"35":0,"36":0,"40":0,"41":0,"49":1,"50":0,"52":0,"53":0,"59":1,"60":0,"61":0,"64":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/ParseError.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/ParseError.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"ParseError","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":59,"column":1}},"2":{"start":{"line":13,"column":4},"end":{"line":13,"column":48}},"3":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":12}},"5":{"start":{"line":17,"column":4},"end":{"line":49,"column":5}},"6":{"start":{"line":21,"column":8},"end":{"line":21,"column":38}},"7":{"start":{"line":24,"column":8},"end":{"line":24,"column":28}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":24}},"9":{"start":{"line":26,"column":8},"end":{"line":30,"column":9}},"10":{"start":{"line":27,"column":12},"end":{"line":27,"column":42}},"11":{"start":{"line":29,"column":12},"end":{"line":29,"column":58}},"12":{"start":{"line":33,"column":8},"end":{"line":33,"column":77}},"13":{"start":{"line":36,"column":8},"end":{"line":36,"column":17}},"14":{"start":{"line":37,"column":8},"end":{"line":41,"column":9}},"15":{"start":{"line":38,"column":12},"end":{"line":38,"column":56}},"16":{"start":{"line":40,"column":12},"end":{"line":40,"column":41}},"17":{"start":{"line":42,"column":8},"end":{"line":42,"column":18}},"18":{"start":{"line":43,"column":8},"end":{"line":47,"column":9}},"19":{"start":{"line":44,"column":12},"end":{"line":44,"column":53}},"20":{"start":{"line":46,"column":12},"end":{"line":46,"column":37}},"21":{"start":{"line":48,"column":8},"end":{"line":48,"column":43}},"22":{"start":{"line":53,"column":4},"end":{"line":53,"column":32}},"23":{"start":{"line":54,"column":4},"end":{"line":54,"column":29}},"24":{"start":{"line":55,"column":4},"end":{"line":55,"column":42}},"25":{"start":{"line":57,"column":4},"end":{"line":57,"column":26}},"26":{"start":{"line":58,"column":4},"end":{"line":58,"column":16}},"27":{"start":{"line":62,"column":0},"end":{"line":62,"column":49}},"28":{"start":{"line":64,"column":0},"end":{"line":64,"column":28}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":17,"column":4}},{"start":{"line":17,"column":4},"end":{"line":17,"column":4}}]},"2":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":8},"end":{"line":17,"column":13}},{"start":{"line":17,"column":17},"end":{"line":17,"column":28}},{"start":{"line":17,"column":32},"end":{"line":17,"column":56}}]},"3":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":8}},{"start":{"line":26,"column":8},"end":{"line":26,"column":8}}]},"4":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":8}},{"start":{"line":37,"column":8},"end":{"line":37,"column":8}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":8}},{"start":{"line":43,"column":8},"end":{"line":43,"column":8}}]}},"code":["/**"," * This is the ParseError class, which is the main error thrown by KaTeX"," * functions when something has gone wrong. This is used to distinguish internal"," * errors from errors in the expression that the user provided."," *"," * If possible, a caller should provide a Token or ParseNode with information"," * about where in the source string the problem occurred."," *"," * @param {string} message  The error message"," * @param {(Token|ParseNode)=} token  An object providing position information"," */","function ParseError(message, token) {","    var error = \"KaTeX parse error: \" + message;","    var start;","    var end;","","    if (token && token.lexer && token.start <= token.end) {","        // If we have the input and a position, make the error a bit fancier","","        // Get the input","        var input = token.lexer.input;","","        // Prepend some information","        start = token.start;","        end = token.end;","        if (start === input.length) {","            error += \" at end of input: \";","        } else {","            error += \" at position \" + (start + 1) + \": \";","        }","","        // Underline token in question using combining underscores","        var underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\");","","        // Extract some context from the input and add it to the error","        var left;","        if (start > 15) {","            left = \"…\" + input.slice(start - 15, start);","        } else {","            left = input.slice(0, start);","        }","        var right;","        if (end + 15 < input.length) {","            right = input.slice(end, end + 15) + \"…\";","        } else {","            right = input.slice(end);","        }","        error += left + underlined + right;","    }","","    // Some hackery to make ParseError a prototype of Error","    // See http://stackoverflow.com/a/8460753","    var self = new Error(error);","    self.name = \"ParseError\";","    self.__proto__ = ParseError.prototype;","","    self.position = start;","    return self;","}","","// More hackery","ParseError.prototype.__proto__ = Error.prototype;","","module.exports = ParseError;",""],"l":{"12":1,"13":0,"14":0,"15":0,"17":0,"21":0,"24":0,"25":0,"26":0,"27":0,"29":0,"33":0,"36":0,"37":0,"38":0,"40":0,"42":0,"43":0,"44":0,"46":0,"48":0,"53":0,"54":0,"55":0,"57":0,"58":0,"62":1,"64":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/Settings.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/Settings.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"get","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}}},"2":{"name":"Settings","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":11,"column":1}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":56}},"3":{"start":{"line":20,"column":0},"end":{"line":27,"column":1}},"4":{"start":{"line":22,"column":4},"end":{"line":22,"column":28}},"5":{"start":{"line":23,"column":4},"end":{"line":23,"column":55}},"6":{"start":{"line":24,"column":4},"end":{"line":24,"column":56}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":57}},"8":{"start":{"line":26,"column":4},"end":{"line":26,"column":39}},"9":{"start":{"line":29,"column":0},"end":{"line":29,"column":26}}},"branchMap":{"1":{"line":10,"type":"cond-expr","locations":[{"start":{"line":10,"column":34},"end":{"line":10,"column":46}},{"start":{"line":10,"column":49},"end":{"line":10,"column":55}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":14},"end":{"line":22,"column":21}},{"start":{"line":22,"column":25},"end":{"line":22,"column":27}}]},"3":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":18},"end":{"line":26,"column":32}},{"start":{"line":26,"column":36},"end":{"line":26,"column":38}}]}},"code":["/**"," * This is a module for storing settings passed into KaTeX. It correctly handles"," * default settings."," */","","/**"," * Helper function for getting a default value if the value is undefined"," */","function get(option, defaultValue) {","    return option === undefined ? defaultValue : option;","}","","/**"," * The main Settings object"," *"," * The current options stored are:"," *  - displayMode: Whether the expression should be typeset by default in"," *                 textstyle or displaystyle (default false)"," */","function Settings(options) {","    // allow null options","    options = options || {};","    this.displayMode = get(options.displayMode, false);","    this.throwOnError = get(options.throwOnError, true);","    this.errorColor = get(options.errorColor, \"#cc0000\");","    this.macros = options.macros || {};","}","","module.exports = Settings;",""],"l":{"9":1,"10":0,"20":1,"22":0,"23":0,"24":0,"25":0,"26":0,"29":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/buildTree.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/buildTree.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":10,"loc":{"start":{"line":10,"column":16},"end":{"line":10,"column":53}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":39}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":43}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":43}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"5":{"start":{"line":5,"column":0},"end":{"line":5,"column":37}},"6":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}},"8":{"start":{"line":10,"column":0},"end":{"line":38,"column":2}},"9":{"start":{"line":11,"column":4},"end":{"line":11,"column":44}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":32}},"11":{"start":{"line":14,"column":4},"end":{"line":16,"column":5}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":35}},"13":{"start":{"line":19,"column":4},"end":{"line":22,"column":7}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":60}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":44}},"16":{"start":{"line":29,"column":4},"end":{"line":31,"column":7}},"17":{"start":{"line":33,"column":4},"end":{"line":37,"column":5}},"18":{"start":{"line":34,"column":8},"end":{"line":34,"column":56}},"19":{"start":{"line":36,"column":8},"end":{"line":36,"column":25}},"20":{"start":{"line":40,"column":0},"end":{"line":40,"column":27}}},"branchMap":{"1":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":15},"end":{"line":11,"column":23}},{"start":{"line":11,"column":27},"end":{"line":11,"column":43}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"3":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]}},"code":["var buildHTML = require(\"./buildHTML\");","var buildMathML = require(\"./buildMathML\");","var buildCommon = require(\"./buildCommon\");","var Options = require(\"./Options\");","var Settings = require(\"./Settings\");","var Style = require(\"./Style\");","","var makeSpan = buildCommon.makeSpan;","","var buildTree = function(tree, expression, settings) {","    settings = settings || new Settings({});","","    var startStyle = Style.TEXT;","    if (settings.displayMode) {","        startStyle = Style.DISPLAY;","    }","","    // Setup the default options","    var options = new Options({","        style: startStyle,","        size: \"size5\"","    });","","    // `buildHTML` sometimes messes with the parse tree (like turning bins ->","    // ords), so we build the MathML version first.","    var mathMLNode = buildMathML(tree, expression, options);","    var htmlNode = buildHTML(tree, options);","","    var katexNode = makeSpan([\"katex\"], [","        mathMLNode, htmlNode","    ]);","","    if (settings.displayMode) {","        return makeSpan([\"katex-display\"], [katexNode]);","    } else {","        return katexNode;","    }","};","","module.exports = buildTree;",""],"l":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"8":1,"10":1,"11":0,"13":0,"14":0,"15":0,"19":0,"26":0,"27":0,"29":0,"33":0,"34":0,"36":0,"40":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/buildHTML.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/buildHTML.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1,"77":0,"78":0,"79":1,"80":0,"81":1,"82":1,"83":0,"84":1,"85":0,"86":1,"87":0,"88":1,"89":0,"90":1,"91":0,"92":1,"93":0,"94":1,"95":0,"96":1,"97":0,"98":1,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":1,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":1,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":1,"339":0,"340":0,"341":0,"342":0,"343":0,"344":1,"345":0,"346":0,"347":0,"348":1,"349":0,"350":0,"351":0,"352":1,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":1,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":1,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":1,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":1,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":1,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":1,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":1,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":1,"536":0,"537":0,"538":1,"539":0,"540":0,"541":0,"542":0,"543":1,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":1,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":1,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":1,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":1,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":1,"637":0,"638":0,"639":1,"640":0,"641":0,"642":1,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":1,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0,0,0,0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0,0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":14},"end":{"line":20,"column":29}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":27}}},"3":{"name":"(anonymous_3)","line":32,"loc":{"start":{"line":32,"column":25},"end":{"line":32,"column":53}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":26},"end":{"line":44,"column":54}}},"5":{"name":"(anonymous_5)","line":59,"loc":{"start":{"line":59,"column":22},"end":{"line":59,"column":65}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":23},"end":{"line":109,"column":38}}},"7":{"name":"(anonymous_7)","line":130,"loc":{"start":{"line":130,"column":25},"end":{"line":130,"column":50}}},"8":{"name":"(anonymous_8)","line":151,"loc":{"start":{"line":151,"column":18},"end":{"line":151,"column":34}}},"9":{"name":"(anonymous_9)","line":178,"loc":{"start":{"line":178,"column":21},"end":{"line":178,"column":37}}},"10":{"name":"(anonymous_10)","line":192,"loc":{"start":{"line":192,"column":24},"end":{"line":192,"column":51}}},"11":{"name":"(anonymous_11)","line":205,"loc":{"start":{"line":205,"column":21},"end":{"line":205,"column":46}}},"12":{"name":"(anonymous_12)","line":209,"loc":{"start":{"line":209,"column":21},"end":{"line":209,"column":46}}},"13":{"name":"(anonymous_13)","line":213,"loc":{"start":{"line":213,"column":17},"end":{"line":213,"column":42}}},"14":{"name":"(anonymous_14)","line":218,"loc":{"start":{"line":218,"column":17},"end":{"line":218,"column":42}}},"15":{"name":"(anonymous_15)","line":223,"loc":{"start":{"line":223,"column":18},"end":{"line":223,"column":43}}},"16":{"name":"(anonymous_16)","line":228,"loc":{"start":{"line":228,"column":19},"end":{"line":228,"column":44}}},"17":{"name":"(anonymous_17)","line":233,"loc":{"start":{"line":233,"column":19},"end":{"line":233,"column":44}}},"18":{"name":"(anonymous_18)","line":238,"loc":{"start":{"line":238,"column":19},"end":{"line":238,"column":44}}},"19":{"name":"(anonymous_19)","line":243,"loc":{"start":{"line":243,"column":22},"end":{"line":243,"column":47}}},"20":{"name":"(anonymous_20)","line":251,"loc":{"start":{"line":251,"column":18},"end":{"line":251,"column":43}}},"21":{"name":"(anonymous_21)","line":264,"loc":{"start":{"line":264,"column":19},"end":{"line":264,"column":44}}},"22":{"name":"(anonymous_22)","line":278,"loc":{"start":{"line":278,"column":20},"end":{"line":278,"column":45}}},"23":{"name":"(anonymous_23)","line":407,"loc":{"start":{"line":407,"column":21},"end":{"line":407,"column":46}}},"24":{"name":"(anonymous_24)","line":546,"loc":{"start":{"line":546,"column":20},"end":{"line":546,"column":47}}},"25":{"name":"(anonymous_25)","line":556,"loc":{"start":{"line":556,"column":19},"end":{"line":556,"column":44}}},"26":{"name":"(anonymous_26)","line":709,"loc":{"start":{"line":709,"column":21},"end":{"line":709,"column":46}}},"27":{"name":"(anonymous_27)","line":732,"loc":{"start":{"line":732,"column":18},"end":{"line":732,"column":43}}},"28":{"name":"(anonymous_28)","line":740,"loc":{"start":{"line":740,"column":18},"end":{"line":740,"column":43}}},"29":{"name":"(anonymous_29)","line":748,"loc":{"start":{"line":748,"column":16},"end":{"line":748,"column":41}}},"30":{"name":"(anonymous_30)","line":918,"loc":{"start":{"line":918,"column":17},"end":{"line":918,"column":42}}},"31":{"name":"(anonymous_31)","line":971,"loc":{"start":{"line":971,"column":19},"end":{"line":971,"column":44}}},"32":{"name":"(anonymous_32)","line":998,"loc":{"start":{"line":998,"column":22},"end":{"line":998,"column":47}}},"33":{"name":"(anonymous_33)","line":1026,"loc":{"start":{"line":1026,"column":23},"end":{"line":1026,"column":48}}},"34":{"name":"(anonymous_34)","line":1052,"loc":{"start":{"line":1052,"column":18},"end":{"line":1052,"column":43}}},"35":{"name":"(anonymous_35)","line":1151,"loc":{"start":{"line":1151,"column":20},"end":{"line":1151,"column":45}}},"36":{"name":"(anonymous_36)","line":1182,"loc":{"start":{"line":1182,"column":21},"end":{"line":1182,"column":46}}},"37":{"name":"(anonymous_37)","line":1215,"loc":{"start":{"line":1215,"column":18},"end":{"line":1215,"column":43}}},"38":{"name":"(anonymous_38)","line":1220,"loc":{"start":{"line":1220,"column":25},"end":{"line":1220,"column":50}}},"39":{"name":"(anonymous_39)","line":1235,"loc":{"start":{"line":1235,"column":23},"end":{"line":1235,"column":48}}},"40":{"name":"(anonymous_40)","line":1303,"loc":{"start":{"line":1303,"column":20},"end":{"line":1303,"column":45}}},"41":{"name":"(anonymous_41)","line":1316,"loc":{"start":{"line":1316,"column":18},"end":{"line":1316,"column":43}}},"42":{"name":"(anonymous_42)","line":1349,"loc":{"start":{"line":1349,"column":18},"end":{"line":1349,"column":43}}},"43":{"name":"(anonymous_43)","line":1366,"loc":{"start":{"line":1366,"column":20},"end":{"line":1366,"column":45}}},"44":{"name":"(anonymous_44)","line":1475,"loc":{"start":{"line":1475,"column":21},"end":{"line":1475,"column":46}}},"45":{"name":"(anonymous_45)","line":1487,"loc":{"start":{"line":1487,"column":20},"end":{"line":1487,"column":45}}},"46":{"name":"(anonymous_46)","line":1498,"loc":{"start":{"line":1498,"column":17},"end":{"line":1498,"column":42}}},"47":{"name":"(anonymous_47)","line":1539,"loc":{"start":{"line":1539,"column":16},"end":{"line":1539,"column":40}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}},"4":{"start":{"line":13,"column":0},"end":{"line":13,"column":39}},"5":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}},"6":{"start":{"line":15,"column":0},"end":{"line":15,"column":43}},"7":{"start":{"line":16,"column":0},"end":{"line":16,"column":31}},"8":{"start":{"line":18,"column":0},"end":{"line":18,"column":36}},"9":{"start":{"line":20,"column":0},"end":{"line":22,"column":2}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":72}},"11":{"start":{"line":28,"column":0},"end":{"line":30,"column":2}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":46}},"13":{"start":{"line":32,"column":0},"end":{"line":42,"column":2}},"14":{"start":{"line":36,"column":4},"end":{"line":41,"column":5}},"15":{"start":{"line":37,"column":8},"end":{"line":38,"column":47}},"16":{"start":{"line":40,"column":8},"end":{"line":40,"column":27}},"17":{"start":{"line":44,"column":0},"end":{"line":50,"column":2}},"18":{"start":{"line":45,"column":4},"end":{"line":49,"column":5}},"19":{"start":{"line":46,"column":8},"end":{"line":46,"column":77}},"20":{"start":{"line":48,"column":8},"end":{"line":48,"column":27}},"21":{"start":{"line":59,"column":0},"end":{"line":106,"column":2}},"22":{"start":{"line":61,"column":4},"end":{"line":61,"column":20}},"23":{"start":{"line":62,"column":4},"end":{"line":70,"column":5}},"24":{"start":{"line":63,"column":8},"end":{"line":63,"column":34}},"25":{"start":{"line":64,"column":8},"end":{"line":64,"column":48}},"26":{"start":{"line":65,"column":8},"end":{"line":69,"column":9}},"27":{"start":{"line":66,"column":12},"end":{"line":66,"column":64}},"28":{"start":{"line":68,"column":12},"end":{"line":68,"column":32}},"29":{"start":{"line":77,"column":4},"end":{"line":77,"column":22}},"30":{"start":{"line":78,"column":4},"end":{"line":91,"column":5}},"31":{"start":{"line":79,"column":8},"end":{"line":90,"column":9}},"32":{"start":{"line":80,"column":12},"end":{"line":80,"column":34}},"33":{"start":{"line":81,"column":12},"end":{"line":81,"column":35}},"34":{"start":{"line":82,"column":12},"end":{"line":82,"column":32}},"35":{"start":{"line":83,"column":12},"end":{"line":83,"column":16}},"36":{"start":{"line":84,"column":15},"end":{"line":90,"column":9}},"37":{"start":{"line":85,"column":12},"end":{"line":87,"column":13}},"38":{"start":{"line":86,"column":16},"end":{"line":86,"column":80}},"39":{"start":{"line":88,"column":12},"end":{"line":88,"column":59}},"40":{"start":{"line":89,"column":12},"end":{"line":89,"column":26}},"41":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"42":{"start":{"line":93,"column":8},"end":{"line":93,"column":51}},"43":{"start":{"line":97,"column":4},"end":{"line":103,"column":5}},"44":{"start":{"line":98,"column":8},"end":{"line":102,"column":9}},"45":{"start":{"line":101,"column":12},"end":{"line":101,"column":42}},"46":{"start":{"line":105,"column":4},"end":{"line":105,"column":18}},"47":{"start":{"line":109,"column":0},"end":{"line":122,"column":2}},"48":{"start":{"line":110,"column":4},"end":{"line":120,"column":5}},"49":{"start":{"line":111,"column":8},"end":{"line":114,"column":9}},"50":{"start":{"line":112,"column":12},"end":{"line":113,"column":57}},"51":{"start":{"line":116,"column":8},"end":{"line":119,"column":9}},"52":{"start":{"line":118,"column":12},"end":{"line":118,"column":35}},"53":{"start":{"line":121,"column":4},"end":{"line":121,"column":16}},"54":{"start":{"line":130,"column":0},"end":{"line":144,"column":2}},"55":{"start":{"line":131,"column":4},"end":{"line":143,"column":5}},"56":{"start":{"line":132,"column":8},"end":{"line":132,"column":21}},"57":{"start":{"line":133,"column":11},"end":{"line":143,"column":5}},"58":{"start":{"line":136,"column":8},"end":{"line":138,"column":44}},"59":{"start":{"line":139,"column":11},"end":{"line":143,"column":5}},"60":{"start":{"line":140,"column":8},"end":{"line":140,"column":48}},"61":{"start":{"line":142,"column":8},"end":{"line":142,"column":20}},"62":{"start":{"line":151,"column":0},"end":{"line":171,"column":2}},"63":{"start":{"line":152,"column":4},"end":{"line":170,"column":5}},"64":{"start":{"line":153,"column":8},"end":{"line":153,"column":21}},"65":{"start":{"line":154,"column":11},"end":{"line":170,"column":5}},"66":{"start":{"line":155,"column":8},"end":{"line":159,"column":9}},"67":{"start":{"line":156,"column":12},"end":{"line":156,"column":47}},"68":{"start":{"line":158,"column":12},"end":{"line":158,"column":25}},"69":{"start":{"line":160,"column":11},"end":{"line":170,"column":5}},"70":{"start":{"line":161,"column":8},"end":{"line":165,"column":9}},"71":{"start":{"line":162,"column":12},"end":{"line":162,"column":53}},"72":{"start":{"line":164,"column":12},"end":{"line":164,"column":25}},"73":{"start":{"line":166,"column":11},"end":{"line":170,"column":5}},"74":{"start":{"line":167,"column":8},"end":{"line":167,"column":45}},"75":{"start":{"line":169,"column":8},"end":{"line":169,"column":21}},"76":{"start":{"line":178,"column":0},"end":{"line":190,"column":2}},"77":{"start":{"line":179,"column":4},"end":{"line":179,"column":38}},"78":{"start":{"line":182,"column":4},"end":{"line":189,"column":34}},"79":{"start":{"line":192,"column":0},"end":{"line":197,"column":2}},"80":{"start":{"line":193,"column":4},"end":{"line":196,"column":27}},"81":{"start":{"line":203,"column":0},"end":{"line":203,"column":20}},"82":{"start":{"line":205,"column":0},"end":{"line":207,"column":2}},"83":{"start":{"line":206,"column":4},"end":{"line":206,"column":58}},"84":{"start":{"line":209,"column":0},"end":{"line":211,"column":2}},"85":{"start":{"line":210,"column":4},"end":{"line":210,"column":58}},"86":{"start":{"line":213,"column":0},"end":{"line":216,"column":2}},"87":{"start":{"line":214,"column":4},"end":{"line":215,"column":52}},"88":{"start":{"line":218,"column":0},"end":{"line":221,"column":2}},"89":{"start":{"line":219,"column":4},"end":{"line":220,"column":52}},"90":{"start":{"line":223,"column":0},"end":{"line":226,"column":2}},"91":{"start":{"line":224,"column":4},"end":{"line":225,"column":53}},"92":{"start":{"line":228,"column":0},"end":{"line":231,"column":2}},"93":{"start":{"line":229,"column":4},"end":{"line":230,"column":54}},"94":{"start":{"line":233,"column":0},"end":{"line":236,"column":2}},"95":{"start":{"line":234,"column":4},"end":{"line":235,"column":54}},"96":{"start":{"line":238,"column":0},"end":{"line":241,"column":2}},"97":{"start":{"line":239,"column":4},"end":{"line":240,"column":54}},"98":{"start":{"line":243,"column":0},"end":{"line":249,"column":2}},"99":{"start":{"line":244,"column":4},"end":{"line":248,"column":6}},"100":{"start":{"line":251,"column":0},"end":{"line":262,"column":2}},"101":{"start":{"line":252,"column":4},"end":{"line":252,"column":57}},"102":{"start":{"line":253,"column":4},"end":{"line":253,"column":68}},"103":{"start":{"line":254,"column":4},"end":{"line":259,"column":5}},"104":{"start":{"line":255,"column":8},"end":{"line":258,"column":9}},"105":{"start":{"line":256,"column":12},"end":{"line":256,"column":35}},"106":{"start":{"line":257,"column":12},"end":{"line":257,"column":16}},"107":{"start":{"line":260,"column":4},"end":{"line":261,"column":27}},"108":{"start":{"line":264,"column":0},"end":{"line":276,"column":2}},"109":{"start":{"line":265,"column":4},"end":{"line":269,"column":6}},"110":{"start":{"line":275,"column":4},"end":{"line":275,"column":50}},"111":{"start":{"line":278,"column":0},"end":{"line":405,"column":2}},"112":{"start":{"line":284,"column":4},"end":{"line":286,"column":5}},"113":{"start":{"line":285,"column":8},"end":{"line":285,"column":65}},"114":{"start":{"line":288,"column":4},"end":{"line":288,"column":61}},"115":{"start":{"line":289,"column":4},"end":{"line":289,"column":15}},"116":{"start":{"line":290,"column":4},"end":{"line":290,"column":15}},"117":{"start":{"line":291,"column":4},"end":{"line":291,"column":12}},"118":{"start":{"line":292,"column":4},"end":{"line":292,"column":12}},"119":{"start":{"line":294,"column":4},"end":{"line":294,"column":30}},"120":{"start":{"line":295,"column":4},"end":{"line":295,"column":19}},"121":{"start":{"line":297,"column":4},"end":{"line":302,"column":5}},"122":{"start":{"line":298,"column":8},"end":{"line":298,"column":52}},"123":{"start":{"line":299,"column":8},"end":{"line":299,"column":54}},"124":{"start":{"line":300,"column":8},"end":{"line":301,"column":31}},"125":{"start":{"line":304,"column":4},"end":{"line":309,"column":5}},"126":{"start":{"line":305,"column":8},"end":{"line":305,"column":52}},"127":{"start":{"line":306,"column":8},"end":{"line":306,"column":54}},"128":{"start":{"line":307,"column":8},"end":{"line":308,"column":31}},"129":{"start":{"line":312,"column":4},"end":{"line":312,"column":17}},"130":{"start":{"line":313,"column":4},"end":{"line":313,"column":17}},"131":{"start":{"line":314,"column":4},"end":{"line":320,"column":5}},"132":{"start":{"line":315,"column":8},"end":{"line":315,"column":21}},"133":{"start":{"line":316,"column":8},"end":{"line":316,"column":21}},"134":{"start":{"line":318,"column":8},"end":{"line":318,"column":55}},"135":{"start":{"line":319,"column":8},"end":{"line":319,"column":54}},"136":{"start":{"line":323,"column":4},"end":{"line":323,"column":20}},"137":{"start":{"line":324,"column":4},"end":{"line":330,"column":5}},"138":{"start":{"line":325,"column":8},"end":{"line":325,"column":41}},"139":{"start":{"line":326,"column":11},"end":{"line":330,"column":5}},"140":{"start":{"line":327,"column":8},"end":{"line":327,"column":41}},"141":{"start":{"line":329,"column":8},"end":{"line":329,"column":41}},"142":{"start":{"line":334,"column":4},"end":{"line":335,"column":33}},"143":{"start":{"line":336,"column":4},"end":{"line":337,"column":64}},"144":{"start":{"line":339,"column":4},"end":{"line":339,"column":15}},"145":{"start":{"line":340,"column":4},"end":{"line":398,"column":5}},"146":{"start":{"line":342,"column":8},"end":{"line":344,"column":54}},"147":{"start":{"line":346,"column":8},"end":{"line":348,"column":39}},"148":{"start":{"line":350,"column":8},"end":{"line":350,"column":59}},"149":{"start":{"line":355,"column":8},"end":{"line":357,"column":9}},"150":{"start":{"line":356,"column":12},"end":{"line":356,"column":70}},"151":{"start":{"line":358,"column":11},"end":{"line":398,"column":5}},"152":{"start":{"line":360,"column":8},"end":{"line":361,"column":54}},"153":{"start":{"line":363,"column":8},"end":{"line":365,"column":40}},"154":{"start":{"line":367,"column":8},"end":{"line":367,"column":59}},"155":{"start":{"line":369,"column":8},"end":{"line":370,"column":77}},"156":{"start":{"line":371,"column":8},"end":{"line":371,"column":58}},"157":{"start":{"line":373,"column":8},"end":{"line":373,"column":65}},"158":{"start":{"line":376,"column":8},"end":{"line":384,"column":9}},"159":{"start":{"line":378,"column":12},"end":{"line":378,"column":75}},"160":{"start":{"line":379,"column":12},"end":{"line":379,"column":75}},"161":{"start":{"line":380,"column":12},"end":{"line":383,"column":13}},"162":{"start":{"line":381,"column":16},"end":{"line":381,"column":32}},"163":{"start":{"line":382,"column":16},"end":{"line":382,"column":32}},"164":{"start":{"line":386,"column":8},"end":{"line":389,"column":45}},"165":{"start":{"line":392,"column":8},"end":{"line":394,"column":9}},"166":{"start":{"line":393,"column":12},"end":{"line":393,"column":70}},"167":{"start":{"line":396,"column":8},"end":{"line":396,"column":59}},"168":{"start":{"line":397,"column":8},"end":{"line":397,"column":59}},"169":{"start":{"line":401,"column":4},"end":{"line":401,"column":50}},"170":{"start":{"line":402,"column":4},"end":{"line":404,"column":17}},"171":{"start":{"line":407,"column":0},"end":{"line":544,"column":2}},"172":{"start":{"line":411,"column":4},"end":{"line":411,"column":30}},"173":{"start":{"line":412,"column":4},"end":{"line":416,"column":5}},"174":{"start":{"line":413,"column":8},"end":{"line":413,"column":30}},"175":{"start":{"line":414,"column":11},"end":{"line":416,"column":5}},"176":{"start":{"line":415,"column":8},"end":{"line":415,"column":27}},"177":{"start":{"line":418,"column":4},"end":{"line":418,"column":33}},"178":{"start":{"line":419,"column":4},"end":{"line":419,"column":33}},"179":{"start":{"line":420,"column":4},"end":{"line":420,"column":19}},"180":{"start":{"line":422,"column":4},"end":{"line":422,"column":43}},"181":{"start":{"line":423,"column":4},"end":{"line":423,"column":58}},"182":{"start":{"line":424,"column":4},"end":{"line":425,"column":29}},"183":{"start":{"line":427,"column":4},"end":{"line":427,"column":43}},"184":{"start":{"line":428,"column":4},"end":{"line":428,"column":58}},"185":{"start":{"line":429,"column":4},"end":{"line":430,"column":29}},"186":{"start":{"line":432,"column":4},"end":{"line":432,"column":18}},"187":{"start":{"line":433,"column":4},"end":{"line":438,"column":5}},"188":{"start":{"line":434,"column":8},"end":{"line":435,"column":41}},"189":{"start":{"line":437,"column":8},"end":{"line":437,"column":22}},"190":{"start":{"line":441,"column":4},"end":{"line":441,"column":17}},"191":{"start":{"line":442,"column":4},"end":{"line":442,"column":18}},"192":{"start":{"line":443,"column":4},"end":{"line":443,"column":19}},"193":{"start":{"line":444,"column":4},"end":{"line":461,"column":5}},"194":{"start":{"line":445,"column":8},"end":{"line":445,"column":38}},"195":{"start":{"line":446,"column":8},"end":{"line":450,"column":9}},"196":{"start":{"line":447,"column":12},"end":{"line":447,"column":38}},"197":{"start":{"line":449,"column":12},"end":{"line":449,"column":69}},"198":{"start":{"line":451,"column":8},"end":{"line":451,"column":42}},"199":{"start":{"line":453,"column":8},"end":{"line":459,"column":9}},"200":{"start":{"line":454,"column":12},"end":{"line":454,"column":42}},"201":{"start":{"line":455,"column":12},"end":{"line":455,"column":34}},"202":{"start":{"line":457,"column":12},"end":{"line":457,"column":42}},"203":{"start":{"line":458,"column":12},"end":{"line":458,"column":69}},"204":{"start":{"line":460,"column":8},"end":{"line":460,"column":42}},"205":{"start":{"line":463,"column":4},"end":{"line":463,"column":13}},"206":{"start":{"line":464,"column":4},"end":{"line":508,"column":5}},"207":{"start":{"line":466,"column":8},"end":{"line":467,"column":67}},"208":{"start":{"line":468,"column":8},"end":{"line":471,"column":9}},"209":{"start":{"line":469,"column":12},"end":{"line":469,"column":63}},"210":{"start":{"line":470,"column":12},"end":{"line":470,"column":65}},"211":{"start":{"line":473,"column":8},"end":{"line":476,"column":45}},"212":{"start":{"line":479,"column":8},"end":{"line":479,"column":50}},"213":{"start":{"line":481,"column":8},"end":{"line":486,"column":9}},"214":{"start":{"line":483,"column":12},"end":{"line":485,"column":61}},"215":{"start":{"line":488,"column":8},"end":{"line":493,"column":9}},"216":{"start":{"line":490,"column":12},"end":{"line":492,"column":58}},"217":{"start":{"line":495,"column":8},"end":{"line":496,"column":68}},"218":{"start":{"line":499,"column":8},"end":{"line":499,"column":31}},"219":{"start":{"line":501,"column":8},"end":{"line":501,"column":55}},"220":{"start":{"line":503,"column":8},"end":{"line":507,"column":45}},"221":{"start":{"line":512,"column":4},"end":{"line":512,"column":71}},"222":{"start":{"line":513,"column":4},"end":{"line":513,"column":70}},"223":{"start":{"line":516,"column":4},"end":{"line":516,"column":18}},"224":{"start":{"line":517,"column":4},"end":{"line":521,"column":5}},"225":{"start":{"line":518,"column":8},"end":{"line":518,"column":41}},"226":{"start":{"line":520,"column":8},"end":{"line":520,"column":41}},"227":{"start":{"line":523,"column":4},"end":{"line":523,"column":18}},"228":{"start":{"line":524,"column":4},"end":{"line":524,"column":19}},"229":{"start":{"line":525,"column":4},"end":{"line":531,"column":5}},"230":{"start":{"line":526,"column":8},"end":{"line":526,"column":58}},"231":{"start":{"line":528,"column":8},"end":{"line":530,"column":61}},"232":{"start":{"line":532,"column":4},"end":{"line":538,"column":5}},"233":{"start":{"line":533,"column":8},"end":{"line":533,"column":60}},"234":{"start":{"line":535,"column":8},"end":{"line":537,"column":62}},"235":{"start":{"line":540,"column":4},"end":{"line":543,"column":17}},"236":{"start":{"line":546,"column":0},"end":{"line":554,"column":2}},"237":{"start":{"line":547,"column":4},"end":{"line":547,"column":29}},"238":{"start":{"line":548,"column":4},"end":{"line":552,"column":5}},"239":{"start":{"line":549,"column":8},"end":{"line":549,"column":35}},"240":{"start":{"line":550,"column":11},"end":{"line":552,"column":5}},"241":{"start":{"line":551,"column":8},"end":{"line":551,"column":16}},"242":{"start":{"line":553,"column":4},"end":{"line":553,"column":13}},"243":{"start":{"line":556,"column":0},"end":{"line":707,"column":2}},"244":{"start":{"line":557,"column":4},"end":{"line":557,"column":10}},"245":{"start":{"line":558,"column":4},"end":{"line":558,"column":10}},"246":{"start":{"line":559,"column":4},"end":{"line":559,"column":37}},"247":{"start":{"line":560,"column":4},"end":{"line":560,"column":15}},"248":{"start":{"line":561,"column":4},"end":{"line":561,"column":29}},"249":{"start":{"line":563,"column":4},"end":{"line":563,"column":30}},"250":{"start":{"line":566,"column":4},"end":{"line":566,"column":45}},"251":{"start":{"line":567,"column":4},"end":{"line":567,"column":29}},"252":{"start":{"line":570,"column":4},"end":{"line":570,"column":31}},"253":{"start":{"line":573,"column":4},"end":{"line":573,"column":64}},"254":{"start":{"line":574,"column":4},"end":{"line":574,"column":48}},"255":{"start":{"line":575,"column":4},"end":{"line":575,"column":40}},"256":{"start":{"line":576,"column":4},"end":{"line":576,"column":39}},"257":{"start":{"line":578,"column":4},"end":{"line":578,"column":24}},"258":{"start":{"line":579,"column":4},"end":{"line":618,"column":5}},"259":{"start":{"line":580,"column":8},"end":{"line":580,"column":40}},"260":{"start":{"line":581,"column":8},"end":{"line":581,"column":35}},"261":{"start":{"line":582,"column":8},"end":{"line":582,"column":33}},"262":{"start":{"line":584,"column":8},"end":{"line":586,"column":9}},"263":{"start":{"line":585,"column":12},"end":{"line":585,"column":30}},"264":{"start":{"line":588,"column":8},"end":{"line":588,"column":45}},"265":{"start":{"line":589,"column":8},"end":{"line":598,"column":9}},"266":{"start":{"line":590,"column":12},"end":{"line":590,"column":52}},"267":{"start":{"line":591,"column":12},"end":{"line":593,"column":13}},"268":{"start":{"line":592,"column":16},"end":{"line":592,"column":34}},"269":{"start":{"line":594,"column":12},"end":{"line":596,"column":13}},"270":{"start":{"line":595,"column":16},"end":{"line":595,"column":36}},"271":{"start":{"line":597,"column":12},"end":{"line":597,"column":28}},"272":{"start":{"line":600,"column":8},"end":{"line":600,"column":20}},"273":{"start":{"line":601,"column":8},"end":{"line":610,"column":9}},"274":{"start":{"line":602,"column":12},"end":{"line":602,"column":69}},"275":{"start":{"line":603,"column":12},"end":{"line":609,"column":13}},"276":{"start":{"line":604,"column":16},"end":{"line":604,"column":36}},"277":{"start":{"line":605,"column":16},"end":{"line":607,"column":17}},"278":{"start":{"line":606,"column":20},"end":{"line":606,"column":32}},"279":{"start":{"line":608,"column":16},"end":{"line":608,"column":24}},"280":{"start":{"line":612,"column":8},"end":{"line":612,"column":31}},"281":{"start":{"line":613,"column":8},"end":{"line":613,"column":29}},"282":{"start":{"line":614,"column":8},"end":{"line":614,"column":30}},"283":{"start":{"line":615,"column":8},"end":{"line":615,"column":33}},"284":{"start":{"line":616,"column":8},"end":{"line":616,"column":35}},"285":{"start":{"line":617,"column":8},"end":{"line":617,"column":25}},"286":{"start":{"line":620,"column":4},"end":{"line":620,"column":60}},"287":{"start":{"line":621,"column":4},"end":{"line":621,"column":49}},"288":{"start":{"line":622,"column":4},"end":{"line":622,"column":18}},"289":{"start":{"line":623,"column":4},"end":{"line":623,"column":15}},"290":{"start":{"line":624,"column":4},"end":{"line":624,"column":20}},"291":{"start":{"line":625,"column":4},"end":{"line":704,"column":5}},"292":{"start":{"line":631,"column":8},"end":{"line":631,"column":58}},"293":{"start":{"line":633,"column":8},"end":{"line":633,"column":34}},"294":{"start":{"line":634,"column":8},"end":{"line":661,"column":9}},"295":{"start":{"line":637,"column":12},"end":{"line":642,"column":13}},"296":{"start":{"line":638,"column":16},"end":{"line":638,"column":55}},"297":{"start":{"line":639,"column":16},"end":{"line":640,"column":61}},"298":{"start":{"line":641,"column":16},"end":{"line":641,"column":34}},"299":{"start":{"line":644,"column":12},"end":{"line":656,"column":13}},"300":{"start":{"line":645,"column":16},"end":{"line":647,"column":24}},"301":{"start":{"line":648,"column":16},"end":{"line":648,"column":60}},"302":{"start":{"line":649,"column":16},"end":{"line":650,"column":51}},"303":{"start":{"line":652,"column":16},"end":{"line":652,"column":37}},"304":{"start":{"line":654,"column":16},"end":{"line":655,"column":69}},"305":{"start":{"line":658,"column":12},"end":{"line":658,"column":26}},"306":{"start":{"line":659,"column":12},"end":{"line":659,"column":58}},"307":{"start":{"line":660,"column":12},"end":{"line":660,"column":35}},"308":{"start":{"line":663,"column":8},"end":{"line":665,"column":9}},"309":{"start":{"line":664,"column":12},"end":{"line":664,"column":21}},"310":{"start":{"line":667,"column":8},"end":{"line":667,"column":21}},"311":{"start":{"line":668,"column":8},"end":{"line":675,"column":9}},"312":{"start":{"line":669,"column":12},"end":{"line":669,"column":65}},"313":{"start":{"line":670,"column":12},"end":{"line":674,"column":13}},"314":{"start":{"line":671,"column":16},"end":{"line":671,"column":55}},"315":{"start":{"line":672,"column":16},"end":{"line":672,"column":53}},"316":{"start":{"line":673,"column":16},"end":{"line":673,"column":34}},"317":{"start":{"line":677,"column":8},"end":{"line":677,"column":21}},"318":{"start":{"line":678,"column":8},"end":{"line":688,"column":9}},"319":{"start":{"line":679,"column":12},"end":{"line":679,"column":30}},"320":{"start":{"line":680,"column":12},"end":{"line":680,"column":30}},"321":{"start":{"line":681,"column":12},"end":{"line":683,"column":13}},"322":{"start":{"line":682,"column":16},"end":{"line":682,"column":25}},"323":{"start":{"line":684,"column":12},"end":{"line":684,"column":41}},"324":{"start":{"line":685,"column":12},"end":{"line":685,"column":35}},"325":{"start":{"line":686,"column":12},"end":{"line":686,"column":37}},"326":{"start":{"line":687,"column":12},"end":{"line":687,"column":63}},"327":{"start":{"line":690,"column":8},"end":{"line":690,"column":75}},"328":{"start":{"line":691,"column":8},"end":{"line":693,"column":19}},"329":{"start":{"line":694,"column":8},"end":{"line":694,"column":23}},"330":{"start":{"line":696,"column":8},"end":{"line":703,"column":9}},"331":{"start":{"line":697,"column":12},"end":{"line":697,"column":66}},"332":{"start":{"line":698,"column":12},"end":{"line":702,"column":13}},"333":{"start":{"line":699,"column":16},"end":{"line":699,"column":55}},"334":{"start":{"line":700,"column":16},"end":{"line":700,"column":53}},"335":{"start":{"line":701,"column":16},"end":{"line":701,"column":34}},"336":{"start":{"line":705,"column":4},"end":{"line":705,"column":38}},"337":{"start":{"line":706,"column":4},"end":{"line":706,"column":47}},"338":{"start":{"line":709,"column":0},"end":{"line":730,"column":2}},"339":{"start":{"line":710,"column":4},"end":{"line":729,"column":5}},"340":{"start":{"line":715,"column":8},"end":{"line":721,"column":9}},"341":{"start":{"line":716,"column":12},"end":{"line":716,"column":66}},"342":{"start":{"line":718,"column":12},"end":{"line":720,"column":25}},"343":{"start":{"line":725,"column":8},"end":{"line":728,"column":25}},"344":{"start":{"line":732,"column":0},"end":{"line":738,"column":2}},"345":{"start":{"line":733,"column":4},"end":{"line":734,"column":68}},"346":{"start":{"line":735,"column":4},"end":{"line":735,"column":36}},"347":{"start":{"line":736,"column":4},"end":{"line":737,"column":70}},"348":{"start":{"line":740,"column":0},"end":{"line":746,"column":2}},"349":{"start":{"line":741,"column":4},"end":{"line":742,"column":68}},"350":{"start":{"line":743,"column":4},"end":{"line":743,"column":36}},"351":{"start":{"line":744,"column":4},"end":{"line":745,"column":70}},"352":{"start":{"line":748,"column":0},"end":{"line":916,"column":2}},"353":{"start":{"line":750,"column":4},"end":{"line":750,"column":17}},"354":{"start":{"line":751,"column":4},"end":{"line":751,"column":17}},"355":{"start":{"line":752,"column":4},"end":{"line":752,"column":26}},"356":{"start":{"line":753,"column":4},"end":{"line":761,"column":5}},"357":{"start":{"line":757,"column":8},"end":{"line":757,"column":35}},"358":{"start":{"line":758,"column":8},"end":{"line":758,"column":35}},"359":{"start":{"line":759,"column":8},"end":{"line":759,"column":33}},"360":{"start":{"line":760,"column":8},"end":{"line":760,"column":25}},"361":{"start":{"line":763,"column":4},"end":{"line":763,"column":30}},"362":{"start":{"line":766,"column":4},"end":{"line":768,"column":6}},"363":{"start":{"line":770,"column":4},"end":{"line":770,"column":22}},"364":{"start":{"line":771,"column":4},"end":{"line":777,"column":5}},"365":{"start":{"line":776,"column":8},"end":{"line":776,"column":21}},"366":{"start":{"line":779,"column":4},"end":{"line":779,"column":13}},"367":{"start":{"line":780,"column":4},"end":{"line":780,"column":22}},"368":{"start":{"line":781,"column":4},"end":{"line":781,"column":18}},"369":{"start":{"line":782,"column":4},"end":{"line":814,"column":5}},"370":{"start":{"line":784,"column":8},"end":{"line":784,"column":65}},"371":{"start":{"line":785,"column":8},"end":{"line":787,"column":67}},"372":{"start":{"line":794,"column":8},"end":{"line":795,"column":60}},"373":{"start":{"line":798,"column":8},"end":{"line":798,"column":28}},"374":{"start":{"line":799,"column":11},"end":{"line":814,"column":5}},"375":{"start":{"line":801,"column":8},"end":{"line":801,"column":70}},"376":{"start":{"line":803,"column":8},"end":{"line":803,"column":49}},"377":{"start":{"line":809,"column":8},"end":{"line":809,"column":24}},"378":{"start":{"line":810,"column":8},"end":{"line":812,"column":9}},"379":{"start":{"line":811,"column":12},"end":{"line":811,"column":78}},"380":{"start":{"line":813,"column":8},"end":{"line":813,"column":50}},"381":{"start":{"line":816,"column":4},"end":{"line":915,"column":5}},"382":{"start":{"line":819,"column":8},"end":{"line":819,"column":36}},"383":{"start":{"line":821,"column":8},"end":{"line":821,"column":19}},"384":{"start":{"line":822,"column":8},"end":{"line":822,"column":20}},"385":{"start":{"line":823,"column":8},"end":{"line":823,"column":19}},"386":{"start":{"line":824,"column":8},"end":{"line":824,"column":20}},"387":{"start":{"line":825,"column":8},"end":{"line":825,"column":23}},"388":{"start":{"line":828,"column":8},"end":{"line":837,"column":9}},"389":{"start":{"line":829,"column":12},"end":{"line":829,"column":56}},"390":{"start":{"line":830,"column":12},"end":{"line":830,"column":55}},"391":{"start":{"line":831,"column":12},"end":{"line":832,"column":35}},"392":{"start":{"line":834,"column":12},"end":{"line":836,"column":63}},"393":{"start":{"line":839,"column":8},"end":{"line":848,"column":9}},"394":{"start":{"line":840,"column":12},"end":{"line":840,"column":56}},"395":{"start":{"line":841,"column":12},"end":{"line":841,"column":55}},"396":{"start":{"line":842,"column":12},"end":{"line":843,"column":35}},"397":{"start":{"line":845,"column":12},"end":{"line":847,"column":64}},"398":{"start":{"line":852,"column":8},"end":{"line":852,"column":23}},"399":{"start":{"line":853,"column":8},"end":{"line":853,"column":16}},"400":{"start":{"line":854,"column":8},"end":{"line":854,"column":19}},"401":{"start":{"line":855,"column":8},"end":{"line":906,"column":9}},"402":{"start":{"line":856,"column":12},"end":{"line":856,"column":42}},"403":{"start":{"line":858,"column":12},"end":{"line":863,"column":36}},"404":{"start":{"line":869,"column":12},"end":{"line":869,"column":68}},"405":{"start":{"line":870,"column":15},"end":{"line":906,"column":9}},"406":{"start":{"line":871,"column":12},"end":{"line":871,"column":44}},"407":{"start":{"line":873,"column":12},"end":{"line":878,"column":42}},"408":{"start":{"line":881,"column":12},"end":{"line":881,"column":67}},"409":{"start":{"line":882,"column":15},"end":{"line":906,"column":9}},"410":{"start":{"line":886,"column":12},"end":{"line":886,"column":24}},"411":{"start":{"line":888,"column":12},"end":{"line":891,"column":39}},"412":{"start":{"line":893,"column":12},"end":{"line":901,"column":42}},"413":{"start":{"line":904,"column":12},"end":{"line":904,"column":68}},"414":{"start":{"line":905,"column":12},"end":{"line":905,"column":67}},"415":{"start":{"line":908,"column":8},"end":{"line":908,"column":69}},"416":{"start":{"line":910,"column":8},"end":{"line":912,"column":9}},"417":{"start":{"line":911,"column":12},"end":{"line":911,"column":46}},"418":{"start":{"line":914,"column":8},"end":{"line":914,"column":20}},"419":{"start":{"line":918,"column":0},"end":{"line":969,"column":2}},"420":{"start":{"line":919,"column":4},"end":{"line":919,"column":19}},"421":{"start":{"line":921,"column":4},"end":{"line":934,"column":5}},"422":{"start":{"line":923,"column":8},"end":{"line":926,"column":9}},"423":{"start":{"line":924,"column":12},"end":{"line":925,"column":65}},"424":{"start":{"line":927,"column":8},"end":{"line":927,"column":68}},"425":{"start":{"line":928,"column":11},"end":{"line":934,"column":5}},"426":{"start":{"line":929,"column":8},"end":{"line":929,"column":62}},"427":{"start":{"line":930,"column":11},"end":{"line":934,"column":5}},"428":{"start":{"line":931,"column":8},"end":{"line":931,"column":71}},"429":{"start":{"line":933,"column":8},"end":{"line":933,"column":70}},"430":{"start":{"line":936,"column":4},"end":{"line":938,"column":5}},"431":{"start":{"line":937,"column":8},"end":{"line":937,"column":57}},"432":{"start":{"line":940,"column":4},"end":{"line":957,"column":5}},"433":{"start":{"line":941,"column":8},"end":{"line":944,"column":50}},"434":{"start":{"line":945,"column":8},"end":{"line":956,"column":9}},"435":{"start":{"line":946,"column":12},"end":{"line":946,"column":62}},"436":{"start":{"line":948,"column":12},"end":{"line":948,"column":72}},"437":{"start":{"line":949,"column":12},"end":{"line":952,"column":13}},"438":{"start":{"line":950,"column":16},"end":{"line":951,"column":69}},"439":{"start":{"line":954,"column":12},"end":{"line":954,"column":56}},"440":{"start":{"line":955,"column":12},"end":{"line":955,"column":72}},"441":{"start":{"line":959,"column":4},"end":{"line":962,"column":5}},"442":{"start":{"line":960,"column":8},"end":{"line":961,"column":64}},"443":{"start":{"line":964,"column":4},"end":{"line":966,"column":5}},"444":{"start":{"line":965,"column":8},"end":{"line":965,"column":57}},"445":{"start":{"line":968,"column":4},"end":{"line":968,"column":43}},"446":{"start":{"line":971,"column":0},"end":{"line":996,"column":2}},"447":{"start":{"line":975,"column":4},"end":{"line":976,"column":64}},"448":{"start":{"line":977,"column":4},"end":{"line":978,"column":64}},"449":{"start":{"line":980,"column":4},"end":{"line":980,"column":39}},"450":{"start":{"line":981,"column":4},"end":{"line":981,"column":38}},"451":{"start":{"line":983,"column":4},"end":{"line":984,"column":64}},"452":{"start":{"line":985,"column":4},"end":{"line":986,"column":64}},"453":{"start":{"line":988,"column":4},"end":{"line":988,"column":35}},"454":{"start":{"line":989,"column":4},"end":{"line":989,"column":33}},"455":{"start":{"line":991,"column":4},"end":{"line":992,"column":64}},"456":{"start":{"line":994,"column":4},"end":{"line":995,"column":58}},"457":{"start":{"line":998,"column":0},"end":{"line":1024,"column":2}},"458":{"start":{"line":1000,"column":4},"end":{"line":1000,"column":30}},"459":{"start":{"line":1003,"column":4},"end":{"line":1004,"column":46}},"460":{"start":{"line":1006,"column":4},"end":{"line":1007,"column":29}},"461":{"start":{"line":1010,"column":4},"end":{"line":1011,"column":60}},"462":{"start":{"line":1012,"column":4},"end":{"line":1012,"column":28}},"463":{"start":{"line":1013,"column":4},"end":{"line":1013,"column":27}},"464":{"start":{"line":1016,"column":4},"end":{"line":1021,"column":39}},"465":{"start":{"line":1023,"column":4},"end":{"line":1023,"column":60}},"466":{"start":{"line":1026,"column":0},"end":{"line":1050,"column":2}},"467":{"start":{"line":1028,"column":4},"end":{"line":1028,"column":30}},"468":{"start":{"line":1031,"column":4},"end":{"line":1031,"column":59}},"469":{"start":{"line":1033,"column":4},"end":{"line":1034,"column":29}},"470":{"start":{"line":1037,"column":4},"end":{"line":1037,"column":77}},"471":{"start":{"line":1038,"column":4},"end":{"line":1038,"column":28}},"472":{"start":{"line":1039,"column":4},"end":{"line":1039,"column":27}},"473":{"start":{"line":1042,"column":4},"end":{"line":1047,"column":42}},"474":{"start":{"line":1049,"column":4},"end":{"line":1049,"column":61}},"475":{"start":{"line":1052,"column":0},"end":{"line":1149,"column":2}},"476":{"start":{"line":1054,"column":4},"end":{"line":1054,"column":30}},"477":{"start":{"line":1058,"column":4},"end":{"line":1058,"column":79}},"478":{"start":{"line":1060,"column":4},"end":{"line":1061,"column":29}},"479":{"start":{"line":1063,"column":4},"end":{"line":1065,"column":17}},"480":{"start":{"line":1066,"column":4},"end":{"line":1066,"column":28}},"481":{"start":{"line":1067,"column":4},"end":{"line":1067,"column":27}},"482":{"start":{"line":1069,"column":4},"end":{"line":1069,"column":24}},"483":{"start":{"line":1070,"column":4},"end":{"line":1072,"column":5}},"484":{"start":{"line":1071,"column":8},"end":{"line":1071,"column":36}},"485":{"start":{"line":1075,"column":4},"end":{"line":1075,"column":44}},"486":{"start":{"line":1077,"column":4},"end":{"line":1077,"column":74}},"487":{"start":{"line":1078,"column":4},"end":{"line":1078,"column":69}},"488":{"start":{"line":1081,"column":4},"end":{"line":1084,"column":34}},"489":{"start":{"line":1086,"column":4},"end":{"line":1086,"column":62}},"490":{"start":{"line":1089,"column":4},"end":{"line":1092,"column":5}},"491":{"start":{"line":1090,"column":8},"end":{"line":1091,"column":74}},"492":{"start":{"line":1095,"column":4},"end":{"line":1095,"column":80}},"493":{"start":{"line":1096,"column":4},"end":{"line":1096,"column":40}},"494":{"start":{"line":1097,"column":4},"end":{"line":1097,"column":31}},"495":{"start":{"line":1098,"column":4},"end":{"line":1098,"column":30}},"496":{"start":{"line":1105,"column":4},"end":{"line":1105,"column":13}},"497":{"start":{"line":1106,"column":4},"end":{"line":1115,"column":5}},"498":{"start":{"line":1107,"column":8},"end":{"line":1107,"column":26}},"499":{"start":{"line":1109,"column":8},"end":{"line":1114,"column":43}},"500":{"start":{"line":1117,"column":4},"end":{"line":1148,"column":5}},"501":{"start":{"line":1118,"column":8},"end":{"line":1118,"column":66}},"502":{"start":{"line":1123,"column":8},"end":{"line":1123,"column":63}},"503":{"start":{"line":1124,"column":8},"end":{"line":1124,"column":61}},"504":{"start":{"line":1125,"column":8},"end":{"line":1128,"column":24}},"505":{"start":{"line":1131,"column":8},"end":{"line":1131,"column":66}},"506":{"start":{"line":1132,"column":8},"end":{"line":1132,"column":63}},"507":{"start":{"line":1136,"column":8},"end":{"line":1136,"column":63}},"508":{"start":{"line":1139,"column":8},"end":{"line":1141,"column":40}},"509":{"start":{"line":1144,"column":8},"end":{"line":1144,"column":60}},"510":{"start":{"line":1146,"column":8},"end":{"line":1147,"column":51}},"511":{"start":{"line":1151,"column":0},"end":{"line":1180,"column":2}},"512":{"start":{"line":1155,"column":4},"end":{"line":1156,"column":55}},"513":{"start":{"line":1159,"column":4},"end":{"line":1159,"column":30}},"514":{"start":{"line":1160,"column":4},"end":{"line":1160,"column":66}},"515":{"start":{"line":1161,"column":4},"end":{"line":1161,"column":47}},"516":{"start":{"line":1165,"column":4},"end":{"line":1177,"column":5}},"517":{"start":{"line":1166,"column":8},"end":{"line":1166,"column":60}},"518":{"start":{"line":1167,"column":8},"end":{"line":1176,"column":9}},"519":{"start":{"line":1168,"column":12},"end":{"line":1169,"column":65}},"520":{"start":{"line":1170,"column":12},"end":{"line":1170,"column":44}},"521":{"start":{"line":1171,"column":15},"end":{"line":1176,"column":9}},"522":{"start":{"line":1175,"column":12},"end":{"line":1175,"column":64}},"523":{"start":{"line":1179,"column":4},"end":{"line":1179,"column":43}},"524":{"start":{"line":1182,"column":0},"end":{"line":1213,"column":2}},"525":{"start":{"line":1186,"column":4},"end":{"line":1191,"column":6}},"526":{"start":{"line":1193,"column":4},"end":{"line":1193,"column":47}},"527":{"start":{"line":1194,"column":4},"end":{"line":1194,"column":49}},"528":{"start":{"line":1197,"column":4},"end":{"line":1198,"column":46}},"529":{"start":{"line":1201,"column":4},"end":{"line":1210,"column":5}},"530":{"start":{"line":1202,"column":8},"end":{"line":1202,"column":68}},"531":{"start":{"line":1203,"column":8},"end":{"line":1209,"column":9}},"532":{"start":{"line":1204,"column":12},"end":{"line":1204,"column":73}},"533":{"start":{"line":1208,"column":12},"end":{"line":1208,"column":58}},"534":{"start":{"line":1212,"column":4},"end":{"line":1212,"column":47}},"535":{"start":{"line":1215,"column":0},"end":{"line":1218,"column":2}},"536":{"start":{"line":1216,"column":4},"end":{"line":1216,"column":32}},"537":{"start":{"line":1217,"column":4},"end":{"line":1217,"column":64}},"538":{"start":{"line":1220,"column":0},"end":{"line":1233,"column":2}},"539":{"start":{"line":1221,"column":4},"end":{"line":1221,"column":34}},"540":{"start":{"line":1223,"column":4},"end":{"line":1227,"column":5}},"541":{"start":{"line":1226,"column":8},"end":{"line":1226,"column":46}},"542":{"start":{"line":1230,"column":4},"end":{"line":1232,"column":34}},"543":{"start":{"line":1235,"column":0},"end":{"line":1301,"column":2}},"544":{"start":{"line":1237,"column":4},"end":{"line":1237,"column":73}},"545":{"start":{"line":1239,"column":4},"end":{"line":1239,"column":24}},"546":{"start":{"line":1240,"column":4},"end":{"line":1240,"column":23}},"547":{"start":{"line":1241,"column":4},"end":{"line":1241,"column":26}},"548":{"start":{"line":1244,"column":4},"end":{"line":1251,"column":5}},"549":{"start":{"line":1245,"column":8},"end":{"line":1250,"column":9}},"550":{"start":{"line":1246,"column":12},"end":{"line":1246,"column":29}},"551":{"start":{"line":1248,"column":12},"end":{"line":1248,"column":65}},"552":{"start":{"line":1249,"column":12},"end":{"line":1249,"column":62}},"553":{"start":{"line":1253,"column":4},"end":{"line":1253,"column":30}},"554":{"start":{"line":1258,"column":4},"end":{"line":1258,"column":40}},"555":{"start":{"line":1259,"column":4},"end":{"line":1259,"column":39}},"556":{"start":{"line":1261,"column":4},"end":{"line":1261,"column":18}},"557":{"start":{"line":1262,"column":4},"end":{"line":1271,"column":5}},"558":{"start":{"line":1264,"column":8},"end":{"line":1264,"column":58}},"559":{"start":{"line":1268,"column":8},"end":{"line":1270,"column":35}},"560":{"start":{"line":1273,"column":4},"end":{"line":1273,"column":29}},"561":{"start":{"line":1276,"column":4},"end":{"line":1285,"column":5}},"562":{"start":{"line":1277,"column":8},"end":{"line":1284,"column":9}},"563":{"start":{"line":1278,"column":12},"end":{"line":1283,"column":13}},"564":{"start":{"line":1280,"column":16},"end":{"line":1282,"column":63}},"565":{"start":{"line":1287,"column":4},"end":{"line":1287,"column":19}},"566":{"start":{"line":1289,"column":4},"end":{"line":1295,"column":5}},"567":{"start":{"line":1290,"column":8},"end":{"line":1290,"column":60}},"568":{"start":{"line":1292,"column":8},"end":{"line":1294,"column":36}},"569":{"start":{"line":1297,"column":4},"end":{"line":1297,"column":27}},"570":{"start":{"line":1299,"column":4},"end":{"line":1300,"column":49}},"571":{"start":{"line":1303,"column":0},"end":{"line":1314,"column":2}},"572":{"start":{"line":1304,"column":4},"end":{"line":1304,"column":20}},"573":{"start":{"line":1305,"column":4},"end":{"line":1312,"column":5}},"574":{"start":{"line":1306,"column":8},"end":{"line":1306,"column":53}},"575":{"start":{"line":1308,"column":8},"end":{"line":1310,"column":28}},"576":{"start":{"line":1311,"column":8},"end":{"line":1311,"column":76}},"577":{"start":{"line":1313,"column":4},"end":{"line":1313,"column":23}},"578":{"start":{"line":1316,"column":0},"end":{"line":1347,"column":2}},"579":{"start":{"line":1318,"column":4},"end":{"line":1318,"column":55}},"580":{"start":{"line":1319,"column":4},"end":{"line":1319,"column":30}},"581":{"start":{"line":1322,"column":4},"end":{"line":1322,"column":18}},"582":{"start":{"line":1323,"column":4},"end":{"line":1325,"column":5}},"583":{"start":{"line":1324,"column":8},"end":{"line":1324,"column":56}},"584":{"start":{"line":1327,"column":4},"end":{"line":1327,"column":56}},"585":{"start":{"line":1328,"column":4},"end":{"line":1328,"column":58}},"586":{"start":{"line":1332,"column":4},"end":{"line":1332,"column":34}},"587":{"start":{"line":1333,"column":4},"end":{"line":1333,"column":34}},"588":{"start":{"line":1334,"column":4},"end":{"line":1334,"column":35}},"589":{"start":{"line":1337,"column":4},"end":{"line":1337,"column":47}},"590":{"start":{"line":1338,"column":4},"end":{"line":1338,"column":46}},"591":{"start":{"line":1339,"column":4},"end":{"line":1339,"column":37}},"592":{"start":{"line":1342,"column":4},"end":{"line":1342,"column":23}},"593":{"start":{"line":1343,"column":4},"end":{"line":1343,"column":33}},"594":{"start":{"line":1344,"column":4},"end":{"line":1344,"column":24}},"595":{"start":{"line":1346,"column":4},"end":{"line":1346,"column":16}},"596":{"start":{"line":1349,"column":0},"end":{"line":1364,"column":2}},"597":{"start":{"line":1351,"column":4},"end":{"line":1351,"column":55}},"598":{"start":{"line":1352,"column":4},"end":{"line":1352,"column":30}},"599":{"start":{"line":1354,"column":4},"end":{"line":1354,"column":22}},"600":{"start":{"line":1355,"column":4},"end":{"line":1357,"column":5}},"601":{"start":{"line":1356,"column":8},"end":{"line":1356,"column":64}},"602":{"start":{"line":1359,"column":4},"end":{"line":1359,"column":38}},"603":{"start":{"line":1361,"column":4},"end":{"line":1361,"column":45}},"604":{"start":{"line":1363,"column":4},"end":{"line":1363,"column":16}},"605":{"start":{"line":1366,"column":0},"end":{"line":1473,"column":2}},"606":{"start":{"line":1368,"column":4},"end":{"line":1368,"column":32}},"607":{"start":{"line":1369,"column":4},"end":{"line":1369,"column":30}},"608":{"start":{"line":1371,"column":4},"end":{"line":1371,"column":20}},"609":{"start":{"line":1372,"column":4},"end":{"line":1394,"column":5}},"610":{"start":{"line":1382,"column":8},"end":{"line":1382,"column":27}},"611":{"start":{"line":1384,"column":8},"end":{"line":1384,"column":34}},"612":{"start":{"line":1386,"column":8},"end":{"line":1386,"column":32}},"613":{"start":{"line":1388,"column":8},"end":{"line":1388,"column":33}},"614":{"start":{"line":1392,"column":8},"end":{"line":1393,"column":37}},"615":{"start":{"line":1397,"column":4},"end":{"line":1398,"column":48}},"616":{"start":{"line":1405,"column":4},"end":{"line":1405,"column":13}},"617":{"start":{"line":1406,"column":4},"end":{"line":1421,"column":5}},"618":{"start":{"line":1409,"column":8},"end":{"line":1409,"column":41}},"619":{"start":{"line":1411,"column":8},"end":{"line":1412,"column":56}},"620":{"start":{"line":1414,"column":8},"end":{"line":1414,"column":30}},"621":{"start":{"line":1420,"column":8},"end":{"line":1420,"column":17}},"622":{"start":{"line":1424,"column":4},"end":{"line":1426,"column":31}},"623":{"start":{"line":1429,"column":4},"end":{"line":1430,"column":61}},"624":{"start":{"line":1433,"column":4},"end":{"line":1433,"column":22}},"625":{"start":{"line":1439,"column":4},"end":{"line":1439,"column":72}},"626":{"start":{"line":1441,"column":4},"end":{"line":1442,"column":33}},"627":{"start":{"line":1444,"column":4},"end":{"line":1448,"column":39}},"628":{"start":{"line":1453,"column":4},"end":{"line":1453,"column":62}},"629":{"start":{"line":1455,"column":4},"end":{"line":1455,"column":73}},"630":{"start":{"line":1457,"column":4},"end":{"line":1472,"column":5}},"631":{"start":{"line":1460,"column":8},"end":{"line":1460,"column":45}},"632":{"start":{"line":1464,"column":8},"end":{"line":1464,"column":77}},"633":{"start":{"line":1467,"column":8},"end":{"line":1467,"column":40}},"634":{"start":{"line":1469,"column":8},"end":{"line":1469,"column":27}},"635":{"start":{"line":1471,"column":8},"end":{"line":1471,"column":26}},"636":{"start":{"line":1475,"column":0},"end":{"line":1485,"column":2}},"637":{"start":{"line":1476,"column":4},"end":{"line":1480,"column":6}},"638":{"start":{"line":1484,"column":4},"end":{"line":1484,"column":50}},"639":{"start":{"line":1487,"column":0},"end":{"line":1491,"column":2}},"640":{"start":{"line":1488,"column":4},"end":{"line":1488,"column":69}},"641":{"start":{"line":1490,"column":4},"end":{"line":1490,"column":61}},"642":{"start":{"line":1498,"column":0},"end":{"line":1533,"column":2}},"643":{"start":{"line":1499,"column":4},"end":{"line":1501,"column":5}},"644":{"start":{"line":1500,"column":8},"end":{"line":1500,"column":26}},"645":{"start":{"line":1503,"column":4},"end":{"line":1532,"column":5}},"646":{"start":{"line":1505,"column":8},"end":{"line":1505,"column":63}},"647":{"start":{"line":1506,"column":8},"end":{"line":1506,"column":23}},"648":{"start":{"line":1510,"column":8},"end":{"line":1516,"column":9}},"649":{"start":{"line":1511,"column":12},"end":{"line":1512,"column":55}},"650":{"start":{"line":1514,"column":12},"end":{"line":1514,"column":43}},"651":{"start":{"line":1515,"column":12},"end":{"line":1515,"column":42}},"652":{"start":{"line":1520,"column":8},"end":{"line":1526,"column":9}},"653":{"start":{"line":1521,"column":12},"end":{"line":1522,"column":69}},"654":{"start":{"line":1524,"column":12},"end":{"line":1524,"column":43}},"655":{"start":{"line":1525,"column":12},"end":{"line":1525,"column":42}},"656":{"start":{"line":1528,"column":8},"end":{"line":1528,"column":25}},"657":{"start":{"line":1530,"column":8},"end":{"line":1531,"column":63}},"658":{"start":{"line":1539,"column":0},"end":{"line":1567,"column":2}},"659":{"start":{"line":1542,"column":4},"end":{"line":1542,"column":44}},"660":{"start":{"line":1545,"column":4},"end":{"line":1545,"column":58}},"661":{"start":{"line":1546,"column":4},"end":{"line":1546,"column":76}},"662":{"start":{"line":1551,"column":4},"end":{"line":1551,"column":39}},"663":{"start":{"line":1552,"column":4},"end":{"line":1552,"column":52}},"664":{"start":{"line":1554,"column":4},"end":{"line":1554,"column":47}},"665":{"start":{"line":1555,"column":4},"end":{"line":1555,"column":65}},"666":{"start":{"line":1559,"column":4},"end":{"line":1559,"column":57}},"667":{"start":{"line":1562,"column":4},"end":{"line":1562,"column":75}},"668":{"start":{"line":1564,"column":4},"end":{"line":1564,"column":49}},"669":{"start":{"line":1566,"column":4},"end":{"line":1566,"column":20}},"670":{"start":{"line":1569,"column":0},"end":{"line":1569,"column":27}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":11},"end":{"line":21,"column":39}},{"start":{"line":21,"column":43},"end":{"line":21,"column":71}}]},"2":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":11},"end":{"line":29,"column":15}},{"start":{"line":29,"column":19},"end":{"line":29,"column":45}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":8}},{"start":{"line":65,"column":8},"end":{"line":65,"column":8}}]},"6":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":8}},{"start":{"line":79,"column":8},"end":{"line":79,"column":8}}]},"7":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":21},"end":{"line":80,"column":27}},{"start":{"line":80,"column":31},"end":{"line":80,"column":33}}]},"8":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":15},"end":{"line":84,"column":15}},{"start":{"line":84,"column":15},"end":{"line":84,"column":15}}]},"9":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":85,"column":12}},{"start":{"line":85,"column":12},"end":{"line":85,"column":12}}]},"10":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"11":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":8},"end":{"line":98,"column":8}},{"start":{"line":98,"column":8},"end":{"line":98,"column":8}}]},"12":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":12},"end":{"line":98,"column":28}},{"start":{"line":99,"column":16},"end":{"line":99,"column":62}},{"start":{"line":100,"column":19},"end":{"line":100,"column":66}}]},"13":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"14":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"15":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":8}},{"start":{"line":116,"column":8},"end":{"line":116,"column":8}}]},"16":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"17":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":11},"end":{"line":133,"column":11}},{"start":{"line":133,"column":11},"end":{"line":133,"column":11}}]},"18":{"line":136,"type":"binary-expr","locations":[{"start":{"line":136,"column":15},"end":{"line":136,"column":33}},{"start":{"line":137,"column":13},"end":{"line":137,"column":54}},{"start":{"line":138,"column":12},"end":{"line":138,"column":42}}]},"19":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":11},"end":{"line":139,"column":11}},{"start":{"line":139,"column":11},"end":{"line":139,"column":11}}]},"20":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"21":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":11},"end":{"line":154,"column":11}},{"start":{"line":154,"column":11},"end":{"line":154,"column":11}}]},"22":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":155,"column":8}},{"start":{"line":155,"column":8},"end":{"line":155,"column":8}}]},"23":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":11},"end":{"line":160,"column":11}},{"start":{"line":160,"column":11},"end":{"line":160,"column":11}}]},"24":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":161,"column":8}},{"start":{"line":161,"column":8},"end":{"line":161,"column":8}}]},"25":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":11},"end":{"line":166,"column":11}},{"start":{"line":166,"column":11},"end":{"line":166,"column":11}}]},"26":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":11},"end":{"line":182,"column":38}},{"start":{"line":183,"column":8},"end":{"line":183,"column":35}},{"start":{"line":184,"column":8},"end":{"line":184,"column":31}},{"start":{"line":185,"column":8},"end":{"line":185,"column":31}},{"start":{"line":186,"column":8},"end":{"line":186,"column":33}},{"start":{"line":187,"column":8},"end":{"line":187,"column":32}},{"start":{"line":188,"column":8},"end":{"line":188,"column":33}},{"start":{"line":189,"column":8},"end":{"line":189,"column":33}}]},"27":{"line":255,"type":"if","locations":[{"start":{"line":255,"column":8},"end":{"line":255,"column":8}},{"start":{"line":255,"column":8},"end":{"line":255,"column":8}}]},"28":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"29":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":4},"end":{"line":297,"column":4}},{"start":{"line":297,"column":4},"end":{"line":297,"column":4}}]},"30":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":4},"end":{"line":304,"column":4}},{"start":{"line":304,"column":4},"end":{"line":304,"column":4}}]},"31":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":4},"end":{"line":314,"column":4}},{"start":{"line":314,"column":4},"end":{"line":314,"column":4}}]},"32":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":4},"end":{"line":324,"column":4}},{"start":{"line":324,"column":4},"end":{"line":324,"column":4}}]},"33":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":11},"end":{"line":326,"column":11}},{"start":{"line":326,"column":11},"end":{"line":326,"column":11}}]},"34":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":4},"end":{"line":340,"column":4}},{"start":{"line":340,"column":4},"end":{"line":340,"column":4}}]},"35":{"line":355,"type":"if","locations":[{"start":{"line":355,"column":8},"end":{"line":355,"column":8}},{"start":{"line":355,"column":8},"end":{"line":355,"column":8}}]},"36":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":11},"end":{"line":358,"column":11}},{"start":{"line":358,"column":11},"end":{"line":358,"column":11}}]},"37":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":8},"end":{"line":376,"column":8}},{"start":{"line":376,"column":8},"end":{"line":376,"column":8}}]},"38":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":12},"end":{"line":380,"column":12}},{"start":{"line":380,"column":12},"end":{"line":380,"column":12}}]},"39":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":8},"end":{"line":392,"column":8}},{"start":{"line":392,"column":8},"end":{"line":392,"column":8}}]},"40":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":17},"end":{"line":401,"column":39}},{"start":{"line":401,"column":43},"end":{"line":401,"column":49}}]},"41":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":4},"end":{"line":412,"column":4}},{"start":{"line":412,"column":4},"end":{"line":412,"column":4}}]},"42":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":11},"end":{"line":414,"column":11}},{"start":{"line":414,"column":11},"end":{"line":414,"column":11}}]},"43":{"line":433,"type":"if","locations":[{"start":{"line":433,"column":4},"end":{"line":433,"column":4}},{"start":{"line":433,"column":4},"end":{"line":433,"column":4}}]},"44":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":4},"end":{"line":444,"column":4}},{"start":{"line":444,"column":4},"end":{"line":444,"column":4}}]},"45":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":8},"end":{"line":446,"column":8}},{"start":{"line":446,"column":8},"end":{"line":446,"column":8}}]},"46":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":8},"end":{"line":453,"column":8}},{"start":{"line":453,"column":8},"end":{"line":453,"column":8}}]},"47":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":4},"end":{"line":464,"column":4}},{"start":{"line":464,"column":4},"end":{"line":464,"column":4}}]},"48":{"line":468,"type":"if","locations":[{"start":{"line":468,"column":8},"end":{"line":468,"column":8}},{"start":{"line":468,"column":8},"end":{"line":468,"column":8}}]},"49":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":8},"end":{"line":481,"column":8}},{"start":{"line":481,"column":8},"end":{"line":481,"column":8}}]},"50":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":8},"end":{"line":488,"column":8}},{"start":{"line":488,"column":8},"end":{"line":488,"column":8}}]},"51":{"line":517,"type":"if","locations":[{"start":{"line":517,"column":4},"end":{"line":517,"column":4}},{"start":{"line":517,"column":4},"end":{"line":517,"column":4}}]},"52":{"line":525,"type":"if","locations":[{"start":{"line":525,"column":4},"end":{"line":525,"column":4}},{"start":{"line":525,"column":4},"end":{"line":525,"column":4}}]},"53":{"line":532,"type":"if","locations":[{"start":{"line":532,"column":4},"end":{"line":532,"column":4}},{"start":{"line":532,"column":4},"end":{"line":532,"column":4}}]},"54":{"line":548,"type":"if","locations":[{"start":{"line":548,"column":4},"end":{"line":548,"column":4}},{"start":{"line":548,"column":4},"end":{"line":548,"column":4}}]},"55":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":11},"end":{"line":550,"column":11}},{"start":{"line":550,"column":11},"end":{"line":550,"column":11}}]},"56":{"line":584,"type":"if","locations":[{"start":{"line":584,"column":8},"end":{"line":584,"column":8}},{"start":{"line":584,"column":8},"end":{"line":584,"column":8}}]},"57":{"line":591,"type":"if","locations":[{"start":{"line":591,"column":12},"end":{"line":591,"column":12}},{"start":{"line":591,"column":12},"end":{"line":591,"column":12}}]},"58":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":12},"end":{"line":594,"column":12}},{"start":{"line":594,"column":12},"end":{"line":594,"column":12}}]},"59":{"line":601,"type":"if","locations":[{"start":{"line":601,"column":8},"end":{"line":601,"column":8}},{"start":{"line":601,"column":8},"end":{"line":601,"column":8}}]},"60":{"line":603,"type":"if","locations":[{"start":{"line":603,"column":12},"end":{"line":603,"column":12}},{"start":{"line":603,"column":12},"end":{"line":603,"column":12}}]},"61":{"line":605,"type":"if","locations":[{"start":{"line":605,"column":16},"end":{"line":605,"column":16}},{"start":{"line":605,"column":16},"end":{"line":605,"column":16}}]},"62":{"line":621,"type":"binary-expr","locations":[{"start":{"line":621,"column":26},"end":{"line":621,"column":42}},{"start":{"line":621,"column":46},"end":{"line":621,"column":48}}]},"63":{"line":628,"type":"binary-expr","locations":[{"start":{"line":628,"column":9},"end":{"line":628,"column":15}},{"start":{"line":628,"column":19},"end":{"line":628,"column":55}}]},"64":{"line":631,"type":"binary-expr","locations":[{"start":{"line":631,"column":23},"end":{"line":631,"column":51}},{"start":{"line":631,"column":55},"end":{"line":631,"column":57}}]},"65":{"line":637,"type":"if","locations":[{"start":{"line":637,"column":12},"end":{"line":637,"column":12}},{"start":{"line":637,"column":12},"end":{"line":637,"column":12}}]},"66":{"line":644,"type":"if","locations":[{"start":{"line":644,"column":12},"end":{"line":644,"column":12}},{"start":{"line":644,"column":12},"end":{"line":644,"column":12}}]},"67":{"line":659,"type":"binary-expr","locations":[{"start":{"line":659,"column":23},"end":{"line":659,"column":51}},{"start":{"line":659,"column":55},"end":{"line":659,"column":57}}]},"68":{"line":663,"type":"if","locations":[{"start":{"line":663,"column":8},"end":{"line":663,"column":8}},{"start":{"line":663,"column":8},"end":{"line":663,"column":8}}]},"69":{"line":668,"type":"if","locations":[{"start":{"line":668,"column":8},"end":{"line":668,"column":8}},{"start":{"line":668,"column":8},"end":{"line":668,"column":8}}]},"70":{"line":668,"type":"binary-expr","locations":[{"start":{"line":668,"column":12},"end":{"line":668,"column":17}},{"start":{"line":668,"column":21},"end":{"line":668,"column":52}}]},"71":{"line":670,"type":"if","locations":[{"start":{"line":670,"column":12},"end":{"line":670,"column":12}},{"start":{"line":670,"column":12},"end":{"line":670,"column":12}}]},"72":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":12},"end":{"line":681,"column":12}},{"start":{"line":681,"column":12},"end":{"line":681,"column":12}}]},"73":{"line":692,"type":"binary-expr","locations":[{"start":{"line":692,"column":29},"end":{"line":692,"column":43}},{"start":{"line":692,"column":47},"end":{"line":692,"column":50}}]},"74":{"line":696,"type":"if","locations":[{"start":{"line":696,"column":8},"end":{"line":696,"column":8}},{"start":{"line":696,"column":8},"end":{"line":696,"column":8}}]},"75":{"line":696,"type":"binary-expr","locations":[{"start":{"line":696,"column":12},"end":{"line":696,"column":22}},{"start":{"line":696,"column":26},"end":{"line":696,"column":57}}]},"76":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":12},"end":{"line":698,"column":12}},{"start":{"line":698,"column":12},"end":{"line":698,"column":12}}]},"77":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":4},"end":{"line":710,"column":4}},{"start":{"line":710,"column":4},"end":{"line":710,"column":4}}]},"78":{"line":710,"type":"binary-expr","locations":[{"start":{"line":710,"column":8},"end":{"line":710,"column":29}},{"start":{"line":710,"column":33},"end":{"line":710,"column":58}},{"start":{"line":711,"column":8},"end":{"line":711,"column":27}},{"start":{"line":711,"column":31},"end":{"line":711,"column":50}}]},"79":{"line":715,"type":"if","locations":[{"start":{"line":715,"column":8},"end":{"line":715,"column":8}},{"start":{"line":715,"column":8},"end":{"line":715,"column":8}}]},"80":{"line":753,"type":"if","locations":[{"start":{"line":753,"column":4},"end":{"line":753,"column":4}},{"start":{"line":753,"column":4},"end":{"line":753,"column":4}}]},"81":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":4},"end":{"line":771,"column":4}},{"start":{"line":771,"column":4},"end":{"line":771,"column":4}}]},"82":{"line":771,"type":"binary-expr","locations":[{"start":{"line":771,"column":8},"end":{"line":771,"column":41}},{"start":{"line":772,"column":8},"end":{"line":772,"column":26}},{"start":{"line":773,"column":8},"end":{"line":773,"column":54}}]},"83":{"line":782,"type":"if","locations":[{"start":{"line":782,"column":4},"end":{"line":782,"column":4}},{"start":{"line":782,"column":4},"end":{"line":782,"column":4}}]},"84":{"line":784,"type":"cond-expr","locations":[{"start":{"line":784,"column":31},"end":{"line":784,"column":46}},{"start":{"line":784,"column":49},"end":{"line":784,"column":64}}]},"85":{"line":787,"type":"cond-expr","locations":[{"start":{"line":787,"column":41},"end":{"line":787,"column":51}},{"start":{"line":787,"column":54},"end":{"line":787,"column":64}}]},"86":{"line":799,"type":"if","locations":[{"start":{"line":799,"column":11},"end":{"line":799,"column":11}},{"start":{"line":799,"column":11},"end":{"line":799,"column":11}}]},"87":{"line":816,"type":"if","locations":[{"start":{"line":816,"column":4},"end":{"line":816,"column":4}},{"start":{"line":816,"column":4},"end":{"line":816,"column":4}}]},"88":{"line":828,"type":"if","locations":[{"start":{"line":828,"column":8},"end":{"line":828,"column":8}},{"start":{"line":828,"column":8},"end":{"line":828,"column":8}}]},"89":{"line":839,"type":"if","locations":[{"start":{"line":839,"column":8},"end":{"line":839,"column":8}},{"start":{"line":839,"column":8},"end":{"line":839,"column":8}}]},"90":{"line":855,"type":"if","locations":[{"start":{"line":855,"column":8},"end":{"line":855,"column":8}},{"start":{"line":855,"column":8},"end":{"line":855,"column":8}}]},"91":{"line":870,"type":"if","locations":[{"start":{"line":870,"column":15},"end":{"line":870,"column":15}},{"start":{"line":870,"column":15},"end":{"line":870,"column":15}}]},"92":{"line":882,"type":"if","locations":[{"start":{"line":882,"column":15},"end":{"line":882,"column":15}},{"start":{"line":882,"column":15},"end":{"line":882,"column":15}}]},"93":{"line":882,"type":"binary-expr","locations":[{"start":{"line":882,"column":19},"end":{"line":882,"column":28}},{"start":{"line":882,"column":32},"end":{"line":882,"column":41}}]},"94":{"line":910,"type":"if","locations":[{"start":{"line":910,"column":8},"end":{"line":910,"column":8}},{"start":{"line":910,"column":8},"end":{"line":910,"column":8}}]},"95":{"line":921,"type":"if","locations":[{"start":{"line":921,"column":4},"end":{"line":921,"column":4}},{"start":{"line":921,"column":4},"end":{"line":921,"column":4}}]},"96":{"line":923,"type":"if","locations":[{"start":{"line":923,"column":8},"end":{"line":923,"column":8}},{"start":{"line":923,"column":8},"end":{"line":923,"column":8}}]},"97":{"line":928,"type":"if","locations":[{"start":{"line":928,"column":11},"end":{"line":928,"column":11}},{"start":{"line":928,"column":11},"end":{"line":928,"column":11}}]},"98":{"line":930,"type":"if","locations":[{"start":{"line":930,"column":11},"end":{"line":930,"column":11}},{"start":{"line":930,"column":11},"end":{"line":930,"column":11}}]},"99":{"line":936,"type":"if","locations":[{"start":{"line":936,"column":4},"end":{"line":936,"column":4}},{"start":{"line":936,"column":4},"end":{"line":936,"column":4}}]},"100":{"line":936,"type":"binary-expr","locations":[{"start":{"line":936,"column":8},"end":{"line":936,"column":37}},{"start":{"line":936,"column":41},"end":{"line":936,"column":71}}]},"101":{"line":940,"type":"if","locations":[{"start":{"line":940,"column":4},"end":{"line":940,"column":4}},{"start":{"line":940,"column":4},"end":{"line":940,"column":4}}]},"102":{"line":945,"type":"if","locations":[{"start":{"line":945,"column":8},"end":{"line":945,"column":8}},{"start":{"line":945,"column":8},"end":{"line":945,"column":8}}]},"103":{"line":949,"type":"if","locations":[{"start":{"line":949,"column":12},"end":{"line":949,"column":12}},{"start":{"line":949,"column":12},"end":{"line":949,"column":12}}]},"104":{"line":959,"type":"if","locations":[{"start":{"line":959,"column":4},"end":{"line":959,"column":4}},{"start":{"line":959,"column":4},"end":{"line":959,"column":4}}]},"105":{"line":964,"type":"if","locations":[{"start":{"line":964,"column":4},"end":{"line":964,"column":4}},{"start":{"line":964,"column":4},"end":{"line":964,"column":4}}]},"106":{"line":964,"type":"binary-expr","locations":[{"start":{"line":964,"column":8},"end":{"line":964,"column":37}},{"start":{"line":964,"column":41},"end":{"line":964,"column":71}}]},"107":{"line":1070,"type":"if","locations":[{"start":{"line":1070,"column":4},"end":{"line":1070,"column":4}},{"start":{"line":1070,"column":4},"end":{"line":1070,"column":4}}]},"108":{"line":1089,"type":"if","locations":[{"start":{"line":1089,"column":4},"end":{"line":1089,"column":4}},{"start":{"line":1089,"column":4},"end":{"line":1089,"column":4}}]},"109":{"line":1106,"type":"if","locations":[{"start":{"line":1106,"column":4},"end":{"line":1106,"column":4}},{"start":{"line":1106,"column":4},"end":{"line":1106,"column":4}}]},"110":{"line":1106,"type":"binary-expr","locations":[{"start":{"line":1106,"column":8},"end":{"line":1106,"column":26}},{"start":{"line":1106,"column":30},"end":{"line":1106,"column":47}}]},"111":{"line":1117,"type":"if","locations":[{"start":{"line":1117,"column":4},"end":{"line":1117,"column":4}},{"start":{"line":1117,"column":4},"end":{"line":1117,"column":4}}]},"112":{"line":1167,"type":"if","locations":[{"start":{"line":1167,"column":8},"end":{"line":1167,"column":8}},{"start":{"line":1167,"column":8},"end":{"line":1167,"column":8}}]},"113":{"line":1171,"type":"if","locations":[{"start":{"line":1171,"column":15},"end":{"line":1171,"column":15}},{"start":{"line":1171,"column":15},"end":{"line":1171,"column":15}}]},"114":{"line":1203,"type":"if","locations":[{"start":{"line":1203,"column":8},"end":{"line":1203,"column":8}},{"start":{"line":1203,"column":8},"end":{"line":1203,"column":8}}]},"115":{"line":1223,"type":"if","locations":[{"start":{"line":1223,"column":4},"end":{"line":1223,"column":4}},{"start":{"line":1223,"column":4},"end":{"line":1223,"column":4}}]},"116":{"line":1245,"type":"if","locations":[{"start":{"line":1245,"column":8},"end":{"line":1245,"column":8}},{"start":{"line":1245,"column":8},"end":{"line":1245,"column":8}}]},"117":{"line":1262,"type":"if","locations":[{"start":{"line":1262,"column":4},"end":{"line":1262,"column":4}},{"start":{"line":1262,"column":4},"end":{"line":1262,"column":4}}]},"118":{"line":1276,"type":"if","locations":[{"start":{"line":1276,"column":4},"end":{"line":1276,"column":4}},{"start":{"line":1276,"column":4},"end":{"line":1276,"column":4}}]},"119":{"line":1278,"type":"if","locations":[{"start":{"line":1278,"column":12},"end":{"line":1278,"column":12}},{"start":{"line":1278,"column":12},"end":{"line":1278,"column":12}}]},"120":{"line":1289,"type":"if","locations":[{"start":{"line":1289,"column":4},"end":{"line":1289,"column":4}},{"start":{"line":1289,"column":4},"end":{"line":1289,"column":4}}]},"121":{"line":1305,"type":"if","locations":[{"start":{"line":1305,"column":4},"end":{"line":1305,"column":4}},{"start":{"line":1305,"column":4},"end":{"line":1305,"column":4}}]},"122":{"line":1323,"type":"if","locations":[{"start":{"line":1323,"column":4},"end":{"line":1323,"column":4}},{"start":{"line":1323,"column":4},"end":{"line":1323,"column":4}}]},"123":{"line":1355,"type":"if","locations":[{"start":{"line":1355,"column":4},"end":{"line":1355,"column":4}},{"start":{"line":1355,"column":4},"end":{"line":1355,"column":4}}]},"124":{"line":1372,"type":"if","locations":[{"start":{"line":1372,"column":4},"end":{"line":1372,"column":4}},{"start":{"line":1372,"column":4},"end":{"line":1372,"column":4}}]},"125":{"line":1406,"type":"if","locations":[{"start":{"line":1406,"column":4},"end":{"line":1406,"column":4}},{"start":{"line":1406,"column":4},"end":{"line":1406,"column":4}}]},"126":{"line":1439,"type":"cond-expr","locations":[{"start":{"line":1439,"column":52},"end":{"line":1439,"column":64}},{"start":{"line":1439,"column":67},"end":{"line":1439,"column":71}}]},"127":{"line":1457,"type":"if","locations":[{"start":{"line":1457,"column":4},"end":{"line":1457,"column":4}},{"start":{"line":1457,"column":4},"end":{"line":1457,"column":4}}]},"128":{"line":1499,"type":"if","locations":[{"start":{"line":1499,"column":4},"end":{"line":1499,"column":4}},{"start":{"line":1499,"column":4},"end":{"line":1499,"column":4}}]},"129":{"line":1503,"type":"if","locations":[{"start":{"line":1503,"column":4},"end":{"line":1503,"column":4}},{"start":{"line":1503,"column":4},"end":{"line":1503,"column":4}}]},"130":{"line":1510,"type":"if","locations":[{"start":{"line":1510,"column":8},"end":{"line":1510,"column":8}},{"start":{"line":1510,"column":8},"end":{"line":1510,"column":8}}]},"131":{"line":1520,"type":"if","locations":[{"start":{"line":1520,"column":8},"end":{"line":1520,"column":8}},{"start":{"line":1520,"column":8},"end":{"line":1520,"column":8}}]}},"code":["/* eslint no-console:0 */","/**"," * This file does the main work of building a domTree structure from a parse"," * tree. The entry point is the `buildHTML` function, which takes a parse tree."," * Then, the buildExpression, buildGroup, and various groupTypes functions are"," * called, to produce a final HTML tree."," */","","var ParseError = require(\"./ParseError\");","var Style = require(\"./Style\");","","var buildCommon = require(\"./buildCommon\");","var delimiter = require(\"./delimiter\");","var domTree = require(\"./domTree\");","var fontMetrics = require(\"./fontMetrics\");","var utils = require(\"./utils\");","","var makeSpan = buildCommon.makeSpan;","","var isSpace = function(node) {","    return node instanceof domTree.span && node.classes[0] === \"mspace\";","};","","// Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)","// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,","// and the text before Rule 19.","","var isBin = function(node) {","    return node && node.classes[0] === \"mbin\";","};","","var isBinLeftCanceller = function(node, isRealGroup) {","    // TODO: This code assumes that a node's math class is the first element","    // of its `classes` array. A later cleanup should ensure this, for","    // instance by changing the signature of `makeSpan`.","    if (node) {","        return utils.contains([\"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"],","                              node.classes[0]);","    } else {","        return isRealGroup;","    }","};","","var isBinRightCanceller = function(node, isRealGroup) {","    if (node) {","        return utils.contains([\"mrel\", \"mclose\", \"mpunct\"], node.classes[0]);","    } else {","        return isRealGroup;","    }","};","","/**"," * Take a list of nodes, build them in order, and return a list of the built"," * nodes. documentFragments are flattened into their contents, so the"," * returned list contains no fragments. `isRealGroup` is true if `expression`"," * is a real group (no atoms will be added on either side), as opposed to"," * a partial group (e.g. one created by \\color)."," */","var buildExpression = function(expression, options, isRealGroup) {","    // Parse expressions into `groups`.","    var groups = [];","    for (var i = 0; i < expression.length; i++) {","        var group = expression[i];","        var output = buildGroup(group, options);","        if (output instanceof domTree.documentFragment) {","            Array.prototype.push.apply(groups, output.children);","        } else {","            groups.push(output);","        }","    }","    // At this point `groups` consists entirely of `symbolNode`s and `span`s.","","    // Explicit spaces (e.g., \\;, \\,) should be ignored with respect to atom","    // spacing (e.g., \"add thick space between mord and mrel\"). Since CSS","    // adjacency rules implement atom spacing, spaces should be invisible to","    // CSS. So we splice them out of `groups` and into the atoms themselves.","    var spaces = null;","    for (i = 0; i < groups.length; i++) {","        if (isSpace(groups[i])) {","            spaces = spaces || [];","            spaces.push(groups[i]);","            groups.splice(i, 1);","            i--;","        } else if (spaces) {","            if (groups[i] instanceof domTree.symbolNode) {","                groups[i] = makeSpan([].concat(groups[i].classes), [groups[i]]);","            }","            buildCommon.prependChildren(groups[i], spaces);","            spaces = null;","        }","    }","    if (spaces) {","        Array.prototype.push.apply(groups, spaces);","    }","","    // Binary operators change to ordinary symbols in some contexts.","    for (i = 0; i < groups.length; i++) {","        if (isBin(groups[i])","            && (isBinLeftCanceller(groups[i - 1], isRealGroup)","                || isBinRightCanceller(groups[i + 1], isRealGroup))) {","            groups[i].classes[0] = \"mord\";","        }","    }","","    return groups;","};","","// Return math atom class (mclass) of a domTree.","var getTypeOfDomTree = function(node) {","    if (node instanceof domTree.documentFragment) {","        if (node.children.length) {","            return getTypeOfDomTree(","                node.children[node.children.length - 1]);","        }","    } else {","        if (utils.contains([\"mord\", \"mop\", \"mbin\", \"mrel\", \"mopen\", \"mclose\",","            \"mpunct\", \"minner\"], node.classes[0])) {","            return node.classes[0];","        }","    }","    return null;","};","","/**"," * Sometimes, groups perform special rules when they have superscripts or"," * subscripts attached to them. This function lets the `supsub` group know that"," * its inner element should handle the superscripts and subscripts instead of"," * handling them itself."," */","var shouldHandleSupSub = function(group, options) {","    if (!group) {","        return false;","    } else if (group.type === \"op\") {","        // Operators handle supsubs differently when they have limits","        // (e.g. `\\displaystyle\\sum_2^3`)","        return group.value.limits &&","            (options.style.size === Style.DISPLAY.size ||","            group.value.alwaysHandleSupSub);","    } else if (group.type === \"accent\") {","        return isCharacterBox(group.value.base);","    } else {","        return null;","    }","};","","/**"," * Sometimes we want to pull out the innermost element of a group. In most"," * cases, this will just be the group itself, but when ordgroups and colors have"," * a single element, we want to pull that out."," */","var getBaseElem = function(group) {","    if (!group) {","        return false;","    } else if (group.type === \"ordgroup\") {","        if (group.value.length === 1) {","            return getBaseElem(group.value[0]);","        } else {","            return group;","        }","    } else if (group.type === \"color\") {","        if (group.value.value.length === 1) {","            return getBaseElem(group.value.value[0]);","        } else {","            return group;","        }","    } else if (group.type === \"font\") {","        return getBaseElem(group.value.body);","    } else {","        return group;","    }","};","","/**"," * TeXbook algorithms often reference \"character boxes\", which are simply groups"," * with a single character in them. To decide if something is a character box,"," * we find its innermost group, and see if it is a single character."," */","var isCharacterBox = function(group) {","    var baseElem = getBaseElem(group);","","    // These are all they types of groups which hold single characters","    return baseElem.type === \"mathord\" ||","        baseElem.type === \"textord\" ||","        baseElem.type === \"bin\" ||","        baseElem.type === \"rel\" ||","        baseElem.type === \"inner\" ||","        baseElem.type === \"open\" ||","        baseElem.type === \"close\" ||","        baseElem.type === \"punct\";","};","","var makeNullDelimiter = function(options, classes) {","    return makeSpan(classes.concat([","        \"sizing\", \"reset-\" + options.size, \"size5\",","        options.style.reset(), Style.TEXT.cls(),","        \"nulldelimiter\"]));","};","","/**"," * This is a map of group types to the function used to handle that type."," * Simpler types come at the beginning, while complicated types come afterwards."," */","var groupTypes = {};","","groupTypes.mathord = function(group, options) {","    return buildCommon.makeOrd(group, options, \"mathord\");","};","","groupTypes.textord = function(group, options) {","    return buildCommon.makeOrd(group, options, \"textord\");","};","","groupTypes.bin = function(group, options) {","    return buildCommon.mathsym(","        group.value, group.mode, options, [\"mbin\"]);","};","","groupTypes.rel = function(group, options) {","    return buildCommon.mathsym(","        group.value, group.mode, options, [\"mrel\"]);","};","","groupTypes.open = function(group, options) {","    return buildCommon.mathsym(","        group.value, group.mode, options, [\"mopen\"]);","};","","groupTypes.close = function(group, options) {","    return buildCommon.mathsym(","        group.value, group.mode, options, [\"mclose\"]);","};","","groupTypes.inner = function(group, options) {","    return buildCommon.mathsym(","        group.value, group.mode, options, [\"minner\"]);","};","","groupTypes.punct = function(group, options) {","    return buildCommon.mathsym(","        group.value, group.mode, options, [\"mpunct\"]);","};","","groupTypes.ordgroup = function(group, options) {","    return makeSpan(","        [\"mord\", options.style.cls()],","        buildExpression(group.value, options.reset(), true),","        options","    );","};","","groupTypes.text = function(group, options) {","    var newOptions = options.withFont(group.value.style);","    var inner = buildExpression(group.value.body, newOptions, true);","    for (var i = 0; i < inner.length - 1; i++) {","        if (inner[i].tryCombine(inner[i + 1])) {","            inner.splice(i + 1, 1);","            i--;","        }","    }","    return makeSpan([\"mord\", \"text\", newOptions.style.cls()],","        inner, newOptions);","};","","groupTypes.color = function(group, options) {","    var elements = buildExpression(","        group.value.value,","        options.withColor(group.value.color),","        false","    );","","    // \\color isn't supposed to affect the type of the elements it contains.","    // To accomplish this, we wrap the results in a fragment, so the inner","    // elements will be able to directly interact with their neighbors. For","    // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`","    return new buildCommon.makeFragment(elements);","};","","groupTypes.supsub = function(group, options) {","    // Superscript and subscripts are handled in the TeXbook on page","    // 445-446, rules 18(a-f).","","    // Here is where we defer to the inner group if it should handle","    // superscripts and subscripts itself.","    if (shouldHandleSupSub(group.value.base, options)) {","        return groupTypes[group.value.base.type](group, options);","    }","","    var base = buildGroup(group.value.base, options.reset());","    var supmid;","    var submid;","    var sup;","    var sub;","","    var style = options.style;","    var newOptions;","","    if (group.value.sup) {","        newOptions = options.withStyle(style.sup());","        sup = buildGroup(group.value.sup, newOptions);","        supmid = makeSpan([style.reset(), style.sup().cls()],","            [sup], newOptions);","    }","","    if (group.value.sub) {","        newOptions = options.withStyle(style.sub());","        sub = buildGroup(group.value.sub, newOptions);","        submid = makeSpan([style.reset(), style.sub().cls()],","            [sub], newOptions);","    }","","    // Rule 18a","    var supShift;","    var subShift;","    if (isCharacterBox(group.value.base)) {","        supShift = 0;","        subShift = 0;","    } else {","        supShift = base.height - style.metrics.supDrop;","        subShift = base.depth + style.metrics.subDrop;","    }","","    // Rule 18c","    var minSupShift;","    if (style === Style.DISPLAY) {","        minSupShift = style.metrics.sup1;","    } else if (style.cramped) {","        minSupShift = style.metrics.sup3;","    } else {","        minSupShift = style.metrics.sup2;","    }","","    // scriptspace is a font-size-independent size, so scale it","    // appropriately","    var multiplier = Style.TEXT.sizeMultiplier *","            style.sizeMultiplier;","    var scriptspace =","        (0.5 / fontMetrics.metrics.ptPerEm) / multiplier + \"em\";","","    var supsub;","    if (!group.value.sup) {","        // Rule 18b","        subShift = Math.max(","            subShift, style.metrics.sub1,","            sub.height - 0.8 * style.metrics.xHeight);","","        supsub = buildCommon.makeVList([","            {type: \"elem\", elem: submid}","        ], \"shift\", subShift, options);","","        supsub.children[0].style.marginRight = scriptspace;","","        // Subscripts shouldn't be shifted by the base's italic correction.","        // Account for that by shifting the subscript back the appropriate","        // amount. Note we only do this when the base is a single symbol.","        if (base instanceof domTree.symbolNode) {","            supsub.children[0].style.marginLeft = -base.italic + \"em\";","        }","    } else if (!group.value.sub) {","        // Rule 18c, d","        supShift = Math.max(supShift, minSupShift,","            sup.depth + 0.25 * style.metrics.xHeight);","","        supsub = buildCommon.makeVList([","            {type: \"elem\", elem: supmid}","        ], \"shift\", -supShift, options);","","        supsub.children[0].style.marginRight = scriptspace;","    } else {","        supShift = Math.max(","            supShift, minSupShift, sup.depth + 0.25 * style.metrics.xHeight);","        subShift = Math.max(subShift, style.metrics.sub2);","","        var ruleWidth = fontMetrics.metrics.defaultRuleThickness;","","        // Rule 18e","        if ((supShift - sup.depth) - (sub.height - subShift) <","                4 * ruleWidth) {","            subShift = 4 * ruleWidth - (supShift - sup.depth) + sub.height;","            var psi = 0.8 * style.metrics.xHeight - (supShift - sup.depth);","            if (psi > 0) {","                supShift += psi;","                subShift -= psi;","            }","        }","","        supsub = buildCommon.makeVList([","            {type: \"elem\", elem: submid, shift: subShift},","            {type: \"elem\", elem: supmid, shift: -supShift}","        ], \"individualShift\", null, options);","","        // See comment above about subscripts not being shifted","        if (base instanceof domTree.symbolNode) {","            supsub.children[0].style.marginLeft = -base.italic + \"em\";","        }","","        supsub.children[0].style.marginRight = scriptspace;","        supsub.children[1].style.marginRight = scriptspace;","    }","","    // We ensure to wrap the supsub vlist in a span.msupsub to reset text-align","    var mclass = getTypeOfDomTree(base) || \"mord\";","    return makeSpan([mclass],","        [base, makeSpan([\"msupsub\"], [supsub])],","        options);","};","","groupTypes.genfrac = function(group, options) {","    // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).","    // Figure out what style this fraction should be in based on the","    // function used","    var style = options.style;","    if (group.value.size === \"display\") {","        style = Style.DISPLAY;","    } else if (group.value.size === \"text\") {","        style = Style.TEXT;","    }","","    var nstyle = style.fracNum();","    var dstyle = style.fracDen();","    var newOptions;","","    newOptions = options.withStyle(nstyle);","    var numer = buildGroup(group.value.numer, newOptions);","    var numerreset = makeSpan([style.reset(), nstyle.cls()],","        [numer], newOptions);","","    newOptions = options.withStyle(dstyle);","    var denom = buildGroup(group.value.denom, newOptions);","    var denomreset = makeSpan([style.reset(), dstyle.cls()],","        [denom], newOptions);","","    var ruleWidth;","    if (group.value.hasBarLine) {","        ruleWidth = fontMetrics.metrics.defaultRuleThickness /","            options.style.sizeMultiplier;","    } else {","        ruleWidth = 0;","    }","","    // Rule 15b","    var numShift;","    var clearance;","    var denomShift;","    if (style.size === Style.DISPLAY.size) {","        numShift = style.metrics.num1;","        if (ruleWidth > 0) {","            clearance = 3 * ruleWidth;","        } else {","            clearance = 7 * fontMetrics.metrics.defaultRuleThickness;","        }","        denomShift = style.metrics.denom1;","    } else {","        if (ruleWidth > 0) {","            numShift = style.metrics.num2;","            clearance = ruleWidth;","        } else {","            numShift = style.metrics.num3;","            clearance = 3 * fontMetrics.metrics.defaultRuleThickness;","        }","        denomShift = style.metrics.denom2;","    }","","    var frac;","    if (ruleWidth === 0) {","        // Rule 15c","        var candidateClearance =","            (numShift - numer.depth) - (denom.height - denomShift);","        if (candidateClearance < clearance) {","            numShift += 0.5 * (clearance - candidateClearance);","            denomShift += 0.5 * (clearance - candidateClearance);","        }","","        frac = buildCommon.makeVList([","            {type: \"elem\", elem: denomreset, shift: denomShift},","            {type: \"elem\", elem: numerreset, shift: -numShift}","        ], \"individualShift\", null, options);","    } else {","        // Rule 15d","        var axisHeight = style.metrics.axisHeight;","","        if ((numShift - numer.depth) - (axisHeight + 0.5 * ruleWidth) <","                clearance) {","            numShift +=","                clearance - ((numShift - numer.depth) -","                             (axisHeight + 0.5 * ruleWidth));","        }","","        if ((axisHeight - 0.5 * ruleWidth) - (denom.height - denomShift) <","                clearance) {","            denomShift +=","                clearance - ((axisHeight - 0.5 * ruleWidth) -","                             (denom.height - denomShift));","        }","","        var mid = makeSpan(","            [options.style.reset(), Style.TEXT.cls(), \"frac-line\"]);","        // Manually set the height of the line because its height is","        // created in CSS","        mid.height = ruleWidth;","","        var midShift = -(axisHeight - 0.5 * ruleWidth);","","        frac = buildCommon.makeVList([","            {type: \"elem\", elem: denomreset, shift: denomShift},","            {type: \"elem\", elem: mid,        shift: midShift},","            {type: \"elem\", elem: numerreset, shift: -numShift}","        ], \"individualShift\", null, options);","    }","","    // Since we manually change the style sometimes (with \\dfrac or \\tfrac),","    // account for the possible size change here.","    frac.height *= style.sizeMultiplier / options.style.sizeMultiplier;","    frac.depth *= style.sizeMultiplier / options.style.sizeMultiplier;","","    // Rule 15e","    var delimSize;","    if (style.size === Style.DISPLAY.size) {","        delimSize = style.metrics.delim1;","    } else {","        delimSize = style.metrics.delim2;","    }","","    var leftDelim;","    var rightDelim;","    if (group.value.leftDelim == null) {","        leftDelim = makeNullDelimiter(options, [\"mopen\"]);","    } else {","        leftDelim = delimiter.customSizedDelim(","            group.value.leftDelim, delimSize, true,","            options.withStyle(style), group.mode, [\"mopen\"]);","    }","    if (group.value.rightDelim == null) {","        rightDelim = makeNullDelimiter(options, [\"mclose\"]);","    } else {","        rightDelim = delimiter.customSizedDelim(","            group.value.rightDelim, delimSize, true,","            options.withStyle(style), group.mode, [\"mclose\"]);","    }","","    return makeSpan(","        [\"mord\", options.style.reset(), style.cls()],","        [leftDelim, makeSpan([\"mfrac\"], [frac]), rightDelim],","        options);","};","","var calculateSize = function(sizeValue, style) {","    var x = sizeValue.number;","    if (sizeValue.unit === \"ex\") {","        x *= style.metrics.emPerEx;","    } else if (sizeValue.unit === \"mu\") {","        x /= 18;","    }","    return x;","};","","groupTypes.array = function(group, options) {","    var r;","    var c;","    var nr = group.value.body.length;","    var nc = 0;","    var body = new Array(nr);","","    var style = options.style;","","    // Horizontal spacing","    var pt = 1 / fontMetrics.metrics.ptPerEm;","    var arraycolsep = 5 * pt; // \\arraycolsep in article.cls","","    // Vertical spacing","    var baselineskip = 12 * pt; // see size10.clo","    // Default \\arraystretch from lttab.dtx","    // TODO(gagern): may get redefined once we have user-defined macros","    var arraystretch = utils.deflt(group.value.arraystretch, 1);","    var arrayskip = arraystretch * baselineskip;","    var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and","    var arstrutDepth = 0.3 * arrayskip;  // \\@arstrutbox in lttab.dtx","","    var totalHeight = 0;","    for (r = 0; r < group.value.body.length; ++r) {","        var inrow = group.value.body[r];","        var height = arstrutHeight; // \\@array adds an \\@arstrut","        var depth = arstrutDepth;   // to each tow (via the template)","","        if (nc < inrow.length) {","            nc = inrow.length;","        }","","        var outrow = new Array(inrow.length);","        for (c = 0; c < inrow.length; ++c) {","            var elt = buildGroup(inrow[c], options);","            if (depth < elt.depth) {","                depth = elt.depth;","            }","            if (height < elt.height) {","                height = elt.height;","            }","            outrow[c] = elt;","        }","","        var gap = 0;","        if (group.value.rowGaps[r]) {","            gap = calculateSize(group.value.rowGaps[r].value, style);","            if (gap > 0) { // \\@argarraycr","                gap += arstrutDepth;","                if (depth < gap) {","                    depth = gap; // \\@xargarraycr","                }","                gap = 0;","            }","        }","","        outrow.height = height;","        outrow.depth = depth;","        totalHeight += height;","        outrow.pos = totalHeight;","        totalHeight += depth + gap; // \\@yargarraycr","        body[r] = outrow;","    }","","    var offset = totalHeight / 2 + style.metrics.axisHeight;","    var colDescriptions = group.value.cols || [];","    var cols = [];","    var colSep;","    var colDescrNum;","    for (c = 0, colDescrNum = 0;","         // Continue while either there are more columns or more column","         // descriptions, so trailing separators don't get lost.","         c < nc || colDescrNum < colDescriptions.length;","         ++c, ++colDescrNum) {","","        var colDescr = colDescriptions[colDescrNum] || {};","","        var firstSeparator = true;","        while (colDescr.type === \"separator\") {","            // If there is more than one separator in a row, add a space","            // between them.","            if (!firstSeparator) {","                colSep = makeSpan([\"arraycolsep\"], []);","                colSep.style.width =","                    fontMetrics.metrics.doubleRuleSep + \"em\";","                cols.push(colSep);","            }","","            if (colDescr.separator === \"|\") {","                var separator = makeSpan(","                    [\"vertical-separator\"],","                    []);","                separator.style.height = totalHeight + \"em\";","                separator.style.verticalAlign =","                    -(totalHeight - offset) + \"em\";","","                cols.push(separator);","            } else {","                throw new ParseError(","                    \"Invalid separator type: \" + colDescr.separator);","            }","","            colDescrNum++;","            colDescr = colDescriptions[colDescrNum] || {};","            firstSeparator = false;","        }","","        if (c >= nc) {","            continue;","        }","","        var sepwidth;","        if (c > 0 || group.value.hskipBeforeAndAfter) {","            sepwidth = utils.deflt(colDescr.pregap, arraycolsep);","            if (sepwidth !== 0) {","                colSep = makeSpan([\"arraycolsep\"], []);","                colSep.style.width = sepwidth + \"em\";","                cols.push(colSep);","            }","        }","","        var col = [];","        for (r = 0; r < nr; ++r) {","            var row = body[r];","            var elem = row[c];","            if (!elem) {","                continue;","            }","            var shift = row.pos - offset;","            elem.depth = row.depth;","            elem.height = row.height;","            col.push({type: \"elem\", elem: elem, shift: shift});","        }","","        col = buildCommon.makeVList(col, \"individualShift\", null, options);","        col = makeSpan(","            [\"col-align-\" + (colDescr.align || \"c\")],","            [col]);","        cols.push(col);","","        if (c < nc - 1 || group.value.hskipBeforeAndAfter) {","            sepwidth = utils.deflt(colDescr.postgap, arraycolsep);","            if (sepwidth !== 0) {","                colSep = makeSpan([\"arraycolsep\"], []);","                colSep.style.width = sepwidth + \"em\";","                cols.push(colSep);","            }","        }","    }","    body = makeSpan([\"mtable\"], cols);","    return makeSpan([\"mord\"], [body], options);","};","","groupTypes.spacing = function(group, options) {","    if (group.value === \"\\\\ \" || group.value === \"\\\\space\" ||","        group.value === \" \" || group.value === \"~\") {","        // Spaces are generated by adding an actual space. Each of these","        // things has an entry in the symbols table, so these will be turned","        // into appropriate outputs.","        if (group.mode === \"text\") {","            return buildCommon.makeOrd(group, options, \"textord\");","        } else {","            return makeSpan([\"mspace\"],","                [buildCommon.mathsym(group.value, group.mode, options)],","                options);","        }","    } else {","        // Other kinds of spaces are of arbitrary width. We use CSS to","        // generate these.","        return makeSpan(","            [\"mspace\",","                buildCommon.spacingFunctions[group.value].className],","            [], options);","    }","};","","groupTypes.llap = function(group, options) {","    var inner = makeSpan(","        [\"inner\"], [buildGroup(group.value.body, options.reset())]);","    var fix = makeSpan([\"fix\"], []);","    return makeSpan(","        [\"mord\", \"llap\", options.style.cls()], [inner, fix], options);","};","","groupTypes.rlap = function(group, options) {","    var inner = makeSpan(","        [\"inner\"], [buildGroup(group.value.body, options.reset())]);","    var fix = makeSpan([\"fix\"], []);","    return makeSpan(","        [\"mord\", \"rlap\", options.style.cls()], [inner, fix], options);","};","","groupTypes.op = function(group, options) {","    // Operators are handled in the TeXbook pg. 443-444, rule 13(a).","    var supGroup;","    var subGroup;","    var hasLimits = false;","    if (group.type === \"supsub\") {","        // If we have limits, supsub will pass us its group to handle. Pull","        // out the superscript and subscript and set the group to the op in","        // its base.","        supGroup = group.value.sup;","        subGroup = group.value.sub;","        group = group.value.base;","        hasLimits = true;","    }","","    var style = options.style;","","    // Most operators have a large successor symbol, but these don't.","    var noSuccessor = [","        \"\\\\smallint\"","    ];","","    var large = false;","    if (style.size === Style.DISPLAY.size &&","        group.value.symbol &&","        !utils.contains(noSuccessor, group.value.body)) {","","        // Most symbol operators get larger in displaystyle (rule 13)","        large = true;","    }","","    var base;","    var baseShift = 0;","    var slant = 0;","    if (group.value.symbol) {","        // If this is a symbol, create the symbol.","        var fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";","        base = buildCommon.makeSymbol(","            group.value.body, fontName, \"math\", options,","            [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);","","        // Shift the symbol so its center lies on the axis (rule 13). It","        // appears that our fonts have the centers of the symbols already","        // almost on the axis, so these numbers are very small. Note we","        // don't actually apply this here, but instead it is used either in","        // the vlist creation or separately when there are no limits.","        baseShift = (base.height - base.depth) / 2 -","            style.metrics.axisHeight * style.sizeMultiplier;","","        // The slant of the symbol is just its italic correction.","        slant = base.italic;","    } else if (group.value.value) {","        // If this is a list, compose that list.","        var inner = buildExpression(group.value.value, options, true);","","        base = makeSpan([\"mop\"], inner, options);","    } else {","        // Otherwise, this is a text operator. Build the text from the","        // operator's name.","        // TODO(emily): Add a space in the middle of some of these","        // operators, like \\limsup","        var output = [];","        for (var i = 1; i < group.value.body.length; i++) {","            output.push(buildCommon.mathsym(group.value.body[i], group.mode));","        }","        base = makeSpan([\"mop\"], output, options);","    }","","    if (hasLimits) {","        // IE 8 clips \\int if it is in a display: inline-block. We wrap it","        // in a new span so it is an inline, and works.","        base = makeSpan([], [base]);","","        var supmid;","        var supKern;","        var submid;","        var subKern;","        var newOptions;","        // We manually have to handle the superscripts and subscripts. This,","        // aside from the kern calculations, is copied from supsub.","        if (supGroup) {","            newOptions = options.withStyle(style.sup());","            var sup = buildGroup(supGroup, newOptions);","            supmid = makeSpan([style.reset(), style.sup().cls()],","                [sup], newOptions);","","            supKern = Math.max(","                fontMetrics.metrics.bigOpSpacing1,","                fontMetrics.metrics.bigOpSpacing3 - sup.depth);","        }","","        if (subGroup) {","            newOptions = options.withStyle(style.sub());","            var sub = buildGroup(subGroup, newOptions);","            submid = makeSpan([style.reset(), style.sub().cls()],","                [sub], newOptions);","","            subKern = Math.max(","                fontMetrics.metrics.bigOpSpacing2,","                fontMetrics.metrics.bigOpSpacing4 - sub.height);","        }","","        // Build the final group as a vlist of the possible subscript, base,","        // and possible superscript.","        var finalGroup;","        var top;","        var bottom;","        if (!supGroup) {","            top = base.height - baseShift;","","            finalGroup = buildCommon.makeVList([","                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},","                {type: \"elem\", elem: submid},","                {type: \"kern\", size: subKern},","                {type: \"elem\", elem: base}","            ], \"top\", top, options);","","            // Here, we shift the limits by the slant of the symbol. Note","            // that we are supposed to shift the limits by 1/2 of the slant,","            // but since we are centering the limits adding a full slant of","            // margin will shift by 1/2 that.","            finalGroup.children[0].style.marginLeft = -slant + \"em\";","        } else if (!subGroup) {","            bottom = base.depth + baseShift;","","            finalGroup = buildCommon.makeVList([","                {type: \"elem\", elem: base},","                {type: \"kern\", size: supKern},","                {type: \"elem\", elem: supmid},","                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5}","            ], \"bottom\", bottom, options);","","            // See comment above about slants","            finalGroup.children[1].style.marginLeft = slant + \"em\";","        } else if (!supGroup && !subGroup) {","            // This case probably shouldn't occur (this would mean the","            // supsub was sending us a group with no superscript or","            // subscript) but be safe.","            return base;","        } else {","            bottom = fontMetrics.metrics.bigOpSpacing5 +","                submid.height + submid.depth +","                subKern +","                base.depth + baseShift;","","            finalGroup = buildCommon.makeVList([","                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5},","                {type: \"elem\", elem: submid},","                {type: \"kern\", size: subKern},","                {type: \"elem\", elem: base},","                {type: \"kern\", size: supKern},","                {type: \"elem\", elem: supmid},","                {type: \"kern\", size: fontMetrics.metrics.bigOpSpacing5}","            ], \"bottom\", bottom, options);","","            // See comment above about slants","            finalGroup.children[0].style.marginLeft = -slant + \"em\";","            finalGroup.children[2].style.marginLeft = slant + \"em\";","        }","","        return makeSpan([\"mop\", \"op-limits\"], [finalGroup], options);","    } else {","        if (group.value.symbol) {","            base.style.top = baseShift + \"em\";","        }","","        return base;","    }","};","","groupTypes.mod = function(group, options) {","    var inner = [];","","    if (group.value.modType === \"bmod\") {","        // “\\nonscript\\mskip-\\medmuskip\\mkern5mu”","        if (!options.style.isTight()) {","            inner.push(makeSpan(","                [\"mspace\", \"negativemediumspace\"], [], options));","        }","        inner.push(makeSpan([\"mspace\", \"thickspace\"], [], options));","    } else if (options.style.size === Style.DISPLAY.size) {","        inner.push(makeSpan([\"mspace\", \"quad\"], [], options));","    } else if (group.value.modType === \"mod\") {","        inner.push(makeSpan([\"mspace\", \"twelvemuspace\"], [], options));","    } else {","        inner.push(makeSpan([\"mspace\", \"eightmuspace\"], [], options));","    }","","    if (group.value.modType === \"pod\" || group.value.modType === \"pmod\") {","        inner.push(buildCommon.mathsym(\"(\", group.mode));","    }","","    if (group.value.modType !== \"pod\") {","        var modInner = [","            buildCommon.mathsym(\"m\", group.mode),","            buildCommon.mathsym(\"o\", group.mode),","            buildCommon.mathsym(\"d\", group.mode)];","        if (group.value.modType === \"bmod\") {","            inner.push(makeSpan([\"mbin\"], modInner, options));","            // “\\mkern5mu\\nonscript\\mskip-\\medmuskip”","            inner.push(makeSpan([\"mspace\", \"thickspace\"], [], options));","            if (!options.style.isTight()) {","                inner.push(makeSpan(","                    [\"mspace\", \"negativemediumspace\"], [], options));","            }","        } else {","            Array.prototype.push.apply(inner, modInner);","            inner.push(makeSpan([\"mspace\", \"sixmuspace\"], [], options));","        }","    }","","    if (group.value.value) {","        Array.prototype.push.apply(inner,","            buildExpression(group.value.value, options, false));","    }","","    if (group.value.modType === \"pod\" || group.value.modType === \"pmod\") {","        inner.push(buildCommon.mathsym(\")\", group.mode));","    }","","    return buildCommon.makeFragment(inner);","};","","groupTypes.katex = function(group, options) {","    // The KaTeX logo. The offsets for the K and a were chosen to look","    // good, but the offsets for the T, E, and X were taken from the","    // definition of \\TeX in TeX (see TeXbook pg. 356)","    var k = makeSpan(","        [\"k\"], [buildCommon.mathsym(\"K\", group.mode)], options);","    var a = makeSpan(","        [\"a\"], [buildCommon.mathsym(\"A\", group.mode)], options);","","    a.height = (a.height + 0.2) * 0.75;","    a.depth = (a.height - 0.2) * 0.75;","","    var t = makeSpan(","        [\"t\"], [buildCommon.mathsym(\"T\", group.mode)], options);","    var e = makeSpan(","        [\"e\"], [buildCommon.mathsym(\"E\", group.mode)], options);","","    e.height = (e.height - 0.2155);","    e.depth = (e.depth + 0.2155);","","    var x = makeSpan(","        [\"x\"], [buildCommon.mathsym(\"X\", group.mode)], options);","","    return makeSpan(","        [\"mord\", \"katex-logo\"], [k, a, t, e, x], options);","};","","groupTypes.overline = function(group, options) {","    // Overlines are handled in the TeXbook pg 443, Rule 9.","    var style = options.style;","","    // Build the inner group in the cramped style.","    var innerGroup = buildGroup(group.value.body,","            options.withStyle(style.cramp()));","","    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /","        style.sizeMultiplier;","","    // Create the line above the body","    var line = makeSpan(","        [style.reset(), Style.TEXT.cls(), \"overline-line\"]);","    line.height = ruleWidth;","    line.maxFontSize = 1.0;","","    // Generate the vlist, with the appropriate kerns","    var vlist = buildCommon.makeVList([","        {type: \"elem\", elem: innerGroup},","        {type: \"kern\", size: 3 * ruleWidth},","        {type: \"elem\", elem: line},","        {type: \"kern\", size: ruleWidth}","    ], \"firstBaseline\", null, options);","","    return makeSpan([\"mord\", \"overline\"], [vlist], options);","};","","groupTypes.underline = function(group, options) {","    // Underlines are handled in the TeXbook pg 443, Rule 10.","    var style = options.style;","","    // Build the inner group.","    var innerGroup = buildGroup(group.value.body, options);","","    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /","        style.sizeMultiplier;","","    // Create the line above the body","    var line = makeSpan([style.reset(), Style.TEXT.cls(), \"underline-line\"]);","    line.height = ruleWidth;","    line.maxFontSize = 1.0;","","    // Generate the vlist, with the appropriate kerns","    var vlist = buildCommon.makeVList([","        {type: \"kern\", size: ruleWidth},","        {type: \"elem\", elem: line},","        {type: \"kern\", size: 3 * ruleWidth},","        {type: \"elem\", elem: innerGroup}","    ], \"top\", innerGroup.height, options);","","    return makeSpan([\"mord\", \"underline\"], [vlist], options);","};","","groupTypes.sqrt = function(group, options) {","    // Square roots are handled in the TeXbook pg. 443, Rule 11.","    var style = options.style;","","    // First, we do the same steps as in overline to build the inner group","    // and line","    var inner = buildGroup(group.value.body, options.withStyle(style.cramp()));","","    var ruleWidth = fontMetrics.metrics.defaultRuleThickness /","        style.sizeMultiplier;","","    var line = makeSpan(","        [style.reset(), Style.TEXT.cls(), \"sqrt-line\"], [],","        options);","    line.height = ruleWidth;","    line.maxFontSize = 1.0;","","    var phi = ruleWidth;","    if (style.id < Style.TEXT.id) {","        phi = style.metrics.xHeight;","    }","","    // Calculate the clearance between the body and line","    var lineClearance = ruleWidth + phi / 4;","","    var innerHeight = (inner.height + inner.depth) * style.sizeMultiplier;","    var minDelimiterHeight = innerHeight + lineClearance + ruleWidth;","","    // Create a \\surd delimiter of the required minimum size","    var delim = makeSpan([\"sqrt-sign\"], [","        delimiter.customSizedDelim(\"\\\\surd\", minDelimiterHeight,","                                   false, options, group.mode)],","                         options);","","    var delimDepth = (delim.height + delim.depth) - ruleWidth;","","    // Adjust the clearance based on the delimiter size","    if (delimDepth > inner.height + inner.depth + lineClearance) {","        lineClearance =","            (lineClearance + delimDepth - inner.height - inner.depth) / 2;","    }","","    // Shift the delimiter so that its top lines up with the top of the line","    var delimShift = -(inner.height + lineClearance + ruleWidth) + delim.height;","    delim.style.top = delimShift + \"em\";","    delim.height -= delimShift;","    delim.depth += delimShift;","","    // We add a special case here, because even when `inner` is empty, we","    // still get a line. So, we use a simple heuristic to decide if we","    // should omit the body entirely. (note this doesn't work for something","    // like `\\sqrt{\\rlap{x}}`, but if someone is doing that they deserve for","    // it not to work.","    var body;","    if (inner.height === 0 && inner.depth === 0) {","        body = makeSpan();","    } else {","        body = buildCommon.makeVList([","            {type: \"elem\", elem: inner},","            {type: \"kern\", size: lineClearance},","            {type: \"elem\", elem: line},","            {type: \"kern\", size: ruleWidth}","        ], \"firstBaseline\", null, options);","    }","","    if (!group.value.index) {","        return makeSpan([\"mord\", \"sqrt\"], [delim, body], options);","    } else {","        // Handle the optional root index","","        // The index is always in scriptscript style","        var newOptions = options.withStyle(Style.SCRIPTSCRIPT);","        var root = buildGroup(group.value.index, newOptions);","        var rootWrap = makeSpan(","            [style.reset(), Style.SCRIPTSCRIPT.cls()],","            [root],","            newOptions);","","        // Figure out the height and depth of the inner part","        var innerRootHeight = Math.max(delim.height, body.height);","        var innerRootDepth = Math.max(delim.depth, body.depth);","","        // The amount the index is shifted by. This is taken from the TeX","        // source, in the definition of `\\r@@t`.","        var toShift = 0.6 * (innerRootHeight - innerRootDepth);","","        // Build a VList with the superscript shifted up correctly","        var rootVList = buildCommon.makeVList(","            [{type: \"elem\", elem: rootWrap}],","            \"shift\", -toShift, options);","        // Add a class surrounding it so we can add on the appropriate","        // kerning","        var rootVListWrap = makeSpan([\"root\"], [rootVList]);","","        return makeSpan([\"mord\", \"sqrt\"],","            [rootVListWrap, delim, body], options);","    }","};","","groupTypes.sizing = function(group, options) {","    // Handle sizing operators like \\Huge. Real TeX doesn't actually allow","    // these functions inside of math expressions, so we do some special","    // handling.","    var inner = buildExpression(group.value.value,","            options.withSize(group.value.size), false);","","    // Compute the correct maxFontSize.","    var style = options.style;","    var fontSize = buildCommon.sizingMultiplier[group.value.size];","    fontSize = fontSize * style.sizeMultiplier;","","    // Add size-resetting classes to the inner list and set maxFontSize","    // manually. Handle nested size changes.","    for (var i = 0; i < inner.length; i++) {","        var pos = utils.indexOf(inner[i].classes, \"sizing\");","        if (pos < 0) {","            inner[i].classes.push(\"sizing\", \"reset-\" + options.size,","                                  group.value.size, style.cls());","            inner[i].maxFontSize = fontSize;","        } else if (inner[i].classes[pos + 1] === \"reset-\" + group.value.size) {","            // This is a nested size change: e.g., inner[i] is the \"b\" in","            // `\\Huge a \\small b`. Override the old size (the `reset-` class)","            // but not the new size.","            inner[i].classes[pos + 1] = \"reset-\" + options.size;","        }","    }","","    return buildCommon.makeFragment(inner);","};","","groupTypes.styling = function(group, options) {","    // Style changes are handled in the TeXbook on pg. 442, Rule 3.","","    // Figure out what style we're changing to.","    var styleMap = {","        \"display\": Style.DISPLAY,","        \"text\": Style.TEXT,","        \"script\": Style.SCRIPT,","        \"scriptscript\": Style.SCRIPTSCRIPT","    };","","    var newStyle = styleMap[group.value.style];","    var newOptions = options.withStyle(newStyle);","","    // Build the inner expression in the new style.","    var inner = buildExpression(","        group.value.value, newOptions, false);","","    // Add style-resetting classes to the inner list. Handle nested changes.","    for (var i = 0; i < inner.length; i++) {","        var pos = utils.indexOf(inner[i].classes, newStyle.reset());","        if (pos < 0) {","            inner[i].classes.push(options.style.reset(), newStyle.cls());","        } else {","            // This is a nested style change, as `\\textstyle a\\scriptstyle b`.","            // Only override the old style (the reset class).","            inner[i].classes[pos] = options.style.reset();","        }","    }","","    return new buildCommon.makeFragment(inner);","};","","groupTypes.font = function(group, options) {","    var font = group.value.font;","    return buildGroup(group.value.body, options.withFont(font));","};","","groupTypes.delimsizing = function(group, options) {","    var delim = group.value.value;","","    if (delim === \".\") {","        // Empty delimiters still count as elements, even though they don't","        // show anything.","        return makeSpan([group.value.mclass]);","    }","","    // Use delimiter.sizedDelim to generate the delimiter.","    return delimiter.sizedDelim(","            delim, group.value.size, options, group.mode,","            [group.value.mclass]);","};","","groupTypes.leftright = function(group, options) {","    // Build the inner expression","    var inner = buildExpression(group.value.body, options.reset(), true);","","    var innerHeight = 0;","    var innerDepth = 0;","    var hadMiddle = false;","","    // Calculate its height and depth","    for (var i = 0; i < inner.length; i++) {","        if (inner[i].isMiddle) {","            hadMiddle = true;","        } else {","            innerHeight = Math.max(inner[i].height, innerHeight);","            innerDepth = Math.max(inner[i].depth, innerDepth);","        }","    }","","    var style = options.style;","","    // The size of delimiters is the same, regardless of what style we are","    // in. Thus, to correctly calculate the size of delimiter we need around","    // a group, we scale down the inner size based on the size.","    innerHeight *= style.sizeMultiplier;","    innerDepth *= style.sizeMultiplier;","","    var leftDelim;","    if (group.value.left === \".\") {","        // Empty delimiters in \\left and \\right make null delimiter spaces.","        leftDelim = makeNullDelimiter(options, [\"mopen\"]);","    } else {","        // Otherwise, use leftRightDelim to generate the correct sized","        // delimiter.","        leftDelim = delimiter.leftRightDelim(","            group.value.left, innerHeight, innerDepth, options,","            group.mode, [\"mopen\"]);","    }","    // Add it to the beginning of the expression","    inner.unshift(leftDelim);","","    // Handle middle delimiters","    if (hadMiddle) {","        for (i = 1; i < inner.length; i++) {","            if (inner[i].isMiddle) {","                // Apply the options that were active when \\middle was called","                inner[i] = delimiter.leftRightDelim(","                    inner[i].isMiddle.value, innerHeight, innerDepth,","                    inner[i].isMiddle.options, group.mode, []);","            }","        }","    }","","    var rightDelim;","    // Same for the right delimiter","    if (group.value.right === \".\") {","        rightDelim = makeNullDelimiter(options, [\"mclose\"]);","    } else {","        rightDelim = delimiter.leftRightDelim(","            group.value.right, innerHeight, innerDepth, options,","            group.mode, [\"mclose\"]);","    }","    // Add it to the end of the expression.","    inner.push(rightDelim);","","    return makeSpan(","        [\"minner\", style.cls()], inner, options);","};","","groupTypes.middle = function(group, options) {","    var middleDelim;","    if (group.value.value === \".\") {","        middleDelim = makeNullDelimiter(options, []);","    } else {","        middleDelim = delimiter.sizedDelim(","            group.value.value, 1, options,","            group.mode, []);","        middleDelim.isMiddle = {value: group.value.value, options: options};","    }","    return middleDelim;","};","","groupTypes.rule = function(group, options) {","    // Make an empty span for the rule","    var rule = makeSpan([\"mord\", \"rule\"], [], options);","    var style = options.style;","","    // Calculate the shift, width, and height of the rule, and account for units","    var shift = 0;","    if (group.value.shift) {","        shift = calculateSize(group.value.shift, style);","    }","","    var width = calculateSize(group.value.width, style);","    var height = calculateSize(group.value.height, style);","","    // The sizes of rules are absolute, so make it larger if we are in a","    // smaller style.","    shift /= style.sizeMultiplier;","    width /= style.sizeMultiplier;","    height /= style.sizeMultiplier;","","    // Style the rule to the right size","    rule.style.borderRightWidth = width + \"em\";","    rule.style.borderTopWidth = height + \"em\";","    rule.style.bottom = shift + \"em\";","","    // Record the height and width","    rule.width = width;","    rule.height = height + shift;","    rule.depth = -shift;","","    return rule;","};","","groupTypes.kern = function(group, options) {","    // Make an empty span for the rule","    var rule = makeSpan([\"mord\", \"rule\"], [], options);","    var style = options.style;","","    var dimension = 0;","    if (group.value.dimension) {","        dimension = calculateSize(group.value.dimension, style);","    }","","    dimension /= style.sizeMultiplier;","","    rule.style.marginLeft = dimension + \"em\";","","    return rule;","};","","groupTypes.accent = function(group, options) {","    // Accents are handled in the TeXbook pg. 443, rule 12.","    var base = group.value.base;","    var style = options.style;","","    var supsubGroup;","    if (group.type === \"supsub\") {","        // If our base is a character box, and we have superscripts and","        // subscripts, the supsub will defer to us. In particular, we want","        // to attach the superscripts and subscripts to the inner body (so","        // that the position of the superscripts and subscripts won't be","        // affected by the height of the accent). We accomplish this by","        // sticking the base of the accent into the base of the supsub, and","        // rendering that, while keeping track of where the accent is.","","        // The supsub group is the group that was passed in","        var supsub = group;","        // The real accent group is the base of the supsub group","        group = supsub.value.base;","        // The character box is the base of the accent group","        base = group.value.base;","        // Stick the character box into the base of the supsub group","        supsub.value.base = base;","","        // Rerender the supsub group with its new base, and store that","        // result.","        supsubGroup = buildGroup(","            supsub, options.reset());","    }","","    // Build the base group","    var body = buildGroup(","        base, options.withStyle(style.cramp()));","","    // Calculate the skew of the accent. This is based on the line \"If the","    // nucleus is not a single character, let s = 0; otherwise set s to the","    // kern amount for the nucleus followed by the \\skewchar of its font.\"","    // Note that our skew metrics are just the kern between each character","    // and the skewchar.","    var skew;","    if (isCharacterBox(base)) {","        // If the base is a character box, then we want the skew of the","        // innermost character. To do that, we find the innermost character:","        var baseChar = getBaseElem(base);","        // Then, we render its group to get the symbol inside it","        var baseGroup = buildGroup(","            baseChar, options.withStyle(style.cramp()));","        // Finally, we pull the skew off of the symbol.","        skew = baseGroup.skew;","        // Note that we now throw away baseGroup, because the layers we","        // removed with getBaseElem might contain things like \\color which","        // we can't get rid of.","        // TODO(emily): Find a better way to get the skew","    } else {","        skew = 0;","    }","","    // calculate the amount of space between the body and the accent","    var clearance = Math.min(","        body.height,","        style.metrics.xHeight);","","    // Build the accent","    var accent = buildCommon.makeSymbol(","        group.value.accent, \"Main-Regular\", \"math\", options);","    // Remove the italic correction of the accent, because it only serves to","    // shift the accent over to a place we don't want.","    accent.italic = 0;","","    // The \\vec character that the fonts use is a combining character, and","    // thus shows up much too far to the left. To account for this, we add a","    // specific class which shifts the accent over to where we want it.","    // TODO(emily): Fix this in a better way, like by changing the font","    var vecClass = group.value.accent === \"\\\\vec\" ? \"accent-vec\" : null;","","    var accentBody = makeSpan([\"accent-body\", vecClass], [","        makeSpan([], [accent])]);","","    accentBody = buildCommon.makeVList([","        {type: \"elem\", elem: body},","        {type: \"kern\", size: -clearance},","        {type: \"elem\", elem: accentBody}","    ], \"firstBaseline\", null, options);","","    // Shift the accent over by the skew. Note we shift by twice the skew","    // because we are centering the accent, so by adding 2*skew to the left,","    // we shift it to the right by 1*skew.","    accentBody.children[1].style.marginLeft = 2 * skew + \"em\";","","    var accentWrap = makeSpan([\"mord\", \"accent\"], [accentBody], options);","","    if (supsubGroup) {","        // Here, we replace the \"base\" child of the supsub with our newly","        // generated accent.","        supsubGroup.children[0] = accentWrap;","","        // Since we don't rerun the height calculation after replacing the","        // accent, we manually recalculate height.","        supsubGroup.height = Math.max(accentWrap.height, supsubGroup.height);","","        // Accents should always be ords, even when their innards are not.","        supsubGroup.classes[0] = \"mord\";","","        return supsubGroup;","    } else {","        return accentWrap;","    }","};","","groupTypes.phantom = function(group, options) {","    var elements = buildExpression(","        group.value.value,","        options.withPhantom(),","        false","    );","","    // \\phantom isn't supposed to affect the elements it contains.","    // See \"color\" for more details.","    return new buildCommon.makeFragment(elements);","};","","groupTypes.mclass = function(group, options) {","    var elements = buildExpression(group.value.value, options, true);","","    return makeSpan([group.value.mclass], elements, options);","};","","/**"," * buildGroup is the function that takes a group and calls the correct groupType"," * function for it. It also handles the interaction of size and style changes"," * between parents and children."," */","var buildGroup = function(group, options) {","    if (!group) {","        return makeSpan();","    }","","    if (groupTypes[group.type]) {","        // Call the groupTypes function","        var groupNode = groupTypes[group.type](group, options);","        var multiplier;","","        // If the style changed between the parent and the current group,","        // account for the size difference","        if (options.style !== options.parentStyle) {","            multiplier = options.style.sizeMultiplier /","                    options.parentStyle.sizeMultiplier;","","            groupNode.height *= multiplier;","            groupNode.depth *= multiplier;","        }","","        // If the size changed between the parent and the current group, account","        // for that size difference.","        if (options.size !== options.parentSize) {","            multiplier = buildCommon.sizingMultiplier[options.size] /","                    buildCommon.sizingMultiplier[options.parentSize];","","            groupNode.height *= multiplier;","            groupNode.depth *= multiplier;","        }","","        return groupNode;","    } else {","        throw new ParseError(","            \"Got group of unknown type: '\" + group.type + \"'\");","    }","};","","/**"," * Take an entire parse tree, and build it into an appropriate set of HTML"," * nodes."," */","var buildHTML = function(tree, options) {","    // buildExpression is destructive, so we need to make a clone","    // of the incoming tree so that it isn't accidentally changed","    tree = JSON.parse(JSON.stringify(tree));","","    // Build the expression contained in the tree","    var expression = buildExpression(tree, options, true);","    var body = makeSpan([\"base\", options.style.cls()], expression, options);","","    // Add struts, which ensure that the top of the HTML element falls at the","    // height of the expression, and the bottom of the HTML element falls at the","    // depth of the expression.","    var topStrut = makeSpan([\"strut\"]);","    var bottomStrut = makeSpan([\"strut\", \"bottom\"]);","","    topStrut.style.height = body.height + \"em\";","    bottomStrut.style.height = (body.height + body.depth) + \"em\";","    // We'd like to use `vertical-align: top` but in IE 9 this lowers the","    // baseline of the box to the bottom of this strut (instead staying in the","    // normal place) so we use an absolute value for vertical-align instead","    bottomStrut.style.verticalAlign = -body.depth + \"em\";","","    // Wrap the struts and body together","    var htmlNode = makeSpan([\"katex-html\"], [topStrut, bottomStrut, body]);","","    htmlNode.setAttribute(\"aria-hidden\", \"true\");","","    return htmlNode;","};","","module.exports = buildHTML;",""],"l":{"9":1,"10":1,"12":1,"13":1,"14":1,"15":1,"16":1,"18":1,"20":1,"21":0,"28":1,"29":0,"32":1,"36":0,"37":0,"40":0,"44":1,"45":0,"46":0,"48":0,"59":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"68":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"88":0,"89":0,"92":0,"93":0,"97":0,"98":0,"101":0,"105":0,"109":1,"110":0,"111":0,"112":0,"116":0,"118":0,"121":0,"130":1,"131":0,"132":0,"133":0,"136":0,"139":0,"140":0,"142":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"158":0,"160":0,"161":0,"162":0,"164":0,"166":0,"167":0,"169":0,"178":1,"179":0,"182":0,"192":1,"193":0,"203":1,"205":1,"206":0,"209":1,"210":0,"213":1,"214":0,"218":1,"219":0,"223":1,"224":0,"228":1,"229":0,"233":1,"234":0,"238":1,"239":0,"243":1,"244":0,"251":1,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"260":0,"264":1,"265":0,"275":0,"278":1,"284":0,"285":0,"288":0,"289":0,"290":0,"291":0,"292":0,"294":0,"295":0,"297":0,"298":0,"299":0,"300":0,"304":0,"305":0,"306":0,"307":0,"312":0,"313":0,"314":0,"315":0,"316":0,"318":0,"319":0,"323":0,"324":0,"325":0,"326":0,"327":0,"329":0,"334":0,"336":0,"339":0,"340":0,"342":0,"346":0,"350":0,"355":0,"356":0,"358":0,"360":0,"363":0,"367":0,"369":0,"371":0,"373":0,"376":0,"378":0,"379":0,"380":0,"381":0,"382":0,"386":0,"392":0,"393":0,"396":0,"397":0,"401":0,"402":0,"407":1,"411":0,"412":0,"413":0,"414":0,"415":0,"418":0,"419":0,"420":0,"422":0,"423":0,"424":0,"427":0,"428":0,"429":0,"432":0,"433":0,"434":0,"437":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"449":0,"451":0,"453":0,"454":0,"455":0,"457":0,"458":0,"460":0,"463":0,"464":0,"466":0,"468":0,"469":0,"470":0,"473":0,"479":0,"481":0,"483":0,"488":0,"490":0,"495":0,"499":0,"501":0,"503":0,"512":0,"513":0,"516":0,"517":0,"518":0,"520":0,"523":0,"524":0,"525":0,"526":0,"528":0,"532":0,"533":0,"535":0,"540":0,"546":1,"547":0,"548":0,"549":0,"550":0,"551":0,"553":0,"556":1,"557":0,"558":0,"559":0,"560":0,"561":0,"563":0,"566":0,"567":0,"570":0,"573":0,"574":0,"575":0,"576":0,"578":0,"579":0,"580":0,"581":0,"582":0,"584":0,"585":0,"588":0,"589":0,"590":0,"591":0,"592":0,"594":0,"595":0,"597":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"608":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"631":0,"633":0,"634":0,"637":0,"638":0,"639":0,"641":0,"644":0,"645":0,"648":0,"649":0,"652":0,"654":0,"658":0,"659":0,"660":0,"663":0,"664":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"684":0,"685":0,"686":0,"687":0,"690":0,"691":0,"694":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"705":0,"706":0,"709":1,"710":0,"715":0,"716":0,"718":0,"725":0,"732":1,"733":0,"735":0,"736":0,"740":1,"741":0,"743":0,"744":0,"748":1,"750":0,"751":0,"752":0,"753":0,"757":0,"758":0,"759":0,"760":0,"763":0,"766":0,"770":0,"771":0,"776":0,"779":0,"780":0,"781":0,"782":0,"784":0,"785":0,"794":0,"798":0,"799":0,"801":0,"803":0,"809":0,"810":0,"811":0,"813":0,"816":0,"819":0,"821":0,"822":0,"823":0,"824":0,"825":0,"828":0,"829":0,"830":0,"831":0,"834":0,"839":0,"840":0,"841":0,"842":0,"845":0,"852":0,"853":0,"854":0,"855":0,"856":0,"858":0,"869":0,"870":0,"871":0,"873":0,"881":0,"882":0,"886":0,"888":0,"893":0,"904":0,"905":0,"908":0,"910":0,"911":0,"914":0,"918":1,"919":0,"921":0,"923":0,"924":0,"927":0,"928":0,"929":0,"930":0,"931":0,"933":0,"936":0,"937":0,"940":0,"941":0,"945":0,"946":0,"948":0,"949":0,"950":0,"954":0,"955":0,"959":0,"960":0,"964":0,"965":0,"968":0,"971":1,"975":0,"977":0,"980":0,"981":0,"983":0,"985":0,"988":0,"989":0,"991":0,"994":0,"998":1,"1000":0,"1003":0,"1006":0,"1010":0,"1012":0,"1013":0,"1016":0,"1023":0,"1026":1,"1028":0,"1031":0,"1033":0,"1037":0,"1038":0,"1039":0,"1042":0,"1049":0,"1052":1,"1054":0,"1058":0,"1060":0,"1063":0,"1066":0,"1067":0,"1069":0,"1070":0,"1071":0,"1075":0,"1077":0,"1078":0,"1081":0,"1086":0,"1089":0,"1090":0,"1095":0,"1096":0,"1097":0,"1098":0,"1105":0,"1106":0,"1107":0,"1109":0,"1117":0,"1118":0,"1123":0,"1124":0,"1125":0,"1131":0,"1132":0,"1136":0,"1139":0,"1144":0,"1146":0,"1151":1,"1155":0,"1159":0,"1160":0,"1161":0,"1165":0,"1166":0,"1167":0,"1168":0,"1170":0,"1171":0,"1175":0,"1179":0,"1182":1,"1186":0,"1193":0,"1194":0,"1197":0,"1201":0,"1202":0,"1203":0,"1204":0,"1208":0,"1212":0,"1215":1,"1216":0,"1217":0,"1220":1,"1221":0,"1223":0,"1226":0,"1230":0,"1235":1,"1237":0,"1239":0,"1240":0,"1241":0,"1244":0,"1245":0,"1246":0,"1248":0,"1249":0,"1253":0,"1258":0,"1259":0,"1261":0,"1262":0,"1264":0,"1268":0,"1273":0,"1276":0,"1277":0,"1278":0,"1280":0,"1287":0,"1289":0,"1290":0,"1292":0,"1297":0,"1299":0,"1303":1,"1304":0,"1305":0,"1306":0,"1308":0,"1311":0,"1313":0,"1316":1,"1318":0,"1319":0,"1322":0,"1323":0,"1324":0,"1327":0,"1328":0,"1332":0,"1333":0,"1334":0,"1337":0,"1338":0,"1339":0,"1342":0,"1343":0,"1344":0,"1346":0,"1349":1,"1351":0,"1352":0,"1354":0,"1355":0,"1356":0,"1359":0,"1361":0,"1363":0,"1366":1,"1368":0,"1369":0,"1371":0,"1372":0,"1382":0,"1384":0,"1386":0,"1388":0,"1392":0,"1397":0,"1405":0,"1406":0,"1409":0,"1411":0,"1414":0,"1420":0,"1424":0,"1429":0,"1433":0,"1439":0,"1441":0,"1444":0,"1453":0,"1455":0,"1457":0,"1460":0,"1464":0,"1467":0,"1469":0,"1471":0,"1475":1,"1476":0,"1484":0,"1487":1,"1488":0,"1490":0,"1498":1,"1499":0,"1500":0,"1503":0,"1505":0,"1506":0,"1510":0,"1511":0,"1514":0,"1515":0,"1520":0,"1521":0,"1524":0,"1525":0,"1528":0,"1530":0,"1539":1,"1542":0,"1545":0,"1546":0,"1551":0,"1552":0,"1554":0,"1555":0,"1559":0,"1562":0,"1564":0,"1566":0,"1569":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/Style.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/Style.js","s":{"1":1,"2":1,"3":1,"4":1,"5":22,"6":22,"7":66,"8":1,"9":3,"10":1,"11":8,"12":8,"13":8,"14":8,"15":8,"16":1,"17":0,"18":1,"19":0,"20":1,"21":0,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1},"b":{"1":[22,0],"2":[6,2],"3":[0,0]},"f":{"1":8,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"Style","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":46}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":22},"end":{"line":41,"column":33}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":22},"end":{"line":48,"column":33}}},"4":{"name":"(anonymous_4)","line":56,"loc":{"start":{"line":56,"column":26},"end":{"line":56,"column":37}}},"5":{"name":"(anonymous_5)","line":64,"loc":{"start":{"line":64,"column":26},"end":{"line":64,"column":37}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":24},"end":{"line":72,"column":35}}},"7":{"name":"(anonymous_7)","line":79,"loc":{"start":{"line":79,"column":22},"end":{"line":79,"column":33}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":24},"end":{"line":86,"column":35}}},"9":{"name":"(anonymous_9)","line":93,"loc":{"start":{"line":93,"column":26},"end":{"line":93,"column":37}}}},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":9,"column":48}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":27}},"3":{"start":{"line":12,"column":0},"end":{"line":12,"column":6}},"4":{"start":{"line":13,"column":0},"end":{"line":19,"column":1}},"5":{"start":{"line":14,"column":4},"end":{"line":18,"column":5}},"6":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"7":{"start":{"line":16,"column":12},"end":{"line":16,"column":45}},"8":{"start":{"line":20,"column":0},"end":{"line":22,"column":1}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":60}},"10":{"start":{"line":30,"column":0},"end":{"line":36,"column":1}},"11":{"start":{"line":31,"column":4},"end":{"line":31,"column":17}},"12":{"start":{"line":32,"column":4},"end":{"line":32,"column":21}},"13":{"start":{"line":33,"column":4},"end":{"line":33,"column":27}},"14":{"start":{"line":34,"column":4},"end":{"line":34,"column":37}},"15":{"start":{"line":35,"column":4},"end":{"line":35,"column":52}},"16":{"start":{"line":41,"column":0},"end":{"line":43,"column":2}},"17":{"start":{"line":42,"column":4},"end":{"line":42,"column":32}},"18":{"start":{"line":48,"column":0},"end":{"line":50,"column":2}},"19":{"start":{"line":49,"column":4},"end":{"line":49,"column":32}},"20":{"start":{"line":56,"column":0},"end":{"line":58,"column":2}},"21":{"start":{"line":57,"column":4},"end":{"line":57,"column":36}},"22":{"start":{"line":64,"column":0},"end":{"line":66,"column":2}},"23":{"start":{"line":65,"column":4},"end":{"line":65,"column":36}},"24":{"start":{"line":72,"column":0},"end":{"line":74,"column":2}},"25":{"start":{"line":73,"column":4},"end":{"line":73,"column":34}},"26":{"start":{"line":79,"column":0},"end":{"line":81,"column":2}},"27":{"start":{"line":80,"column":4},"end":{"line":80,"column":77}},"28":{"start":{"line":86,"column":0},"end":{"line":88,"column":2}},"29":{"start":{"line":87,"column":4},"end":{"line":87,"column":33}},"30":{"start":{"line":93,"column":0},"end":{"line":95,"column":2}},"31":{"start":{"line":94,"column":4},"end":{"line":94,"column":26}},"32":{"start":{"line":98,"column":0},"end":{"line":98,"column":10}},"33":{"start":{"line":99,"column":0},"end":{"line":99,"column":11}},"34":{"start":{"line":100,"column":0},"end":{"line":100,"column":10}},"35":{"start":{"line":101,"column":0},"end":{"line":101,"column":11}},"36":{"start":{"line":102,"column":0},"end":{"line":102,"column":10}},"37":{"start":{"line":103,"column":0},"end":{"line":103,"column":11}},"38":{"start":{"line":104,"column":0},"end":{"line":104,"column":11}},"39":{"start":{"line":105,"column":0},"end":{"line":105,"column":12}},"40":{"start":{"line":108,"column":0},"end":{"line":113,"column":2}},"41":{"start":{"line":116,"column":0},"end":{"line":121,"column":2}},"42":{"start":{"line":124,"column":0},"end":{"line":133,"column":2}},"43":{"start":{"line":136,"column":0},"end":{"line":136,"column":43}},"44":{"start":{"line":137,"column":0},"end":{"line":137,"column":47}},"45":{"start":{"line":138,"column":0},"end":{"line":138,"column":47}},"46":{"start":{"line":139,"column":0},"end":{"line":139,"column":51}},"47":{"start":{"line":140,"column":0},"end":{"line":140,"column":47}},"48":{"start":{"line":144,"column":0},"end":{"line":149,"column":2}}},"branchMap":{"1":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"2":{"line":35,"type":"cond-expr","locations":[{"start":{"line":35,"column":38},"end":{"line":35,"column":46}},{"start":{"line":35,"column":49},"end":{"line":35,"column":50}}]},"3":{"line":80,"type":"cond-expr","locations":[{"start":{"line":80,"column":50},"end":{"line":80,"column":60}},{"start":{"line":80,"column":63},"end":{"line":80,"column":75}}]}},"code":["/**"," * This file contains information and classes for the various kinds of styles"," * used in TeX. It provides a generic `Style` class, which holds information"," * about a specific style. It then provides instances of all the different kinds"," * of styles possible, and provides functions to move between them and get"," * information about them."," */","","var sigmas = require(\"./fontMetrics.js\").sigmas;","","var metrics = [{}, {}, {}];","var i;","for (var key in sigmas) {","    if (sigmas.hasOwnProperty(key)) {","        for (i = 0; i < 3; i++) {","            metrics[i][key] = sigmas[key][i];","        }","    }","}","for (i = 0; i < 3; i++) {","    metrics[i].emPerEx = sigmas.xHeight[i] / sigmas.quad[i];","}","","/**"," * The main style class. Contains a unique id for the style, a size (which is"," * the same for cramped and uncramped version of a style), a cramped flag, and a"," * size multiplier, which gives the size difference between a style and"," * textstyle."," */","function Style(id, size, multiplier, cramped) {","    this.id = id;","    this.size = size;","    this.cramped = cramped;","    this.sizeMultiplier = multiplier;","    this.metrics = metrics[size > 0 ? size - 1 : 0];","}","","/**"," * Get the style of a superscript given a base in the current style."," */","Style.prototype.sup = function() {","    return styles[sup[this.id]];","};","","/**"," * Get the style of a subscript given a base in the current style."," */","Style.prototype.sub = function() {","    return styles[sub[this.id]];","};","","/**"," * Get the style of a fraction numerator given the fraction in the current"," * style."," */","Style.prototype.fracNum = function() {","    return styles[fracNum[this.id]];","};","","/**"," * Get the style of a fraction denominator given the fraction in the current"," * style."," */","Style.prototype.fracDen = function() {","    return styles[fracDen[this.id]];","};","","/**"," * Get the cramped version of a style (in particular, cramping a cramped style"," * doesn't change the style)."," */","Style.prototype.cramp = function() {","    return styles[cramp[this.id]];","};","","/**"," * HTML class name, like \"displaystyle cramped\""," */","Style.prototype.cls = function() {","    return sizeNames[this.size] + (this.cramped ? \" cramped\" : \" uncramped\");","};","","/**"," * HTML Reset class name, like \"reset-textstyle\""," */","Style.prototype.reset = function() {","    return resetNames[this.size];","};","","/**"," * Return if this style is tightly spaced (scriptstyle/scriptscriptstyle)"," */","Style.prototype.isTight = function() {","    return this.size >= 2;","};","","// IDs of the different styles","var D = 0;","var Dc = 1;","var T = 2;","var Tc = 3;","var S = 4;","var Sc = 5;","var SS = 6;","var SSc = 7;","","// String names for the different sizes","var sizeNames = [","    \"displaystyle textstyle\",","    \"textstyle\",","    \"scriptstyle\",","    \"scriptscriptstyle\"","];","","// Reset names for the different sizes","var resetNames = [","    \"reset-textstyle\",","    \"reset-textstyle\",","    \"reset-scriptstyle\",","    \"reset-scriptscriptstyle\"","];","","// Instances of the different styles","var styles = [","    new Style(D, 0, 1.0, false),","    new Style(Dc, 0, 1.0, true),","    new Style(T, 1, 1.0, false),","    new Style(Tc, 1, 1.0, true),","    new Style(S, 2, 0.7, false),","    new Style(Sc, 2, 0.7, true),","    new Style(SS, 3, 0.5, false),","    new Style(SSc, 3, 0.5, true)","];","","// Lookup tables for switching from one style to another","var sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];","var sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];","var fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];","var fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];","var cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];","","// We only export some of the styles. Also, we don't export the `Style` class so","// no more styles can be generated.","module.exports = {","    DISPLAY: styles[D],","    TEXT: styles[T],","    SCRIPT: styles[S],","    SCRIPTSCRIPT: styles[SS]","};",""],"l":{"9":1,"11":1,"12":1,"13":1,"14":22,"15":22,"16":66,"20":1,"21":3,"30":1,"31":8,"32":8,"33":8,"34":8,"35":8,"41":1,"42":0,"48":1,"49":0,"56":1,"57":0,"64":1,"65":0,"72":1,"73":0,"79":1,"80":0,"86":1,"87":0,"93":1,"94":0,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"108":1,"116":1,"124":1,"136":1,"137":1,"138":1,"139":1,"140":1,"144":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/fontMetrics.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/fontMetrics.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":255,"loc":{"start":{"line":255,"column":26},"end":{"line":255,"column":53}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":52}},"3":{"start":{"line":35,"column":0},"end":{"line":58,"column":2}},"4":{"start":{"line":65,"column":0},"end":{"line":65,"column":12}},"5":{"start":{"line":66,"column":0},"end":{"line":66,"column":12}},"6":{"start":{"line":67,"column":0},"end":{"line":67,"column":12}},"7":{"start":{"line":68,"column":0},"end":{"line":68,"column":12}},"8":{"start":{"line":69,"column":0},"end":{"line":69,"column":16}},"9":{"start":{"line":70,"column":0},"end":{"line":70,"column":12}},"10":{"start":{"line":71,"column":0},"end":{"line":71,"column":12}},"11":{"start":{"line":72,"column":0},"end":{"line":72,"column":15}},"12":{"start":{"line":73,"column":0},"end":{"line":73,"column":16}},"13":{"start":{"line":74,"column":0},"end":{"line":74,"column":17}},"14":{"start":{"line":75,"column":0},"end":{"line":75,"column":15}},"15":{"start":{"line":76,"column":0},"end":{"line":76,"column":15}},"16":{"start":{"line":77,"column":0},"end":{"line":77,"column":15}},"17":{"start":{"line":83,"column":0},"end":{"line":83,"column":19}},"18":{"start":{"line":87,"column":0},"end":{"line":87,"column":34}},"19":{"start":{"line":92,"column":0},"end":{"line":101,"column":2}},"20":{"start":{"line":107,"column":0},"end":{"line":107,"column":45}},"21":{"start":{"line":116,"column":0},"end":{"line":246,"column":2}},"22":{"start":{"line":255,"column":0},"end":{"line":272,"column":2}},"23":{"start":{"line":256,"column":4},"end":{"line":256,"column":37}},"24":{"start":{"line":257,"column":4},"end":{"line":261,"column":5}},"25":{"start":{"line":258,"column":8},"end":{"line":258,"column":59}},"26":{"start":{"line":259,"column":11},"end":{"line":261,"column":5}},"27":{"start":{"line":260,"column":8},"end":{"line":260,"column":31}},"28":{"start":{"line":262,"column":4},"end":{"line":262,"column":39}},"29":{"start":{"line":263,"column":4},"end":{"line":271,"column":5}},"30":{"start":{"line":264,"column":8},"end":{"line":270,"column":10}},"31":{"start":{"line":274,"column":0},"end":{"line":278,"column":2}}},"branchMap":{"1":{"line":257,"type":"if","locations":[{"start":{"line":257,"column":4},"end":{"line":257,"column":4}},{"start":{"line":257,"column":4},"end":{"line":257,"column":4}}]},"2":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":11},"end":{"line":259,"column":11}},{"start":{"line":259,"column":11},"end":{"line":259,"column":11}}]},"3":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":263,"column":4}},{"start":{"line":263,"column":4},"end":{"line":263,"column":4}}]}},"code":["/* eslint no-unused-vars:0 */","","var Style = require(\"./Style\");","var cjkRegex = require(\"./unicodeRegexes\").cjkRegex;","","/**"," * This file contains metrics regarding fonts and individual symbols. The sigma"," * and xi variables, as well as the metricMap map contain data extracted from"," * TeX, TeX font metrics, and the TTF files. These data are then exposed via the"," * `metrics` variable and the getCharacterMetrics function."," */","","// In TeX, there are actually three sets of dimensions, one for each of","// textstyle, scriptstyle, and scriptscriptstyle.  These are provided in the","// the arrays below, in that order.","//","// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.","// This was determined by running the folllowing script:","//","//     latex -interaction=nonstopmode \\","//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\","//     '$a$ \\expandafter\\show\\the\\textfont2' \\","//     '\\expandafter\\show\\the\\scriptfont2' \\","//     '\\expandafter\\show\\the\\scriptscriptfont2' \\","//     '\\stop'","//","// The metrics themselves were retreived using the following commands:","//","//     tftopl cmsy10","//     tftopl cmsy7","//     tftopl cmsy5","//","// The output of each of these commands is quite lengthy.  The only part we","// care about is the FONTDIMEN section. Each value is measured in EMs.","var sigmas = {","    slant: [0.250, 0.250, 0.250],       // sigma1","    space: [0.000, 0.000, 0.000],       // sigma2","    stretch: [0.000, 0.000, 0.000],     // sigma3","    shrink: [0.000, 0.000, 0.000],      // sigma4","    xHeight: [0.431, 0.431, 0.431],     // sigma5","    quad: [1.000, 1.171, 1.472],        // sigma6","    extraSpace: [0.000, 0.000, 0.000],  // sigma7","    num1: [0.677, 0.732, 0.925],        // sigma8","    num2: [0.394, 0.384, 0.387],        // sigma9","    num3: [0.444, 0.471, 0.504],        // sigma10","    denom1: [0.686, 0.752, 1.025],      // sigma11","    denom2: [0.345, 0.344, 0.532],      // sigma12","    sup1: [0.413, 0.503, 0.504],        // sigma13","    sup2: [0.363, 0.431, 0.404],        // sigma14","    sup3: [0.289, 0.286, 0.294],        // sigma15","    sub1: [0.150, 0.143, 0.200],        // sigma16","    sub2: [0.247, 0.286, 0.400],        // sigma17","    supDrop: [0.386, 0.353, 0.494],     // sigma18","    subDrop: [0.050, 0.071, 0.100],     // sigma19","    delim1: [2.390, 1.700, 1.980],      // sigma20","    delim2: [1.010, 1.157, 1.420],      // sigma21","    axisHeight: [0.250, 0.250, 0.250]  // sigma22","};","","// These font metrics are extracted from TeX by using","// \\font\\a=cmex10","// \\showthe\\fontdimenX\\a","// where X is the corresponding variable number. These correspond to the font","// parameters of the extension fonts (family 3). See the TeXbook, page 441.","var xi1 = 0;","var xi2 = 0;","var xi3 = 0;","var xi4 = 0;","var xi5 = 0.431;","var xi6 = 1;","var xi7 = 0;","var xi8 = 0.04;","var xi9 = 0.111;","var xi10 = 0.166;","var xi11 = 0.2;","var xi12 = 0.6;","var xi13 = 0.1;","","// This value determines how large a pt is, for metrics which are defined in","// terms of pts.","// This value is also used in katex.less; if you change it make sure the values","// match.","var ptPerEm = 10.0;","","// The space between adjacent `|` columns in an array definition. From","// `\\showthe\\doublerulesep` in LaTeX.","var doubleRuleSep = 2.0 / ptPerEm;","","/**"," * This is just a mapping from common names to real metrics"," */","var metrics = {","    defaultRuleThickness: xi8,","    bigOpSpacing1: xi9,","    bigOpSpacing2: xi10,","    bigOpSpacing3: xi11,","    bigOpSpacing4: xi12,","    bigOpSpacing5: xi13,","    ptPerEm: ptPerEm,","    doubleRuleSep: doubleRuleSep","};","","// This map contains a mapping from font name and character code to character","// metrics, including height, depth, italic correction, and skew (kern from the","// character to the corresponding \\skewchar)","// This map is generated via `make metrics`. It should not be changed manually.","var metricMap = require(\"./fontMetricsData\");","","// These are very rough approximations.  We default to Times New Roman which","// should have Latin-1 and Cyrillic characters, but may not depending on the","// operating system.  The metrics do not account for extra height from the","// accents.  In the case of Cyrillic characters which have both ascenders and","// descenders we prefer approximations with ascenders, primarily to prevent","// the fraction bar or root line from intersecting the glyph.","// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.","var extraCharacterMap = {","    // Latin-1","    'À': 'A',","    'Á': 'A',","    'Â': 'A',","    'Ã': 'A',","    'Ä': 'A',","    'Å': 'A',","    'Æ': 'A',","    'Ç': 'C',","    'È': 'E',","    'É': 'E',","    'Ê': 'E',","    'Ë': 'E',","    'Ì': 'I',","    'Í': 'I',","    'Î': 'I',","    'Ï': 'I',","    'Ð': 'D',","    'Ñ': 'N',","    'Ò': 'O',","    'Ó': 'O',","    'Ô': 'O',","    'Õ': 'O',","    'Ö': 'O',","    'Ø': 'O',","    'Ù': 'U',","    'Ú': 'U',","    'Û': 'U',","    'Ü': 'U',","    'Ý': 'Y',","    'Þ': 'o',","    'ß': 'B',","    'à': 'a',","    'á': 'a',","    'â': 'a',","    'ã': 'a',","    'ä': 'a',","    'å': 'a',","    'æ': 'a',","    'ç': 'c',","    'è': 'e',","    'é': 'e',","    'ê': 'e',","    'ë': 'e',","    'ì': 'i',","    'í': 'i',","    'î': 'i',","    'ï': 'i',","    'ð': 'd',","    'ñ': 'n',","    'ò': 'o',","    'ó': 'o',","    'ô': 'o',","    'õ': 'o',","    'ö': 'o',","    'ø': 'o',","    'ù': 'u',","    'ú': 'u',","    'û': 'u',","    'ü': 'u',","    'ý': 'y',","    'þ': 'o',","    'ÿ': 'y',","","    // Cyrillic","    'А': 'A',","    'Б': 'B',","    'В': 'B',","    'Г': 'F',","    'Д': 'A',","    'Е': 'E',","    'Ж': 'K',","    'З': '3',","    'И': 'N',","    'Й': 'N',","    'К': 'K',","    'Л': 'N',","    'М': 'M',","    'Н': 'H',","    'О': 'O',","    'П': 'N',","    'Р': 'P',","    'С': 'C',","    'Т': 'T',","    'У': 'y',","    'Ф': 'O',","    'Х': 'X',","    'Ц': 'U',","    'Ч': 'h',","    'Ш': 'W',","    'Щ': 'W',","    'Ъ': 'B',","    'Ы': 'X',","    'Ь': 'B',","    'Э': '3',","    'Ю': 'X',","    'Я': 'R',","    'а': 'a',","    'б': 'b',","    'в': 'a',","    'г': 'r',","    'д': 'y',","    'е': 'e',","    'ж': 'm',","    'з': 'e',","    'и': 'n',","    'й': 'n',","    'к': 'n',","    'л': 'n',","    'м': 'm',","    'н': 'n',","    'о': 'o',","    'п': 'n',","    'р': 'p',","    'с': 'c',","    'т': 'o',","    'у': 'y',","    'ф': 'b',","    'х': 'x',","    'ц': 'n',","    'ч': 'n',","    'ш': 'w',","    'щ': 'w',","    'ъ': 'a',","    'ы': 'm',","    'ь': 'a',","    'э': 'e',","    'ю': 'm',","    'я': 'r'","};","","/**"," * This function is a convenience function for looking up information in the"," * metricMap table. It takes a character as a string, and a style."," *"," * Note: the `width` property may be undefined if fontMetricsData.js wasn't"," * built using `Make extended_metrics`."," */","var getCharacterMetrics = function(character, style) {","    var ch = character.charCodeAt(0);","    if (character[0] in extraCharacterMap) {","        ch = extraCharacterMap[character[0]].charCodeAt(0);","    } else if (cjkRegex.test(character[0])) {","        ch = 'M'.charCodeAt(0);","    }","    var metrics = metricMap[style][ch];","    if (metrics) {","        return {","            depth: metrics[0],","            height: metrics[1],","            italic: metrics[2],","            skew: metrics[3],","            width: metrics[4]","        };","    }","};","","module.exports = {","    metrics: metrics,","    sigmas: sigmas,","    getCharacterMetrics: getCharacterMetrics","};",""],"l":{"3":1,"4":1,"35":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"83":1,"87":1,"92":1,"107":1,"116":1,"255":1,"256":0,"257":0,"258":0,"259":0,"260":0,"262":0,"263":0,"264":0,"274":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/unicodeRegexes.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/unicodeRegexes.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":36}},"2":{"start":{"line":9,"column":0},"end":{"line":10,"column":70}},"3":{"start":{"line":12,"column":0},"end":{"line":15,"column":2}}},"branchMap":{},"code":["var hangulRegex = /[\\uAC00-\\uD7AF]/;","","// This regex combines","// - Hiragana: [\\u3040-\\u309F]","// - Katakana: [\\u30A0-\\u30FF]","// - CJK ideograms: [\\u4E00-\\u9FAF]","// - Hangul syllables: [\\uAC00-\\uD7AF]","// Notably missing are halfwidth Katakana and Romanji glyphs.","var cjkRegex =","    /[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\u4E00-\\u9FAF]|[\\uAC00-\\uD7AF]/;","","module.exports = {","    cjkRegex: cjkRegex,","    hangulRegex: hangulRegex","};",""],"l":{"1":1,"9":1,"12":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/fontMetricsData.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/fontMetricsData.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1752,"column":2}}},"branchMap":{},"code":["module.exports = {","    \"AMS-Regular\": {","        \"65\": [0, 0.68889, 0, 0],","        \"66\": [0, 0.68889, 0, 0],","        \"67\": [0, 0.68889, 0, 0],","        \"68\": [0, 0.68889, 0, 0],","        \"69\": [0, 0.68889, 0, 0],","        \"70\": [0, 0.68889, 0, 0],","        \"71\": [0, 0.68889, 0, 0],","        \"72\": [0, 0.68889, 0, 0],","        \"73\": [0, 0.68889, 0, 0],","        \"74\": [0.16667, 0.68889, 0, 0],","        \"75\": [0, 0.68889, 0, 0],","        \"76\": [0, 0.68889, 0, 0],","        \"77\": [0, 0.68889, 0, 0],","        \"78\": [0, 0.68889, 0, 0],","        \"79\": [0.16667, 0.68889, 0, 0],","        \"80\": [0, 0.68889, 0, 0],","        \"81\": [0.16667, 0.68889, 0, 0],","        \"82\": [0, 0.68889, 0, 0],","        \"83\": [0, 0.68889, 0, 0],","        \"84\": [0, 0.68889, 0, 0],","        \"85\": [0, 0.68889, 0, 0],","        \"86\": [0, 0.68889, 0, 0],","        \"87\": [0, 0.68889, 0, 0],","        \"88\": [0, 0.68889, 0, 0],","        \"89\": [0, 0.68889, 0, 0],","        \"90\": [0, 0.68889, 0, 0],","        \"107\": [0, 0.68889, 0, 0],","        \"165\": [0, 0.675, 0.025, 0],","        \"174\": [0.15559, 0.69224, 0, 0],","        \"240\": [0, 0.68889, 0, 0],","        \"295\": [0, 0.68889, 0, 0],","        \"710\": [0, 0.825, 0, 0],","        \"732\": [0, 0.9, 0, 0],","        \"770\": [0, 0.825, 0, 0],","        \"771\": [0, 0.9, 0, 0],","        \"989\": [0.08167, 0.58167, 0, 0],","        \"1008\": [0, 0.43056, 0.04028, 0],","        \"8245\": [0, 0.54986, 0, 0],","        \"8463\": [0, 0.68889, 0, 0],","        \"8487\": [0, 0.68889, 0, 0],","        \"8498\": [0, 0.68889, 0, 0],","        \"8502\": [0, 0.68889, 0, 0],","        \"8503\": [0, 0.68889, 0, 0],","        \"8504\": [0, 0.68889, 0, 0],","        \"8513\": [0, 0.68889, 0, 0],","        \"8592\": [-0.03598, 0.46402, 0, 0],","        \"8594\": [-0.03598, 0.46402, 0, 0],","        \"8602\": [-0.13313, 0.36687, 0, 0],","        \"8603\": [-0.13313, 0.36687, 0, 0],","        \"8606\": [0.01354, 0.52239, 0, 0],","        \"8608\": [0.01354, 0.52239, 0, 0],","        \"8610\": [0.01354, 0.52239, 0, 0],","        \"8611\": [0.01354, 0.52239, 0, 0],","        \"8619\": [0, 0.54986, 0, 0],","        \"8620\": [0, 0.54986, 0, 0],","        \"8621\": [-0.13313, 0.37788, 0, 0],","        \"8622\": [-0.13313, 0.36687, 0, 0],","        \"8624\": [0, 0.69224, 0, 0],","        \"8625\": [0, 0.69224, 0, 0],","        \"8630\": [0, 0.43056, 0, 0],","        \"8631\": [0, 0.43056, 0, 0],","        \"8634\": [0.08198, 0.58198, 0, 0],","        \"8635\": [0.08198, 0.58198, 0, 0],","        \"8638\": [0.19444, 0.69224, 0, 0],","        \"8639\": [0.19444, 0.69224, 0, 0],","        \"8642\": [0.19444, 0.69224, 0, 0],","        \"8643\": [0.19444, 0.69224, 0, 0],","        \"8644\": [0.1808, 0.675, 0, 0],","        \"8646\": [0.1808, 0.675, 0, 0],","        \"8647\": [0.1808, 0.675, 0, 0],","        \"8648\": [0.19444, 0.69224, 0, 0],","        \"8649\": [0.1808, 0.675, 0, 0],","        \"8650\": [0.19444, 0.69224, 0, 0],","        \"8651\": [0.01354, 0.52239, 0, 0],","        \"8652\": [0.01354, 0.52239, 0, 0],","        \"8653\": [-0.13313, 0.36687, 0, 0],","        \"8654\": [-0.13313, 0.36687, 0, 0],","        \"8655\": [-0.13313, 0.36687, 0, 0],","        \"8666\": [0.13667, 0.63667, 0, 0],","        \"8667\": [0.13667, 0.63667, 0, 0],","        \"8669\": [-0.13313, 0.37788, 0, 0],","        \"8672\": [-0.064, 0.437, 0, 0],","        \"8674\": [-0.064, 0.437, 0, 0],","        \"8705\": [0, 0.825, 0, 0],","        \"8708\": [0, 0.68889, 0, 0],","        \"8709\": [0.08167, 0.58167, 0, 0],","        \"8717\": [0, 0.43056, 0, 0],","        \"8722\": [-0.03598, 0.46402, 0, 0],","        \"8724\": [0.08198, 0.69224, 0, 0],","        \"8726\": [0.08167, 0.58167, 0, 0],","        \"8733\": [0, 0.69224, 0, 0],","        \"8736\": [0, 0.69224, 0, 0],","        \"8737\": [0, 0.69224, 0, 0],","        \"8738\": [0.03517, 0.52239, 0, 0],","        \"8739\": [0.08167, 0.58167, 0, 0],","        \"8740\": [0.25142, 0.74111, 0, 0],","        \"8741\": [0.08167, 0.58167, 0, 0],","        \"8742\": [0.25142, 0.74111, 0, 0],","        \"8756\": [0, 0.69224, 0, 0],","        \"8757\": [0, 0.69224, 0, 0],","        \"8764\": [-0.13313, 0.36687, 0, 0],","        \"8765\": [-0.13313, 0.37788, 0, 0],","        \"8769\": [-0.13313, 0.36687, 0, 0],","        \"8770\": [-0.03625, 0.46375, 0, 0],","        \"8774\": [0.30274, 0.79383, 0, 0],","        \"8776\": [-0.01688, 0.48312, 0, 0],","        \"8778\": [0.08167, 0.58167, 0, 0],","        \"8782\": [0.06062, 0.54986, 0, 0],","        \"8783\": [0.06062, 0.54986, 0, 0],","        \"8785\": [0.08198, 0.58198, 0, 0],","        \"8786\": [0.08198, 0.58198, 0, 0],","        \"8787\": [0.08198, 0.58198, 0, 0],","        \"8790\": [0, 0.69224, 0, 0],","        \"8791\": [0.22958, 0.72958, 0, 0],","        \"8796\": [0.08198, 0.91667, 0, 0],","        \"8806\": [0.25583, 0.75583, 0, 0],","        \"8807\": [0.25583, 0.75583, 0, 0],","        \"8808\": [0.25142, 0.75726, 0, 0],","        \"8809\": [0.25142, 0.75726, 0, 0],","        \"8812\": [0.25583, 0.75583, 0, 0],","        \"8814\": [0.20576, 0.70576, 0, 0],","        \"8815\": [0.20576, 0.70576, 0, 0],","        \"8816\": [0.30274, 0.79383, 0, 0],","        \"8817\": [0.30274, 0.79383, 0, 0],","        \"8818\": [0.22958, 0.72958, 0, 0],","        \"8819\": [0.22958, 0.72958, 0, 0],","        \"8822\": [0.1808, 0.675, 0, 0],","        \"8823\": [0.1808, 0.675, 0, 0],","        \"8828\": [0.13667, 0.63667, 0, 0],","        \"8829\": [0.13667, 0.63667, 0, 0],","        \"8830\": [0.22958, 0.72958, 0, 0],","        \"8831\": [0.22958, 0.72958, 0, 0],","        \"8832\": [0.20576, 0.70576, 0, 0],","        \"8833\": [0.20576, 0.70576, 0, 0],","        \"8840\": [0.30274, 0.79383, 0, 0],","        \"8841\": [0.30274, 0.79383, 0, 0],","        \"8842\": [0.13597, 0.63597, 0, 0],","        \"8843\": [0.13597, 0.63597, 0, 0],","        \"8847\": [0.03517, 0.54986, 0, 0],","        \"8848\": [0.03517, 0.54986, 0, 0],","        \"8858\": [0.08198, 0.58198, 0, 0],","        \"8859\": [0.08198, 0.58198, 0, 0],","        \"8861\": [0.08198, 0.58198, 0, 0],","        \"8862\": [0, 0.675, 0, 0],","        \"8863\": [0, 0.675, 0, 0],","        \"8864\": [0, 0.675, 0, 0],","        \"8865\": [0, 0.675, 0, 0],","        \"8872\": [0, 0.69224, 0, 0],","        \"8873\": [0, 0.69224, 0, 0],","        \"8874\": [0, 0.69224, 0, 0],","        \"8876\": [0, 0.68889, 0, 0],","        \"8877\": [0, 0.68889, 0, 0],","        \"8878\": [0, 0.68889, 0, 0],","        \"8879\": [0, 0.68889, 0, 0],","        \"8882\": [0.03517, 0.54986, 0, 0],","        \"8883\": [0.03517, 0.54986, 0, 0],","        \"8884\": [0.13667, 0.63667, 0, 0],","        \"8885\": [0.13667, 0.63667, 0, 0],","        \"8888\": [0, 0.54986, 0, 0],","        \"8890\": [0.19444, 0.43056, 0, 0],","        \"8891\": [0.19444, 0.69224, 0, 0],","        \"8892\": [0.19444, 0.69224, 0, 0],","        \"8901\": [0, 0.54986, 0, 0],","        \"8903\": [0.08167, 0.58167, 0, 0],","        \"8905\": [0.08167, 0.58167, 0, 0],","        \"8906\": [0.08167, 0.58167, 0, 0],","        \"8907\": [0, 0.69224, 0, 0],","        \"8908\": [0, 0.69224, 0, 0],","        \"8909\": [-0.03598, 0.46402, 0, 0],","        \"8910\": [0, 0.54986, 0, 0],","        \"8911\": [0, 0.54986, 0, 0],","        \"8912\": [0.03517, 0.54986, 0, 0],","        \"8913\": [0.03517, 0.54986, 0, 0],","        \"8914\": [0, 0.54986, 0, 0],","        \"8915\": [0, 0.54986, 0, 0],","        \"8916\": [0, 0.69224, 0, 0],","        \"8918\": [0.0391, 0.5391, 0, 0],","        \"8919\": [0.0391, 0.5391, 0, 0],","        \"8920\": [0.03517, 0.54986, 0, 0],","        \"8921\": [0.03517, 0.54986, 0, 0],","        \"8922\": [0.38569, 0.88569, 0, 0],","        \"8923\": [0.38569, 0.88569, 0, 0],","        \"8926\": [0.13667, 0.63667, 0, 0],","        \"8927\": [0.13667, 0.63667, 0, 0],","        \"8928\": [0.30274, 0.79383, 0, 0],","        \"8929\": [0.30274, 0.79383, 0, 0],","        \"8934\": [0.23222, 0.74111, 0, 0],","        \"8935\": [0.23222, 0.74111, 0, 0],","        \"8936\": [0.23222, 0.74111, 0, 0],","        \"8937\": [0.23222, 0.74111, 0, 0],","        \"8938\": [0.20576, 0.70576, 0, 0],","        \"8939\": [0.20576, 0.70576, 0, 0],","        \"8940\": [0.30274, 0.79383, 0, 0],","        \"8941\": [0.30274, 0.79383, 0, 0],","        \"8994\": [0.19444, 0.69224, 0, 0],","        \"8995\": [0.19444, 0.69224, 0, 0],","        \"9416\": [0.15559, 0.69224, 0, 0],","        \"9484\": [0, 0.69224, 0, 0],","        \"9488\": [0, 0.69224, 0, 0],","        \"9492\": [0, 0.37788, 0, 0],","        \"9496\": [0, 0.37788, 0, 0],","        \"9585\": [0.19444, 0.68889, 0, 0],","        \"9586\": [0.19444, 0.74111, 0, 0],","        \"9632\": [0, 0.675, 0, 0],","        \"9633\": [0, 0.675, 0, 0],","        \"9650\": [0, 0.54986, 0, 0],","        \"9651\": [0, 0.54986, 0, 0],","        \"9654\": [0.03517, 0.54986, 0, 0],","        \"9660\": [0, 0.54986, 0, 0],","        \"9661\": [0, 0.54986, 0, 0],","        \"9664\": [0.03517, 0.54986, 0, 0],","        \"9674\": [0.11111, 0.69224, 0, 0],","        \"9733\": [0.19444, 0.69224, 0, 0],","        \"10003\": [0, 0.69224, 0, 0],","        \"10016\": [0, 0.69224, 0, 0],","        \"10731\": [0.11111, 0.69224, 0, 0],","        \"10846\": [0.19444, 0.75583, 0, 0],","        \"10877\": [0.13667, 0.63667, 0, 0],","        \"10878\": [0.13667, 0.63667, 0, 0],","        \"10885\": [0.25583, 0.75583, 0, 0],","        \"10886\": [0.25583, 0.75583, 0, 0],","        \"10887\": [0.13597, 0.63597, 0, 0],","        \"10888\": [0.13597, 0.63597, 0, 0],","        \"10889\": [0.26167, 0.75726, 0, 0],","        \"10890\": [0.26167, 0.75726, 0, 0],","        \"10891\": [0.48256, 0.98256, 0, 0],","        \"10892\": [0.48256, 0.98256, 0, 0],","        \"10901\": [0.13667, 0.63667, 0, 0],","        \"10902\": [0.13667, 0.63667, 0, 0],","        \"10933\": [0.25142, 0.75726, 0, 0],","        \"10934\": [0.25142, 0.75726, 0, 0],","        \"10935\": [0.26167, 0.75726, 0, 0],","        \"10936\": [0.26167, 0.75726, 0, 0],","        \"10937\": [0.26167, 0.75726, 0, 0],","        \"10938\": [0.26167, 0.75726, 0, 0],","        \"10949\": [0.25583, 0.75583, 0, 0],","        \"10950\": [0.25583, 0.75583, 0, 0],","        \"10955\": [0.28481, 0.79383, 0, 0],","        \"10956\": [0.28481, 0.79383, 0, 0],","        \"57350\": [0.08167, 0.58167, 0, 0],","        \"57351\": [0.08167, 0.58167, 0, 0],","        \"57352\": [0.08167, 0.58167, 0, 0],","        \"57353\": [0, 0.43056, 0.04028, 0],","        \"57356\": [0.25142, 0.75726, 0, 0],","        \"57357\": [0.25142, 0.75726, 0, 0],","        \"57358\": [0.41951, 0.91951, 0, 0],","        \"57359\": [0.30274, 0.79383, 0, 0],","        \"57360\": [0.30274, 0.79383, 0, 0],","        \"57361\": [0.41951, 0.91951, 0, 0],","        \"57366\": [0.25142, 0.75726, 0, 0],","        \"57367\": [0.25142, 0.75726, 0, 0],","        \"57368\": [0.25142, 0.75726, 0, 0],","        \"57369\": [0.25142, 0.75726, 0, 0],","        \"57370\": [0.13597, 0.63597, 0, 0],","        \"57371\": [0.13597, 0.63597, 0, 0]","    },","    \"Caligraphic-Regular\": {","        \"48\": [0, 0.43056, 0, 0],","        \"49\": [0, 0.43056, 0, 0],","        \"50\": [0, 0.43056, 0, 0],","        \"51\": [0.19444, 0.43056, 0, 0],","        \"52\": [0.19444, 0.43056, 0, 0],","        \"53\": [0.19444, 0.43056, 0, 0],","        \"54\": [0, 0.64444, 0, 0],","        \"55\": [0.19444, 0.43056, 0, 0],","        \"56\": [0, 0.64444, 0, 0],","        \"57\": [0.19444, 0.43056, 0, 0],","        \"65\": [0, 0.68333, 0, 0.19445],","        \"66\": [0, 0.68333, 0.03041, 0.13889],","        \"67\": [0, 0.68333, 0.05834, 0.13889],","        \"68\": [0, 0.68333, 0.02778, 0.08334],","        \"69\": [0, 0.68333, 0.08944, 0.11111],","        \"70\": [0, 0.68333, 0.09931, 0.11111],","        \"71\": [0.09722, 0.68333, 0.0593, 0.11111],","        \"72\": [0, 0.68333, 0.00965, 0.11111],","        \"73\": [0, 0.68333, 0.07382, 0],","        \"74\": [0.09722, 0.68333, 0.18472, 0.16667],","        \"75\": [0, 0.68333, 0.01445, 0.05556],","        \"76\": [0, 0.68333, 0, 0.13889],","        \"77\": [0, 0.68333, 0, 0.13889],","        \"78\": [0, 0.68333, 0.14736, 0.08334],","        \"79\": [0, 0.68333, 0.02778, 0.11111],","        \"80\": [0, 0.68333, 0.08222, 0.08334],","        \"81\": [0.09722, 0.68333, 0, 0.11111],","        \"82\": [0, 0.68333, 0, 0.08334],","        \"83\": [0, 0.68333, 0.075, 0.13889],","        \"84\": [0, 0.68333, 0.25417, 0],","        \"85\": [0, 0.68333, 0.09931, 0.08334],","        \"86\": [0, 0.68333, 0.08222, 0],","        \"87\": [0, 0.68333, 0.08222, 0.08334],","        \"88\": [0, 0.68333, 0.14643, 0.13889],","        \"89\": [0.09722, 0.68333, 0.08222, 0.08334],","        \"90\": [0, 0.68333, 0.07944, 0.13889]","    },","    \"Fraktur-Regular\": {","        \"33\": [0, 0.69141, 0, 0],","        \"34\": [0, 0.69141, 0, 0],","        \"38\": [0, 0.69141, 0, 0],","        \"39\": [0, 0.69141, 0, 0],","        \"40\": [0.24982, 0.74947, 0, 0],","        \"41\": [0.24982, 0.74947, 0, 0],","        \"42\": [0, 0.62119, 0, 0],","        \"43\": [0.08319, 0.58283, 0, 0],","        \"44\": [0, 0.10803, 0, 0],","        \"45\": [0.08319, 0.58283, 0, 0],","        \"46\": [0, 0.10803, 0, 0],","        \"47\": [0.24982, 0.74947, 0, 0],","        \"48\": [0, 0.47534, 0, 0],","        \"49\": [0, 0.47534, 0, 0],","        \"50\": [0, 0.47534, 0, 0],","        \"51\": [0.18906, 0.47534, 0, 0],","        \"52\": [0.18906, 0.47534, 0, 0],","        \"53\": [0.18906, 0.47534, 0, 0],","        \"54\": [0, 0.69141, 0, 0],","        \"55\": [0.18906, 0.47534, 0, 0],","        \"56\": [0, 0.69141, 0, 0],","        \"57\": [0.18906, 0.47534, 0, 0],","        \"58\": [0, 0.47534, 0, 0],","        \"59\": [0.12604, 0.47534, 0, 0],","        \"61\": [-0.13099, 0.36866, 0, 0],","        \"63\": [0, 0.69141, 0, 0],","        \"65\": [0, 0.69141, 0, 0],","        \"66\": [0, 0.69141, 0, 0],","        \"67\": [0, 0.69141, 0, 0],","        \"68\": [0, 0.69141, 0, 0],","        \"69\": [0, 0.69141, 0, 0],","        \"70\": [0.12604, 0.69141, 0, 0],","        \"71\": [0, 0.69141, 0, 0],","        \"72\": [0.06302, 0.69141, 0, 0],","        \"73\": [0, 0.69141, 0, 0],","        \"74\": [0.12604, 0.69141, 0, 0],","        \"75\": [0, 0.69141, 0, 0],","        \"76\": [0, 0.69141, 0, 0],","        \"77\": [0, 0.69141, 0, 0],","        \"78\": [0, 0.69141, 0, 0],","        \"79\": [0, 0.69141, 0, 0],","        \"80\": [0.18906, 0.69141, 0, 0],","        \"81\": [0.03781, 0.69141, 0, 0],","        \"82\": [0, 0.69141, 0, 0],","        \"83\": [0, 0.69141, 0, 0],","        \"84\": [0, 0.69141, 0, 0],","        \"85\": [0, 0.69141, 0, 0],","        \"86\": [0, 0.69141, 0, 0],","        \"87\": [0, 0.69141, 0, 0],","        \"88\": [0, 0.69141, 0, 0],","        \"89\": [0.18906, 0.69141, 0, 0],","        \"90\": [0.12604, 0.69141, 0, 0],","        \"91\": [0.24982, 0.74947, 0, 0],","        \"93\": [0.24982, 0.74947, 0, 0],","        \"94\": [0, 0.69141, 0, 0],","        \"97\": [0, 0.47534, 0, 0],","        \"98\": [0, 0.69141, 0, 0],","        \"99\": [0, 0.47534, 0, 0],","        \"100\": [0, 0.62119, 0, 0],","        \"101\": [0, 0.47534, 0, 0],","        \"102\": [0.18906, 0.69141, 0, 0],","        \"103\": [0.18906, 0.47534, 0, 0],","        \"104\": [0.18906, 0.69141, 0, 0],","        \"105\": [0, 0.69141, 0, 0],","        \"106\": [0, 0.69141, 0, 0],","        \"107\": [0, 0.69141, 0, 0],","        \"108\": [0, 0.69141, 0, 0],","        \"109\": [0, 0.47534, 0, 0],","        \"110\": [0, 0.47534, 0, 0],","        \"111\": [0, 0.47534, 0, 0],","        \"112\": [0.18906, 0.52396, 0, 0],","        \"113\": [0.18906, 0.47534, 0, 0],","        \"114\": [0, 0.47534, 0, 0],","        \"115\": [0, 0.47534, 0, 0],","        \"116\": [0, 0.62119, 0, 0],","        \"117\": [0, 0.47534, 0, 0],","        \"118\": [0, 0.52396, 0, 0],","        \"119\": [0, 0.52396, 0, 0],","        \"120\": [0.18906, 0.47534, 0, 0],","        \"121\": [0.18906, 0.47534, 0, 0],","        \"122\": [0.18906, 0.47534, 0, 0],","        \"8216\": [0, 0.69141, 0, 0],","        \"8217\": [0, 0.69141, 0, 0],","        \"58112\": [0, 0.62119, 0, 0],","        \"58113\": [0, 0.62119, 0, 0],","        \"58114\": [0.18906, 0.69141, 0, 0],","        \"58115\": [0.18906, 0.69141, 0, 0],","        \"58116\": [0.18906, 0.47534, 0, 0],","        \"58117\": [0, 0.69141, 0, 0],","        \"58118\": [0, 0.62119, 0, 0],","        \"58119\": [0, 0.47534, 0, 0]","    },","    \"Main-Bold\": {","        \"33\": [0, 0.69444, 0, 0],","        \"34\": [0, 0.69444, 0, 0],","        \"35\": [0.19444, 0.69444, 0, 0],","        \"36\": [0.05556, 0.75, 0, 0],","        \"37\": [0.05556, 0.75, 0, 0],","        \"38\": [0, 0.69444, 0, 0],","        \"39\": [0, 0.69444, 0, 0],","        \"40\": [0.25, 0.75, 0, 0],","        \"41\": [0.25, 0.75, 0, 0],","        \"42\": [0, 0.75, 0, 0],","        \"43\": [0.13333, 0.63333, 0, 0],","        \"44\": [0.19444, 0.15556, 0, 0],","        \"45\": [0, 0.44444, 0, 0],","        \"46\": [0, 0.15556, 0, 0],","        \"47\": [0.25, 0.75, 0, 0],","        \"48\": [0, 0.64444, 0, 0],","        \"49\": [0, 0.64444, 0, 0],","        \"50\": [0, 0.64444, 0, 0],","        \"51\": [0, 0.64444, 0, 0],","        \"52\": [0, 0.64444, 0, 0],","        \"53\": [0, 0.64444, 0, 0],","        \"54\": [0, 0.64444, 0, 0],","        \"55\": [0, 0.64444, 0, 0],","        \"56\": [0, 0.64444, 0, 0],","        \"57\": [0, 0.64444, 0, 0],","        \"58\": [0, 0.44444, 0, 0],","        \"59\": [0.19444, 0.44444, 0, 0],","        \"60\": [0.08556, 0.58556, 0, 0],","        \"61\": [-0.10889, 0.39111, 0, 0],","        \"62\": [0.08556, 0.58556, 0, 0],","        \"63\": [0, 0.69444, 0, 0],","        \"64\": [0, 0.69444, 0, 0],","        \"65\": [0, 0.68611, 0, 0],","        \"66\": [0, 0.68611, 0, 0],","        \"67\": [0, 0.68611, 0, 0],","        \"68\": [0, 0.68611, 0, 0],","        \"69\": [0, 0.68611, 0, 0],","        \"70\": [0, 0.68611, 0, 0],","        \"71\": [0, 0.68611, 0, 0],","        \"72\": [0, 0.68611, 0, 0],","        \"73\": [0, 0.68611, 0, 0],","        \"74\": [0, 0.68611, 0, 0],","        \"75\": [0, 0.68611, 0, 0],","        \"76\": [0, 0.68611, 0, 0],","        \"77\": [0, 0.68611, 0, 0],","        \"78\": [0, 0.68611, 0, 0],","        \"79\": [0, 0.68611, 0, 0],","        \"80\": [0, 0.68611, 0, 0],","        \"81\": [0.19444, 0.68611, 0, 0],","        \"82\": [0, 0.68611, 0, 0],","        \"83\": [0, 0.68611, 0, 0],","        \"84\": [0, 0.68611, 0, 0],","        \"85\": [0, 0.68611, 0, 0],","        \"86\": [0, 0.68611, 0.01597, 0],","        \"87\": [0, 0.68611, 0.01597, 0],","        \"88\": [0, 0.68611, 0, 0],","        \"89\": [0, 0.68611, 0.02875, 0],","        \"90\": [0, 0.68611, 0, 0],","        \"91\": [0.25, 0.75, 0, 0],","        \"92\": [0.25, 0.75, 0, 0],","        \"93\": [0.25, 0.75, 0, 0],","        \"94\": [0, 0.69444, 0, 0],","        \"95\": [0.31, 0.13444, 0.03194, 0],","        \"96\": [0, 0.69444, 0, 0],","        \"97\": [0, 0.44444, 0, 0],","        \"98\": [0, 0.69444, 0, 0],","        \"99\": [0, 0.44444, 0, 0],","        \"100\": [0, 0.69444, 0, 0],","        \"101\": [0, 0.44444, 0, 0],","        \"102\": [0, 0.69444, 0.10903, 0],","        \"103\": [0.19444, 0.44444, 0.01597, 0],","        \"104\": [0, 0.69444, 0, 0],","        \"105\": [0, 0.69444, 0, 0],","        \"106\": [0.19444, 0.69444, 0, 0],","        \"107\": [0, 0.69444, 0, 0],","        \"108\": [0, 0.69444, 0, 0],","        \"109\": [0, 0.44444, 0, 0],","        \"110\": [0, 0.44444, 0, 0],","        \"111\": [0, 0.44444, 0, 0],","        \"112\": [0.19444, 0.44444, 0, 0],","        \"113\": [0.19444, 0.44444, 0, 0],","        \"114\": [0, 0.44444, 0, 0],","        \"115\": [0, 0.44444, 0, 0],","        \"116\": [0, 0.63492, 0, 0],","        \"117\": [0, 0.44444, 0, 0],","        \"118\": [0, 0.44444, 0.01597, 0],","        \"119\": [0, 0.44444, 0.01597, 0],","        \"120\": [0, 0.44444, 0, 0],","        \"121\": [0.19444, 0.44444, 0.01597, 0],","        \"122\": [0, 0.44444, 0, 0],","        \"123\": [0.25, 0.75, 0, 0],","        \"124\": [0.25, 0.75, 0, 0],","        \"125\": [0.25, 0.75, 0, 0],","        \"126\": [0.35, 0.34444, 0, 0],","        \"168\": [0, 0.69444, 0, 0],","        \"172\": [0, 0.44444, 0, 0],","        \"175\": [0, 0.59611, 0, 0],","        \"176\": [0, 0.69444, 0, 0],","        \"177\": [0.13333, 0.63333, 0, 0],","        \"180\": [0, 0.69444, 0, 0],","        \"215\": [0.13333, 0.63333, 0, 0],","        \"247\": [0.13333, 0.63333, 0, 0],","        \"305\": [0, 0.44444, 0, 0],","        \"567\": [0.19444, 0.44444, 0, 0],","        \"710\": [0, 0.69444, 0, 0],","        \"711\": [0, 0.63194, 0, 0],","        \"713\": [0, 0.59611, 0, 0],","        \"714\": [0, 0.69444, 0, 0],","        \"715\": [0, 0.69444, 0, 0],","        \"728\": [0, 0.69444, 0, 0],","        \"729\": [0, 0.69444, 0, 0],","        \"730\": [0, 0.69444, 0, 0],","        \"732\": [0, 0.69444, 0, 0],","        \"768\": [0, 0.69444, 0, 0],","        \"769\": [0, 0.69444, 0, 0],","        \"770\": [0, 0.69444, 0, 0],","        \"771\": [0, 0.69444, 0, 0],","        \"772\": [0, 0.59611, 0, 0],","        \"774\": [0, 0.69444, 0, 0],","        \"775\": [0, 0.69444, 0, 0],","        \"776\": [0, 0.69444, 0, 0],","        \"778\": [0, 0.69444, 0, 0],","        \"779\": [0, 0.69444, 0, 0],","        \"780\": [0, 0.63194, 0, 0],","        \"824\": [0.19444, 0.69444, 0, 0],","        \"915\": [0, 0.68611, 0, 0],","        \"916\": [0, 0.68611, 0, 0],","        \"920\": [0, 0.68611, 0, 0],","        \"923\": [0, 0.68611, 0, 0],","        \"926\": [0, 0.68611, 0, 0],","        \"928\": [0, 0.68611, 0, 0],","        \"931\": [0, 0.68611, 0, 0],","        \"933\": [0, 0.68611, 0, 0],","        \"934\": [0, 0.68611, 0, 0],","        \"936\": [0, 0.68611, 0, 0],","        \"937\": [0, 0.68611, 0, 0],","        \"8211\": [0, 0.44444, 0.03194, 0],","        \"8212\": [0, 0.44444, 0.03194, 0],","        \"8216\": [0, 0.69444, 0, 0],","        \"8217\": [0, 0.69444, 0, 0],","        \"8220\": [0, 0.69444, 0, 0],","        \"8221\": [0, 0.69444, 0, 0],","        \"8224\": [0.19444, 0.69444, 0, 0],","        \"8225\": [0.19444, 0.69444, 0, 0],","        \"8242\": [0, 0.55556, 0, 0],","        \"8407\": [0, 0.72444, 0.15486, 0],","        \"8463\": [0, 0.69444, 0, 0],","        \"8465\": [0, 0.69444, 0, 0],","        \"8467\": [0, 0.69444, 0, 0],","        \"8472\": [0.19444, 0.44444, 0, 0],","        \"8476\": [0, 0.69444, 0, 0],","        \"8501\": [0, 0.69444, 0, 0],","        \"8592\": [-0.10889, 0.39111, 0, 0],","        \"8593\": [0.19444, 0.69444, 0, 0],","        \"8594\": [-0.10889, 0.39111, 0, 0],","        \"8595\": [0.19444, 0.69444, 0, 0],","        \"8596\": [-0.10889, 0.39111, 0, 0],","        \"8597\": [0.25, 0.75, 0, 0],","        \"8598\": [0.19444, 0.69444, 0, 0],","        \"8599\": [0.19444, 0.69444, 0, 0],","        \"8600\": [0.19444, 0.69444, 0, 0],","        \"8601\": [0.19444, 0.69444, 0, 0],","        \"8636\": [-0.10889, 0.39111, 0, 0],","        \"8637\": [-0.10889, 0.39111, 0, 0],","        \"8640\": [-0.10889, 0.39111, 0, 0],","        \"8641\": [-0.10889, 0.39111, 0, 0],","        \"8656\": [-0.10889, 0.39111, 0, 0],","        \"8657\": [0.19444, 0.69444, 0, 0],","        \"8658\": [-0.10889, 0.39111, 0, 0],","        \"8659\": [0.19444, 0.69444, 0, 0],","        \"8660\": [-0.10889, 0.39111, 0, 0],","        \"8661\": [0.25, 0.75, 0, 0],","        \"8704\": [0, 0.69444, 0, 0],","        \"8706\": [0, 0.69444, 0.06389, 0],","        \"8707\": [0, 0.69444, 0, 0],","        \"8709\": [0.05556, 0.75, 0, 0],","        \"8711\": [0, 0.68611, 0, 0],","        \"8712\": [0.08556, 0.58556, 0, 0],","        \"8715\": [0.08556, 0.58556, 0, 0],","        \"8722\": [0.13333, 0.63333, 0, 0],","        \"8723\": [0.13333, 0.63333, 0, 0],","        \"8725\": [0.25, 0.75, 0, 0],","        \"8726\": [0.25, 0.75, 0, 0],","        \"8727\": [-0.02778, 0.47222, 0, 0],","        \"8728\": [-0.02639, 0.47361, 0, 0],","        \"8729\": [-0.02639, 0.47361, 0, 0],","        \"8730\": [0.18, 0.82, 0, 0],","        \"8733\": [0, 0.44444, 0, 0],","        \"8734\": [0, 0.44444, 0, 0],","        \"8736\": [0, 0.69224, 0, 0],","        \"8739\": [0.25, 0.75, 0, 0],","        \"8741\": [0.25, 0.75, 0, 0],","        \"8743\": [0, 0.55556, 0, 0],","        \"8744\": [0, 0.55556, 0, 0],","        \"8745\": [0, 0.55556, 0, 0],","        \"8746\": [0, 0.55556, 0, 0],","        \"8747\": [0.19444, 0.69444, 0.12778, 0],","        \"8764\": [-0.10889, 0.39111, 0, 0],","        \"8768\": [0.19444, 0.69444, 0, 0],","        \"8771\": [0.00222, 0.50222, 0, 0],","        \"8776\": [0.02444, 0.52444, 0, 0],","        \"8781\": [0.00222, 0.50222, 0, 0],","        \"8801\": [0.00222, 0.50222, 0, 0],","        \"8804\": [0.19667, 0.69667, 0, 0],","        \"8805\": [0.19667, 0.69667, 0, 0],","        \"8810\": [0.08556, 0.58556, 0, 0],","        \"8811\": [0.08556, 0.58556, 0, 0],","        \"8826\": [0.08556, 0.58556, 0, 0],","        \"8827\": [0.08556, 0.58556, 0, 0],","        \"8834\": [0.08556, 0.58556, 0, 0],","        \"8835\": [0.08556, 0.58556, 0, 0],","        \"8838\": [0.19667, 0.69667, 0, 0],","        \"8839\": [0.19667, 0.69667, 0, 0],","        \"8846\": [0, 0.55556, 0, 0],","        \"8849\": [0.19667, 0.69667, 0, 0],","        \"8850\": [0.19667, 0.69667, 0, 0],","        \"8851\": [0, 0.55556, 0, 0],","        \"8852\": [0, 0.55556, 0, 0],","        \"8853\": [0.13333, 0.63333, 0, 0],","        \"8854\": [0.13333, 0.63333, 0, 0],","        \"8855\": [0.13333, 0.63333, 0, 0],","        \"8856\": [0.13333, 0.63333, 0, 0],","        \"8857\": [0.13333, 0.63333, 0, 0],","        \"8866\": [0, 0.69444, 0, 0],","        \"8867\": [0, 0.69444, 0, 0],","        \"8868\": [0, 0.69444, 0, 0],","        \"8869\": [0, 0.69444, 0, 0],","        \"8900\": [-0.02639, 0.47361, 0, 0],","        \"8901\": [-0.02639, 0.47361, 0, 0],","        \"8902\": [-0.02778, 0.47222, 0, 0],","        \"8968\": [0.25, 0.75, 0, 0],","        \"8969\": [0.25, 0.75, 0, 0],","        \"8970\": [0.25, 0.75, 0, 0],","        \"8971\": [0.25, 0.75, 0, 0],","        \"8994\": [-0.13889, 0.36111, 0, 0],","        \"8995\": [-0.13889, 0.36111, 0, 0],","        \"9651\": [0.19444, 0.69444, 0, 0],","        \"9657\": [-0.02778, 0.47222, 0, 0],","        \"9661\": [0.19444, 0.69444, 0, 0],","        \"9667\": [-0.02778, 0.47222, 0, 0],","        \"9711\": [0.19444, 0.69444, 0, 0],","        \"9824\": [0.12963, 0.69444, 0, 0],","        \"9825\": [0.12963, 0.69444, 0, 0],","        \"9826\": [0.12963, 0.69444, 0, 0],","        \"9827\": [0.12963, 0.69444, 0, 0],","        \"9837\": [0, 0.75, 0, 0],","        \"9838\": [0.19444, 0.69444, 0, 0],","        \"9839\": [0.19444, 0.69444, 0, 0],","        \"10216\": [0.25, 0.75, 0, 0],","        \"10217\": [0.25, 0.75, 0, 0],","        \"10815\": [0, 0.68611, 0, 0],","        \"10927\": [0.19667, 0.69667, 0, 0],","        \"10928\": [0.19667, 0.69667, 0, 0]","    },","    \"Main-Italic\": {","        \"33\": [0, 0.69444, 0.12417, 0],","        \"34\": [0, 0.69444, 0.06961, 0],","        \"35\": [0.19444, 0.69444, 0.06616, 0],","        \"37\": [0.05556, 0.75, 0.13639, 0],","        \"38\": [0, 0.69444, 0.09694, 0],","        \"39\": [0, 0.69444, 0.12417, 0],","        \"40\": [0.25, 0.75, 0.16194, 0],","        \"41\": [0.25, 0.75, 0.03694, 0],","        \"42\": [0, 0.75, 0.14917, 0],","        \"43\": [0.05667, 0.56167, 0.03694, 0],","        \"44\": [0.19444, 0.10556, 0, 0],","        \"45\": [0, 0.43056, 0.02826, 0],","        \"46\": [0, 0.10556, 0, 0],","        \"47\": [0.25, 0.75, 0.16194, 0],","        \"48\": [0, 0.64444, 0.13556, 0],","        \"49\": [0, 0.64444, 0.13556, 0],","        \"50\": [0, 0.64444, 0.13556, 0],","        \"51\": [0, 0.64444, 0.13556, 0],","        \"52\": [0.19444, 0.64444, 0.13556, 0],","        \"53\": [0, 0.64444, 0.13556, 0],","        \"54\": [0, 0.64444, 0.13556, 0],","        \"55\": [0.19444, 0.64444, 0.13556, 0],","        \"56\": [0, 0.64444, 0.13556, 0],","        \"57\": [0, 0.64444, 0.13556, 0],","        \"58\": [0, 0.43056, 0.0582, 0],","        \"59\": [0.19444, 0.43056, 0.0582, 0],","        \"61\": [-0.13313, 0.36687, 0.06616, 0],","        \"63\": [0, 0.69444, 0.1225, 0],","        \"64\": [0, 0.69444, 0.09597, 0],","        \"65\": [0, 0.68333, 0, 0],","        \"66\": [0, 0.68333, 0.10257, 0],","        \"67\": [0, 0.68333, 0.14528, 0],","        \"68\": [0, 0.68333, 0.09403, 0],","        \"69\": [0, 0.68333, 0.12028, 0],","        \"70\": [0, 0.68333, 0.13305, 0],","        \"71\": [0, 0.68333, 0.08722, 0],","        \"72\": [0, 0.68333, 0.16389, 0],","        \"73\": [0, 0.68333, 0.15806, 0],","        \"74\": [0, 0.68333, 0.14028, 0],","        \"75\": [0, 0.68333, 0.14528, 0],","        \"76\": [0, 0.68333, 0, 0],","        \"77\": [0, 0.68333, 0.16389, 0],","        \"78\": [0, 0.68333, 0.16389, 0],","        \"79\": [0, 0.68333, 0.09403, 0],","        \"80\": [0, 0.68333, 0.10257, 0],","        \"81\": [0.19444, 0.68333, 0.09403, 0],","        \"82\": [0, 0.68333, 0.03868, 0],","        \"83\": [0, 0.68333, 0.11972, 0],","        \"84\": [0, 0.68333, 0.13305, 0],","        \"85\": [0, 0.68333, 0.16389, 0],","        \"86\": [0, 0.68333, 0.18361, 0],","        \"87\": [0, 0.68333, 0.18361, 0],","        \"88\": [0, 0.68333, 0.15806, 0],","        \"89\": [0, 0.68333, 0.19383, 0],","        \"90\": [0, 0.68333, 0.14528, 0],","        \"91\": [0.25, 0.75, 0.1875, 0],","        \"93\": [0.25, 0.75, 0.10528, 0],","        \"94\": [0, 0.69444, 0.06646, 0],","        \"95\": [0.31, 0.12056, 0.09208, 0],","        \"97\": [0, 0.43056, 0.07671, 0],","        \"98\": [0, 0.69444, 0.06312, 0],","        \"99\": [0, 0.43056, 0.05653, 0],","        \"100\": [0, 0.69444, 0.10333, 0],","        \"101\": [0, 0.43056, 0.07514, 0],","        \"102\": [0.19444, 0.69444, 0.21194, 0],","        \"103\": [0.19444, 0.43056, 0.08847, 0],","        \"104\": [0, 0.69444, 0.07671, 0],","        \"105\": [0, 0.65536, 0.1019, 0],","        \"106\": [0.19444, 0.65536, 0.14467, 0],","        \"107\": [0, 0.69444, 0.10764, 0],","        \"108\": [0, 0.69444, 0.10333, 0],","        \"109\": [0, 0.43056, 0.07671, 0],","        \"110\": [0, 0.43056, 0.07671, 0],","        \"111\": [0, 0.43056, 0.06312, 0],","        \"112\": [0.19444, 0.43056, 0.06312, 0],","        \"113\": [0.19444, 0.43056, 0.08847, 0],","        \"114\": [0, 0.43056, 0.10764, 0],","        \"115\": [0, 0.43056, 0.08208, 0],","        \"116\": [0, 0.61508, 0.09486, 0],","        \"117\": [0, 0.43056, 0.07671, 0],","        \"118\": [0, 0.43056, 0.10764, 0],","        \"119\": [0, 0.43056, 0.10764, 0],","        \"120\": [0, 0.43056, 0.12042, 0],","        \"121\": [0.19444, 0.43056, 0.08847, 0],","        \"122\": [0, 0.43056, 0.12292, 0],","        \"126\": [0.35, 0.31786, 0.11585, 0],","        \"163\": [0, 0.69444, 0, 0],","        \"305\": [0, 0.43056, 0, 0.02778],","        \"567\": [0.19444, 0.43056, 0, 0.08334],","        \"768\": [0, 0.69444, 0, 0],","        \"769\": [0, 0.69444, 0.09694, 0],","        \"770\": [0, 0.69444, 0.06646, 0],","        \"771\": [0, 0.66786, 0.11585, 0],","        \"772\": [0, 0.56167, 0.10333, 0],","        \"774\": [0, 0.69444, 0.10806, 0],","        \"775\": [0, 0.66786, 0.11752, 0],","        \"776\": [0, 0.66786, 0.10474, 0],","        \"778\": [0, 0.69444, 0, 0],","        \"779\": [0, 0.69444, 0.1225, 0],","        \"780\": [0, 0.62847, 0.08295, 0],","        \"915\": [0, 0.68333, 0.13305, 0],","        \"916\": [0, 0.68333, 0, 0],","        \"920\": [0, 0.68333, 0.09403, 0],","        \"923\": [0, 0.68333, 0, 0],","        \"926\": [0, 0.68333, 0.15294, 0],","        \"928\": [0, 0.68333, 0.16389, 0],","        \"931\": [0, 0.68333, 0.12028, 0],","        \"933\": [0, 0.68333, 0.11111, 0],","        \"934\": [0, 0.68333, 0.05986, 0],","        \"936\": [0, 0.68333, 0.11111, 0],","        \"937\": [0, 0.68333, 0.10257, 0],","        \"8211\": [0, 0.43056, 0.09208, 0],","        \"8212\": [0, 0.43056, 0.09208, 0],","        \"8216\": [0, 0.69444, 0.12417, 0],","        \"8217\": [0, 0.69444, 0.12417, 0],","        \"8220\": [0, 0.69444, 0.1685, 0],","        \"8221\": [0, 0.69444, 0.06961, 0],","        \"8463\": [0, 0.68889, 0, 0]","    },","    \"Main-Regular\": {","        \"32\": [0, 0, 0, 0],","        \"33\": [0, 0.69444, 0, 0],","        \"34\": [0, 0.69444, 0, 0],","        \"35\": [0.19444, 0.69444, 0, 0],","        \"36\": [0.05556, 0.75, 0, 0],","        \"37\": [0.05556, 0.75, 0, 0],","        \"38\": [0, 0.69444, 0, 0],","        \"39\": [0, 0.69444, 0, 0],","        \"40\": [0.25, 0.75, 0, 0],","        \"41\": [0.25, 0.75, 0, 0],","        \"42\": [0, 0.75, 0, 0],","        \"43\": [0.08333, 0.58333, 0, 0],","        \"44\": [0.19444, 0.10556, 0, 0],","        \"45\": [0, 0.43056, 0, 0],","        \"46\": [0, 0.10556, 0, 0],","        \"47\": [0.25, 0.75, 0, 0],","        \"48\": [0, 0.64444, 0, 0],","        \"49\": [0, 0.64444, 0, 0],","        \"50\": [0, 0.64444, 0, 0],","        \"51\": [0, 0.64444, 0, 0],","        \"52\": [0, 0.64444, 0, 0],","        \"53\": [0, 0.64444, 0, 0],","        \"54\": [0, 0.64444, 0, 0],","        \"55\": [0, 0.64444, 0, 0],","        \"56\": [0, 0.64444, 0, 0],","        \"57\": [0, 0.64444, 0, 0],","        \"58\": [0, 0.43056, 0, 0],","        \"59\": [0.19444, 0.43056, 0, 0],","        \"60\": [0.0391, 0.5391, 0, 0],","        \"61\": [-0.13313, 0.36687, 0, 0],","        \"62\": [0.0391, 0.5391, 0, 0],","        \"63\": [0, 0.69444, 0, 0],","        \"64\": [0, 0.69444, 0, 0],","        \"65\": [0, 0.68333, 0, 0],","        \"66\": [0, 0.68333, 0, 0],","        \"67\": [0, 0.68333, 0, 0],","        \"68\": [0, 0.68333, 0, 0],","        \"69\": [0, 0.68333, 0, 0],","        \"70\": [0, 0.68333, 0, 0],","        \"71\": [0, 0.68333, 0, 0],","        \"72\": [0, 0.68333, 0, 0],","        \"73\": [0, 0.68333, 0, 0],","        \"74\": [0, 0.68333, 0, 0],","        \"75\": [0, 0.68333, 0, 0],","        \"76\": [0, 0.68333, 0, 0],","        \"77\": [0, 0.68333, 0, 0],","        \"78\": [0, 0.68333, 0, 0],","        \"79\": [0, 0.68333, 0, 0],","        \"80\": [0, 0.68333, 0, 0],","        \"81\": [0.19444, 0.68333, 0, 0],","        \"82\": [0, 0.68333, 0, 0],","        \"83\": [0, 0.68333, 0, 0],","        \"84\": [0, 0.68333, 0, 0],","        \"85\": [0, 0.68333, 0, 0],","        \"86\": [0, 0.68333, 0.01389, 0],","        \"87\": [0, 0.68333, 0.01389, 0],","        \"88\": [0, 0.68333, 0, 0],","        \"89\": [0, 0.68333, 0.025, 0],","        \"90\": [0, 0.68333, 0, 0],","        \"91\": [0.25, 0.75, 0, 0],","        \"92\": [0.25, 0.75, 0, 0],","        \"93\": [0.25, 0.75, 0, 0],","        \"94\": [0, 0.69444, 0, 0],","        \"95\": [0.31, 0.12056, 0.02778, 0],","        \"96\": [0, 0.69444, 0, 0],","        \"97\": [0, 0.43056, 0, 0],","        \"98\": [0, 0.69444, 0, 0],","        \"99\": [0, 0.43056, 0, 0],","        \"100\": [0, 0.69444, 0, 0],","        \"101\": [0, 0.43056, 0, 0],","        \"102\": [0, 0.69444, 0.07778, 0],","        \"103\": [0.19444, 0.43056, 0.01389, 0],","        \"104\": [0, 0.69444, 0, 0],","        \"105\": [0, 0.66786, 0, 0],","        \"106\": [0.19444, 0.66786, 0, 0],","        \"107\": [0, 0.69444, 0, 0],","        \"108\": [0, 0.69444, 0, 0],","        \"109\": [0, 0.43056, 0, 0],","        \"110\": [0, 0.43056, 0, 0],","        \"111\": [0, 0.43056, 0, 0],","        \"112\": [0.19444, 0.43056, 0, 0],","        \"113\": [0.19444, 0.43056, 0, 0],","        \"114\": [0, 0.43056, 0, 0],","        \"115\": [0, 0.43056, 0, 0],","        \"116\": [0, 0.61508, 0, 0],","        \"117\": [0, 0.43056, 0, 0],","        \"118\": [0, 0.43056, 0.01389, 0],","        \"119\": [0, 0.43056, 0.01389, 0],","        \"120\": [0, 0.43056, 0, 0],","        \"121\": [0.19444, 0.43056, 0.01389, 0],","        \"122\": [0, 0.43056, 0, 0],","        \"123\": [0.25, 0.75, 0, 0],","        \"124\": [0.25, 0.75, 0, 0],","        \"125\": [0.25, 0.75, 0, 0],","        \"126\": [0.35, 0.31786, 0, 0],","        \"160\": [0, 0, 0, 0],","        \"168\": [0, 0.66786, 0, 0],","        \"172\": [0, 0.43056, 0, 0],","        \"175\": [0, 0.56778, 0, 0],","        \"176\": [0, 0.69444, 0, 0],","        \"177\": [0.08333, 0.58333, 0, 0],","        \"180\": [0, 0.69444, 0, 0],","        \"215\": [0.08333, 0.58333, 0, 0],","        \"247\": [0.08333, 0.58333, 0, 0],","        \"305\": [0, 0.43056, 0, 0],","        \"567\": [0.19444, 0.43056, 0, 0],","        \"710\": [0, 0.69444, 0, 0],","        \"711\": [0, 0.62847, 0, 0],","        \"713\": [0, 0.56778, 0, 0],","        \"714\": [0, 0.69444, 0, 0],","        \"715\": [0, 0.69444, 0, 0],","        \"728\": [0, 0.69444, 0, 0],","        \"729\": [0, 0.66786, 0, 0],","        \"730\": [0, 0.69444, 0, 0],","        \"732\": [0, 0.66786, 0, 0],","        \"768\": [0, 0.69444, 0, 0],","        \"769\": [0, 0.69444, 0, 0],","        \"770\": [0, 0.69444, 0, 0],","        \"771\": [0, 0.66786, 0, 0],","        \"772\": [0, 0.56778, 0, 0],","        \"774\": [0, 0.69444, 0, 0],","        \"775\": [0, 0.66786, 0, 0],","        \"776\": [0, 0.66786, 0, 0],","        \"778\": [0, 0.69444, 0, 0],","        \"779\": [0, 0.69444, 0, 0],","        \"780\": [0, 0.62847, 0, 0],","        \"824\": [0.19444, 0.69444, 0, 0],","        \"915\": [0, 0.68333, 0, 0],","        \"916\": [0, 0.68333, 0, 0],","        \"920\": [0, 0.68333, 0, 0],","        \"923\": [0, 0.68333, 0, 0],","        \"926\": [0, 0.68333, 0, 0],","        \"928\": [0, 0.68333, 0, 0],","        \"931\": [0, 0.68333, 0, 0],","        \"933\": [0, 0.68333, 0, 0],","        \"934\": [0, 0.68333, 0, 0],","        \"936\": [0, 0.68333, 0, 0],","        \"937\": [0, 0.68333, 0, 0],","        \"8211\": [0, 0.43056, 0.02778, 0],","        \"8212\": [0, 0.43056, 0.02778, 0],","        \"8216\": [0, 0.69444, 0, 0],","        \"8217\": [0, 0.69444, 0, 0],","        \"8220\": [0, 0.69444, 0, 0],","        \"8221\": [0, 0.69444, 0, 0],","        \"8224\": [0.19444, 0.69444, 0, 0],","        \"8225\": [0.19444, 0.69444, 0, 0],","        \"8230\": [0, 0.12, 0, 0],","        \"8242\": [0, 0.55556, 0, 0],","        \"8407\": [0, 0.71444, 0.15382, 0],","        \"8463\": [0, 0.68889, 0, 0],","        \"8465\": [0, 0.69444, 0, 0],","        \"8467\": [0, 0.69444, 0, 0.11111],","        \"8472\": [0.19444, 0.43056, 0, 0.11111],","        \"8476\": [0, 0.69444, 0, 0],","        \"8501\": [0, 0.69444, 0, 0],","        \"8592\": [-0.13313, 0.36687, 0, 0],","        \"8593\": [0.19444, 0.69444, 0, 0],","        \"8594\": [-0.13313, 0.36687, 0, 0],","        \"8595\": [0.19444, 0.69444, 0, 0],","        \"8596\": [-0.13313, 0.36687, 0, 0],","        \"8597\": [0.25, 0.75, 0, 0],","        \"8598\": [0.19444, 0.69444, 0, 0],","        \"8599\": [0.19444, 0.69444, 0, 0],","        \"8600\": [0.19444, 0.69444, 0, 0],","        \"8601\": [0.19444, 0.69444, 0, 0],","        \"8614\": [0.011, 0.511, 0, 0],","        \"8617\": [0.011, 0.511, 0, 0],","        \"8618\": [0.011, 0.511, 0, 0],","        \"8636\": [-0.13313, 0.36687, 0, 0],","        \"8637\": [-0.13313, 0.36687, 0, 0],","        \"8640\": [-0.13313, 0.36687, 0, 0],","        \"8641\": [-0.13313, 0.36687, 0, 0],","        \"8652\": [0.011, 0.671, 0, 0],","        \"8656\": [-0.13313, 0.36687, 0, 0],","        \"8657\": [0.19444, 0.69444, 0, 0],","        \"8658\": [-0.13313, 0.36687, 0, 0],","        \"8659\": [0.19444, 0.69444, 0, 0],","        \"8660\": [-0.13313, 0.36687, 0, 0],","        \"8661\": [0.25, 0.75, 0, 0],","        \"8704\": [0, 0.69444, 0, 0],","        \"8706\": [0, 0.69444, 0.05556, 0.08334],","        \"8707\": [0, 0.69444, 0, 0],","        \"8709\": [0.05556, 0.75, 0, 0],","        \"8711\": [0, 0.68333, 0, 0],","        \"8712\": [0.0391, 0.5391, 0, 0],","        \"8715\": [0.0391, 0.5391, 0, 0],","        \"8722\": [0.08333, 0.58333, 0, 0],","        \"8723\": [0.08333, 0.58333, 0, 0],","        \"8725\": [0.25, 0.75, 0, 0],","        \"8726\": [0.25, 0.75, 0, 0],","        \"8727\": [-0.03472, 0.46528, 0, 0],","        \"8728\": [-0.05555, 0.44445, 0, 0],","        \"8729\": [-0.05555, 0.44445, 0, 0],","        \"8730\": [0.2, 0.8, 0, 0],","        \"8733\": [0, 0.43056, 0, 0],","        \"8734\": [0, 0.43056, 0, 0],","        \"8736\": [0, 0.69224, 0, 0],","        \"8739\": [0.25, 0.75, 0, 0],","        \"8741\": [0.25, 0.75, 0, 0],","        \"8743\": [0, 0.55556, 0, 0],","        \"8744\": [0, 0.55556, 0, 0],","        \"8745\": [0, 0.55556, 0, 0],","        \"8746\": [0, 0.55556, 0, 0],","        \"8747\": [0.19444, 0.69444, 0.11111, 0],","        \"8764\": [-0.13313, 0.36687, 0, 0],","        \"8768\": [0.19444, 0.69444, 0, 0],","        \"8771\": [-0.03625, 0.46375, 0, 0],","        \"8773\": [-0.022, 0.589, 0, 0],","        \"8776\": [-0.01688, 0.48312, 0, 0],","        \"8781\": [-0.03625, 0.46375, 0, 0],","        \"8784\": [-0.133, 0.67, 0, 0],","        \"8800\": [0.215, 0.716, 0, 0],","        \"8801\": [-0.03625, 0.46375, 0, 0],","        \"8804\": [0.13597, 0.63597, 0, 0],","        \"8805\": [0.13597, 0.63597, 0, 0],","        \"8810\": [0.0391, 0.5391, 0, 0],","        \"8811\": [0.0391, 0.5391, 0, 0],","        \"8826\": [0.0391, 0.5391, 0, 0],","        \"8827\": [0.0391, 0.5391, 0, 0],","        \"8834\": [0.0391, 0.5391, 0, 0],","        \"8835\": [0.0391, 0.5391, 0, 0],","        \"8838\": [0.13597, 0.63597, 0, 0],","        \"8839\": [0.13597, 0.63597, 0, 0],","        \"8846\": [0, 0.55556, 0, 0],","        \"8849\": [0.13597, 0.63597, 0, 0],","        \"8850\": [0.13597, 0.63597, 0, 0],","        \"8851\": [0, 0.55556, 0, 0],","        \"8852\": [0, 0.55556, 0, 0],","        \"8853\": [0.08333, 0.58333, 0, 0],","        \"8854\": [0.08333, 0.58333, 0, 0],","        \"8855\": [0.08333, 0.58333, 0, 0],","        \"8856\": [0.08333, 0.58333, 0, 0],","        \"8857\": [0.08333, 0.58333, 0, 0],","        \"8866\": [0, 0.69444, 0, 0],","        \"8867\": [0, 0.69444, 0, 0],","        \"8868\": [0, 0.69444, 0, 0],","        \"8869\": [0, 0.69444, 0, 0],","        \"8872\": [0.249, 0.75, 0, 0],","        \"8900\": [-0.05555, 0.44445, 0, 0],","        \"8901\": [-0.05555, 0.44445, 0, 0],","        \"8902\": [-0.03472, 0.46528, 0, 0],","        \"8904\": [0.005, 0.505, 0, 0],","        \"8942\": [0.03, 0.9, 0, 0],","        \"8943\": [-0.19, 0.31, 0, 0],","        \"8945\": [-0.1, 0.82, 0, 0],","        \"8968\": [0.25, 0.75, 0, 0],","        \"8969\": [0.25, 0.75, 0, 0],","        \"8970\": [0.25, 0.75, 0, 0],","        \"8971\": [0.25, 0.75, 0, 0],","        \"8994\": [-0.14236, 0.35764, 0, 0],","        \"8995\": [-0.14236, 0.35764, 0, 0],","        \"9136\": [0.244, 0.744, 0, 0],","        \"9137\": [0.244, 0.744, 0, 0],","        \"9651\": [0.19444, 0.69444, 0, 0],","        \"9657\": [-0.03472, 0.46528, 0, 0],","        \"9661\": [0.19444, 0.69444, 0, 0],","        \"9667\": [-0.03472, 0.46528, 0, 0],","        \"9711\": [0.19444, 0.69444, 0, 0],","        \"9824\": [0.12963, 0.69444, 0, 0],","        \"9825\": [0.12963, 0.69444, 0, 0],","        \"9826\": [0.12963, 0.69444, 0, 0],","        \"9827\": [0.12963, 0.69444, 0, 0],","        \"9837\": [0, 0.75, 0, 0],","        \"9838\": [0.19444, 0.69444, 0, 0],","        \"9839\": [0.19444, 0.69444, 0, 0],","        \"10216\": [0.25, 0.75, 0, 0],","        \"10217\": [0.25, 0.75, 0, 0],","        \"10222\": [0.244, 0.744, 0, 0],","        \"10223\": [0.244, 0.744, 0, 0],","        \"10229\": [0.011, 0.511, 0, 0],","        \"10230\": [0.011, 0.511, 0, 0],","        \"10231\": [0.011, 0.511, 0, 0],","        \"10232\": [0.024, 0.525, 0, 0],","        \"10233\": [0.024, 0.525, 0, 0],","        \"10234\": [0.024, 0.525, 0, 0],","        \"10236\": [0.011, 0.511, 0, 0],","        \"10815\": [0, 0.68333, 0, 0],","        \"10927\": [0.13597, 0.63597, 0, 0],","        \"10928\": [0.13597, 0.63597, 0, 0]","    },","    \"Math-BoldItalic\": {","        \"47\": [0.19444, 0.69444, 0, 0],","        \"65\": [0, 0.68611, 0, 0],","        \"66\": [0, 0.68611, 0.04835, 0],","        \"67\": [0, 0.68611, 0.06979, 0],","        \"68\": [0, 0.68611, 0.03194, 0],","        \"69\": [0, 0.68611, 0.05451, 0],","        \"70\": [0, 0.68611, 0.15972, 0],","        \"71\": [0, 0.68611, 0, 0],","        \"72\": [0, 0.68611, 0.08229, 0],","        \"73\": [0, 0.68611, 0.07778, 0],","        \"74\": [0, 0.68611, 0.10069, 0],","        \"75\": [0, 0.68611, 0.06979, 0],","        \"76\": [0, 0.68611, 0, 0],","        \"77\": [0, 0.68611, 0.11424, 0],","        \"78\": [0, 0.68611, 0.11424, 0],","        \"79\": [0, 0.68611, 0.03194, 0],","        \"80\": [0, 0.68611, 0.15972, 0],","        \"81\": [0.19444, 0.68611, 0, 0],","        \"82\": [0, 0.68611, 0.00421, 0],","        \"83\": [0, 0.68611, 0.05382, 0],","        \"84\": [0, 0.68611, 0.15972, 0],","        \"85\": [0, 0.68611, 0.11424, 0],","        \"86\": [0, 0.68611, 0.25555, 0],","        \"87\": [0, 0.68611, 0.15972, 0],","        \"88\": [0, 0.68611, 0.07778, 0],","        \"89\": [0, 0.68611, 0.25555, 0],","        \"90\": [0, 0.68611, 0.06979, 0],","        \"97\": [0, 0.44444, 0, 0],","        \"98\": [0, 0.69444, 0, 0],","        \"99\": [0, 0.44444, 0, 0],","        \"100\": [0, 0.69444, 0, 0],","        \"101\": [0, 0.44444, 0, 0],","        \"102\": [0.19444, 0.69444, 0.11042, 0],","        \"103\": [0.19444, 0.44444, 0.03704, 0],","        \"104\": [0, 0.69444, 0, 0],","        \"105\": [0, 0.69326, 0, 0],","        \"106\": [0.19444, 0.69326, 0.0622, 0],","        \"107\": [0, 0.69444, 0.01852, 0],","        \"108\": [0, 0.69444, 0.0088, 0],","        \"109\": [0, 0.44444, 0, 0],","        \"110\": [0, 0.44444, 0, 0],","        \"111\": [0, 0.44444, 0, 0],","        \"112\": [0.19444, 0.44444, 0, 0],","        \"113\": [0.19444, 0.44444, 0.03704, 0],","        \"114\": [0, 0.44444, 0.03194, 0],","        \"115\": [0, 0.44444, 0, 0],","        \"116\": [0, 0.63492, 0, 0],","        \"117\": [0, 0.44444, 0, 0],","        \"118\": [0, 0.44444, 0.03704, 0],","        \"119\": [0, 0.44444, 0.02778, 0],","        \"120\": [0, 0.44444, 0, 0],","        \"121\": [0.19444, 0.44444, 0.03704, 0],","        \"122\": [0, 0.44444, 0.04213, 0],","        \"915\": [0, 0.68611, 0.15972, 0],","        \"916\": [0, 0.68611, 0, 0],","        \"920\": [0, 0.68611, 0.03194, 0],","        \"923\": [0, 0.68611, 0, 0],","        \"926\": [0, 0.68611, 0.07458, 0],","        \"928\": [0, 0.68611, 0.08229, 0],","        \"931\": [0, 0.68611, 0.05451, 0],","        \"933\": [0, 0.68611, 0.15972, 0],","        \"934\": [0, 0.68611, 0, 0],","        \"936\": [0, 0.68611, 0.11653, 0],","        \"937\": [0, 0.68611, 0.04835, 0],","        \"945\": [0, 0.44444, 0, 0],","        \"946\": [0.19444, 0.69444, 0.03403, 0],","        \"947\": [0.19444, 0.44444, 0.06389, 0],","        \"948\": [0, 0.69444, 0.03819, 0],","        \"949\": [0, 0.44444, 0, 0],","        \"950\": [0.19444, 0.69444, 0.06215, 0],","        \"951\": [0.19444, 0.44444, 0.03704, 0],","        \"952\": [0, 0.69444, 0.03194, 0],","        \"953\": [0, 0.44444, 0, 0],","        \"954\": [0, 0.44444, 0, 0],","        \"955\": [0, 0.69444, 0, 0],","        \"956\": [0.19444, 0.44444, 0, 0],","        \"957\": [0, 0.44444, 0.06898, 0],","        \"958\": [0.19444, 0.69444, 0.03021, 0],","        \"959\": [0, 0.44444, 0, 0],","        \"960\": [0, 0.44444, 0.03704, 0],","        \"961\": [0.19444, 0.44444, 0, 0],","        \"962\": [0.09722, 0.44444, 0.07917, 0],","        \"963\": [0, 0.44444, 0.03704, 0],","        \"964\": [0, 0.44444, 0.13472, 0],","        \"965\": [0, 0.44444, 0.03704, 0],","        \"966\": [0.19444, 0.44444, 0, 0],","        \"967\": [0.19444, 0.44444, 0, 0],","        \"968\": [0.19444, 0.69444, 0.03704, 0],","        \"969\": [0, 0.44444, 0.03704, 0],","        \"977\": [0, 0.69444, 0, 0],","        \"981\": [0.19444, 0.69444, 0, 0],","        \"982\": [0, 0.44444, 0.03194, 0],","        \"1009\": [0.19444, 0.44444, 0, 0],","        \"1013\": [0, 0.44444, 0, 0]","    },","    \"Math-Italic\": {","        \"47\": [0.19444, 0.69444, 0, 0],","        \"65\": [0, 0.68333, 0, 0.13889],","        \"66\": [0, 0.68333, 0.05017, 0.08334],","        \"67\": [0, 0.68333, 0.07153, 0.08334],","        \"68\": [0, 0.68333, 0.02778, 0.05556],","        \"69\": [0, 0.68333, 0.05764, 0.08334],","        \"70\": [0, 0.68333, 0.13889, 0.08334],","        \"71\": [0, 0.68333, 0, 0.08334],","        \"72\": [0, 0.68333, 0.08125, 0.05556],","        \"73\": [0, 0.68333, 0.07847, 0.11111],","        \"74\": [0, 0.68333, 0.09618, 0.16667],","        \"75\": [0, 0.68333, 0.07153, 0.05556],","        \"76\": [0, 0.68333, 0, 0.02778],","        \"77\": [0, 0.68333, 0.10903, 0.08334],","        \"78\": [0, 0.68333, 0.10903, 0.08334],","        \"79\": [0, 0.68333, 0.02778, 0.08334],","        \"80\": [0, 0.68333, 0.13889, 0.08334],","        \"81\": [0.19444, 0.68333, 0, 0.08334],","        \"82\": [0, 0.68333, 0.00773, 0.08334],","        \"83\": [0, 0.68333, 0.05764, 0.08334],","        \"84\": [0, 0.68333, 0.13889, 0.08334],","        \"85\": [0, 0.68333, 0.10903, 0.02778],","        \"86\": [0, 0.68333, 0.22222, 0],","        \"87\": [0, 0.68333, 0.13889, 0],","        \"88\": [0, 0.68333, 0.07847, 0.08334],","        \"89\": [0, 0.68333, 0.22222, 0],","        \"90\": [0, 0.68333, 0.07153, 0.08334],","        \"97\": [0, 0.43056, 0, 0],","        \"98\": [0, 0.69444, 0, 0],","        \"99\": [0, 0.43056, 0, 0.05556],","        \"100\": [0, 0.69444, 0, 0.16667],","        \"101\": [0, 0.43056, 0, 0.05556],","        \"102\": [0.19444, 0.69444, 0.10764, 0.16667],","        \"103\": [0.19444, 0.43056, 0.03588, 0.02778],","        \"104\": [0, 0.69444, 0, 0],","        \"105\": [0, 0.65952, 0, 0],","        \"106\": [0.19444, 0.65952, 0.05724, 0],","        \"107\": [0, 0.69444, 0.03148, 0],","        \"108\": [0, 0.69444, 0.01968, 0.08334],","        \"109\": [0, 0.43056, 0, 0],","        \"110\": [0, 0.43056, 0, 0],","        \"111\": [0, 0.43056, 0, 0.05556],","        \"112\": [0.19444, 0.43056, 0, 0.08334],","        \"113\": [0.19444, 0.43056, 0.03588, 0.08334],","        \"114\": [0, 0.43056, 0.02778, 0.05556],","        \"115\": [0, 0.43056, 0, 0.05556],","        \"116\": [0, 0.61508, 0, 0.08334],","        \"117\": [0, 0.43056, 0, 0.02778],","        \"118\": [0, 0.43056, 0.03588, 0.02778],","        \"119\": [0, 0.43056, 0.02691, 0.08334],","        \"120\": [0, 0.43056, 0, 0.02778],","        \"121\": [0.19444, 0.43056, 0.03588, 0.05556],","        \"122\": [0, 0.43056, 0.04398, 0.05556],","        \"915\": [0, 0.68333, 0.13889, 0.08334],","        \"916\": [0, 0.68333, 0, 0.16667],","        \"920\": [0, 0.68333, 0.02778, 0.08334],","        \"923\": [0, 0.68333, 0, 0.16667],","        \"926\": [0, 0.68333, 0.07569, 0.08334],","        \"928\": [0, 0.68333, 0.08125, 0.05556],","        \"931\": [0, 0.68333, 0.05764, 0.08334],","        \"933\": [0, 0.68333, 0.13889, 0.05556],","        \"934\": [0, 0.68333, 0, 0.08334],","        \"936\": [0, 0.68333, 0.11, 0.05556],","        \"937\": [0, 0.68333, 0.05017, 0.08334],","        \"945\": [0, 0.43056, 0.0037, 0.02778],","        \"946\": [0.19444, 0.69444, 0.05278, 0.08334],","        \"947\": [0.19444, 0.43056, 0.05556, 0],","        \"948\": [0, 0.69444, 0.03785, 0.05556],","        \"949\": [0, 0.43056, 0, 0.08334],","        \"950\": [0.19444, 0.69444, 0.07378, 0.08334],","        \"951\": [0.19444, 0.43056, 0.03588, 0.05556],","        \"952\": [0, 0.69444, 0.02778, 0.08334],","        \"953\": [0, 0.43056, 0, 0.05556],","        \"954\": [0, 0.43056, 0, 0],","        \"955\": [0, 0.69444, 0, 0],","        \"956\": [0.19444, 0.43056, 0, 0.02778],","        \"957\": [0, 0.43056, 0.06366, 0.02778],","        \"958\": [0.19444, 0.69444, 0.04601, 0.11111],","        \"959\": [0, 0.43056, 0, 0.05556],","        \"960\": [0, 0.43056, 0.03588, 0],","        \"961\": [0.19444, 0.43056, 0, 0.08334],","        \"962\": [0.09722, 0.43056, 0.07986, 0.08334],","        \"963\": [0, 0.43056, 0.03588, 0],","        \"964\": [0, 0.43056, 0.1132, 0.02778],","        \"965\": [0, 0.43056, 0.03588, 0.02778],","        \"966\": [0.19444, 0.43056, 0, 0.08334],","        \"967\": [0.19444, 0.43056, 0, 0.05556],","        \"968\": [0.19444, 0.69444, 0.03588, 0.11111],","        \"969\": [0, 0.43056, 0.03588, 0],","        \"977\": [0, 0.69444, 0, 0.08334],","        \"981\": [0.19444, 0.69444, 0, 0.08334],","        \"982\": [0, 0.43056, 0.02778, 0],","        \"1009\": [0.19444, 0.43056, 0, 0.08334],","        \"1013\": [0, 0.43056, 0, 0.05556]","    },","    \"Math-Regular\": {","        \"65\": [0, 0.68333, 0, 0.13889],","        \"66\": [0, 0.68333, 0.05017, 0.08334],","        \"67\": [0, 0.68333, 0.07153, 0.08334],","        \"68\": [0, 0.68333, 0.02778, 0.05556],","        \"69\": [0, 0.68333, 0.05764, 0.08334],","        \"70\": [0, 0.68333, 0.13889, 0.08334],","        \"71\": [0, 0.68333, 0, 0.08334],","        \"72\": [0, 0.68333, 0.08125, 0.05556],","        \"73\": [0, 0.68333, 0.07847, 0.11111],","        \"74\": [0, 0.68333, 0.09618, 0.16667],","        \"75\": [0, 0.68333, 0.07153, 0.05556],","        \"76\": [0, 0.68333, 0, 0.02778],","        \"77\": [0, 0.68333, 0.10903, 0.08334],","        \"78\": [0, 0.68333, 0.10903, 0.08334],","        \"79\": [0, 0.68333, 0.02778, 0.08334],","        \"80\": [0, 0.68333, 0.13889, 0.08334],","        \"81\": [0.19444, 0.68333, 0, 0.08334],","        \"82\": [0, 0.68333, 0.00773, 0.08334],","        \"83\": [0, 0.68333, 0.05764, 0.08334],","        \"84\": [0, 0.68333, 0.13889, 0.08334],","        \"85\": [0, 0.68333, 0.10903, 0.02778],","        \"86\": [0, 0.68333, 0.22222, 0],","        \"87\": [0, 0.68333, 0.13889, 0],","        \"88\": [0, 0.68333, 0.07847, 0.08334],","        \"89\": [0, 0.68333, 0.22222, 0],","        \"90\": [0, 0.68333, 0.07153, 0.08334],","        \"97\": [0, 0.43056, 0, 0],","        \"98\": [0, 0.69444, 0, 0],","        \"99\": [0, 0.43056, 0, 0.05556],","        \"100\": [0, 0.69444, 0, 0.16667],","        \"101\": [0, 0.43056, 0, 0.05556],","        \"102\": [0.19444, 0.69444, 0.10764, 0.16667],","        \"103\": [0.19444, 0.43056, 0.03588, 0.02778],","        \"104\": [0, 0.69444, 0, 0],","        \"105\": [0, 0.65952, 0, 0],","        \"106\": [0.19444, 0.65952, 0.05724, 0],","        \"107\": [0, 0.69444, 0.03148, 0],","        \"108\": [0, 0.69444, 0.01968, 0.08334],","        \"109\": [0, 0.43056, 0, 0],","        \"110\": [0, 0.43056, 0, 0],","        \"111\": [0, 0.43056, 0, 0.05556],","        \"112\": [0.19444, 0.43056, 0, 0.08334],","        \"113\": [0.19444, 0.43056, 0.03588, 0.08334],","        \"114\": [0, 0.43056, 0.02778, 0.05556],","        \"115\": [0, 0.43056, 0, 0.05556],","        \"116\": [0, 0.61508, 0, 0.08334],","        \"117\": [0, 0.43056, 0, 0.02778],","        \"118\": [0, 0.43056, 0.03588, 0.02778],","        \"119\": [0, 0.43056, 0.02691, 0.08334],","        \"120\": [0, 0.43056, 0, 0.02778],","        \"121\": [0.19444, 0.43056, 0.03588, 0.05556],","        \"122\": [0, 0.43056, 0.04398, 0.05556],","        \"915\": [0, 0.68333, 0.13889, 0.08334],","        \"916\": [0, 0.68333, 0, 0.16667],","        \"920\": [0, 0.68333, 0.02778, 0.08334],","        \"923\": [0, 0.68333, 0, 0.16667],","        \"926\": [0, 0.68333, 0.07569, 0.08334],","        \"928\": [0, 0.68333, 0.08125, 0.05556],","        \"931\": [0, 0.68333, 0.05764, 0.08334],","        \"933\": [0, 0.68333, 0.13889, 0.05556],","        \"934\": [0, 0.68333, 0, 0.08334],","        \"936\": [0, 0.68333, 0.11, 0.05556],","        \"937\": [0, 0.68333, 0.05017, 0.08334],","        \"945\": [0, 0.43056, 0.0037, 0.02778],","        \"946\": [0.19444, 0.69444, 0.05278, 0.08334],","        \"947\": [0.19444, 0.43056, 0.05556, 0],","        \"948\": [0, 0.69444, 0.03785, 0.05556],","        \"949\": [0, 0.43056, 0, 0.08334],","        \"950\": [0.19444, 0.69444, 0.07378, 0.08334],","        \"951\": [0.19444, 0.43056, 0.03588, 0.05556],","        \"952\": [0, 0.69444, 0.02778, 0.08334],","        \"953\": [0, 0.43056, 0, 0.05556],","        \"954\": [0, 0.43056, 0, 0],","        \"955\": [0, 0.69444, 0, 0],","        \"956\": [0.19444, 0.43056, 0, 0.02778],","        \"957\": [0, 0.43056, 0.06366, 0.02778],","        \"958\": [0.19444, 0.69444, 0.04601, 0.11111],","        \"959\": [0, 0.43056, 0, 0.05556],","        \"960\": [0, 0.43056, 0.03588, 0],","        \"961\": [0.19444, 0.43056, 0, 0.08334],","        \"962\": [0.09722, 0.43056, 0.07986, 0.08334],","        \"963\": [0, 0.43056, 0.03588, 0],","        \"964\": [0, 0.43056, 0.1132, 0.02778],","        \"965\": [0, 0.43056, 0.03588, 0.02778],","        \"966\": [0.19444, 0.43056, 0, 0.08334],","        \"967\": [0.19444, 0.43056, 0, 0.05556],","        \"968\": [0.19444, 0.69444, 0.03588, 0.11111],","        \"969\": [0, 0.43056, 0.03588, 0],","        \"977\": [0, 0.69444, 0, 0.08334],","        \"981\": [0.19444, 0.69444, 0, 0.08334],","        \"982\": [0, 0.43056, 0.02778, 0],","        \"1009\": [0.19444, 0.43056, 0, 0.08334],","        \"1013\": [0, 0.43056, 0, 0.05556]","    },","    \"SansSerif-Regular\": {","        \"33\": [0, 0.69444, 0, 0],","        \"34\": [0, 0.69444, 0, 0],","        \"35\": [0.19444, 0.69444, 0, 0],","        \"36\": [0.05556, 0.75, 0, 0],","        \"37\": [0.05556, 0.75, 0, 0],","        \"38\": [0, 0.69444, 0, 0],","        \"39\": [0, 0.69444, 0, 0],","        \"40\": [0.25, 0.75, 0, 0],","        \"41\": [0.25, 0.75, 0, 0],","        \"42\": [0, 0.75, 0, 0],","        \"43\": [0.08333, 0.58333, 0, 0],","        \"44\": [0.125, 0.08333, 0, 0],","        \"45\": [0, 0.44444, 0, 0],","        \"46\": [0, 0.08333, 0, 0],","        \"47\": [0.25, 0.75, 0, 0],","        \"48\": [0, 0.65556, 0, 0],","        \"49\": [0, 0.65556, 0, 0],","        \"50\": [0, 0.65556, 0, 0],","        \"51\": [0, 0.65556, 0, 0],","        \"52\": [0, 0.65556, 0, 0],","        \"53\": [0, 0.65556, 0, 0],","        \"54\": [0, 0.65556, 0, 0],","        \"55\": [0, 0.65556, 0, 0],","        \"56\": [0, 0.65556, 0, 0],","        \"57\": [0, 0.65556, 0, 0],","        \"58\": [0, 0.44444, 0, 0],","        \"59\": [0.125, 0.44444, 0, 0],","        \"61\": [-0.13, 0.37, 0, 0],","        \"63\": [0, 0.69444, 0, 0],","        \"64\": [0, 0.69444, 0, 0],","        \"65\": [0, 0.69444, 0, 0],","        \"66\": [0, 0.69444, 0, 0],","        \"67\": [0, 0.69444, 0, 0],","        \"68\": [0, 0.69444, 0, 0],","        \"69\": [0, 0.69444, 0, 0],","        \"70\": [0, 0.69444, 0, 0],","        \"71\": [0, 0.69444, 0, 0],","        \"72\": [0, 0.69444, 0, 0],","        \"73\": [0, 0.69444, 0, 0],","        \"74\": [0, 0.69444, 0, 0],","        \"75\": [0, 0.69444, 0, 0],","        \"76\": [0, 0.69444, 0, 0],","        \"77\": [0, 0.69444, 0, 0],","        \"78\": [0, 0.69444, 0, 0],","        \"79\": [0, 0.69444, 0, 0],","        \"80\": [0, 0.69444, 0, 0],","        \"81\": [0.125, 0.69444, 0, 0],","        \"82\": [0, 0.69444, 0, 0],","        \"83\": [0, 0.69444, 0, 0],","        \"84\": [0, 0.69444, 0, 0],","        \"85\": [0, 0.69444, 0, 0],","        \"86\": [0, 0.69444, 0.01389, 0],","        \"87\": [0, 0.69444, 0.01389, 0],","        \"88\": [0, 0.69444, 0, 0],","        \"89\": [0, 0.69444, 0.025, 0],","        \"90\": [0, 0.69444, 0, 0],","        \"91\": [0.25, 0.75, 0, 0],","        \"93\": [0.25, 0.75, 0, 0],","        \"94\": [0, 0.69444, 0, 0],","        \"95\": [0.35, 0.09444, 0.02778, 0],","        \"97\": [0, 0.44444, 0, 0],","        \"98\": [0, 0.69444, 0, 0],","        \"99\": [0, 0.44444, 0, 0],","        \"100\": [0, 0.69444, 0, 0],","        \"101\": [0, 0.44444, 0, 0],","        \"102\": [0, 0.69444, 0.06944, 0],","        \"103\": [0.19444, 0.44444, 0.01389, 0],","        \"104\": [0, 0.69444, 0, 0],","        \"105\": [0, 0.67937, 0, 0],","        \"106\": [0.19444, 0.67937, 0, 0],","        \"107\": [0, 0.69444, 0, 0],","        \"108\": [0, 0.69444, 0, 0],","        \"109\": [0, 0.44444, 0, 0],","        \"110\": [0, 0.44444, 0, 0],","        \"111\": [0, 0.44444, 0, 0],","        \"112\": [0.19444, 0.44444, 0, 0],","        \"113\": [0.19444, 0.44444, 0, 0],","        \"114\": [0, 0.44444, 0.01389, 0],","        \"115\": [0, 0.44444, 0, 0],","        \"116\": [0, 0.57143, 0, 0],","        \"117\": [0, 0.44444, 0, 0],","        \"118\": [0, 0.44444, 0.01389, 0],","        \"119\": [0, 0.44444, 0.01389, 0],","        \"120\": [0, 0.44444, 0, 0],","        \"121\": [0.19444, 0.44444, 0.01389, 0],","        \"122\": [0, 0.44444, 0, 0],","        \"126\": [0.35, 0.32659, 0, 0],","        \"305\": [0, 0.44444, 0, 0],","        \"567\": [0.19444, 0.44444, 0, 0],","        \"768\": [0, 0.69444, 0, 0],","        \"769\": [0, 0.69444, 0, 0],","        \"770\": [0, 0.69444, 0, 0],","        \"771\": [0, 0.67659, 0, 0],","        \"772\": [0, 0.60889, 0, 0],","        \"774\": [0, 0.69444, 0, 0],","        \"775\": [0, 0.67937, 0, 0],","        \"776\": [0, 0.67937, 0, 0],","        \"778\": [0, 0.69444, 0, 0],","        \"779\": [0, 0.69444, 0, 0],","        \"780\": [0, 0.63194, 0, 0],","        \"915\": [0, 0.69444, 0, 0],","        \"916\": [0, 0.69444, 0, 0],","        \"920\": [0, 0.69444, 0, 0],","        \"923\": [0, 0.69444, 0, 0],","        \"926\": [0, 0.69444, 0, 0],","        \"928\": [0, 0.69444, 0, 0],","        \"931\": [0, 0.69444, 0, 0],","        \"933\": [0, 0.69444, 0, 0],","        \"934\": [0, 0.69444, 0, 0],","        \"936\": [0, 0.69444, 0, 0],","        \"937\": [0, 0.69444, 0, 0],","        \"8211\": [0, 0.44444, 0.02778, 0],","        \"8212\": [0, 0.44444, 0.02778, 0],","        \"8216\": [0, 0.69444, 0, 0],","        \"8217\": [0, 0.69444, 0, 0],","        \"8220\": [0, 0.69444, 0, 0],","        \"8221\": [0, 0.69444, 0, 0]","    },","    \"Script-Regular\": {","        \"65\": [0, 0.7, 0.22925, 0],","        \"66\": [0, 0.7, 0.04087, 0],","        \"67\": [0, 0.7, 0.1689, 0],","        \"68\": [0, 0.7, 0.09371, 0],","        \"69\": [0, 0.7, 0.18583, 0],","        \"70\": [0, 0.7, 0.13634, 0],","        \"71\": [0, 0.7, 0.17322, 0],","        \"72\": [0, 0.7, 0.29694, 0],","        \"73\": [0, 0.7, 0.19189, 0],","        \"74\": [0.27778, 0.7, 0.19189, 0],","        \"75\": [0, 0.7, 0.31259, 0],","        \"76\": [0, 0.7, 0.19189, 0],","        \"77\": [0, 0.7, 0.15981, 0],","        \"78\": [0, 0.7, 0.3525, 0],","        \"79\": [0, 0.7, 0.08078, 0],","        \"80\": [0, 0.7, 0.08078, 0],","        \"81\": [0, 0.7, 0.03305, 0],","        \"82\": [0, 0.7, 0.06259, 0],","        \"83\": [0, 0.7, 0.19189, 0],","        \"84\": [0, 0.7, 0.29087, 0],","        \"85\": [0, 0.7, 0.25815, 0],","        \"86\": [0, 0.7, 0.27523, 0],","        \"87\": [0, 0.7, 0.27523, 0],","        \"88\": [0, 0.7, 0.26006, 0],","        \"89\": [0, 0.7, 0.2939, 0],","        \"90\": [0, 0.7, 0.24037, 0]","    },","    \"Size1-Regular\": {","        \"40\": [0.35001, 0.85, 0, 0],","        \"41\": [0.35001, 0.85, 0, 0],","        \"47\": [0.35001, 0.85, 0, 0],","        \"91\": [0.35001, 0.85, 0, 0],","        \"92\": [0.35001, 0.85, 0, 0],","        \"93\": [0.35001, 0.85, 0, 0],","        \"123\": [0.35001, 0.85, 0, 0],","        \"125\": [0.35001, 0.85, 0, 0],","        \"710\": [0, 0.72222, 0, 0],","        \"732\": [0, 0.72222, 0, 0],","        \"770\": [0, 0.72222, 0, 0],","        \"771\": [0, 0.72222, 0, 0],","        \"8214\": [-0.00099, 0.601, 0, 0],","        \"8593\": [1e-05, 0.6, 0, 0],","        \"8595\": [1e-05, 0.6, 0, 0],","        \"8657\": [1e-05, 0.6, 0, 0],","        \"8659\": [1e-05, 0.6, 0, 0],","        \"8719\": [0.25001, 0.75, 0, 0],","        \"8720\": [0.25001, 0.75, 0, 0],","        \"8721\": [0.25001, 0.75, 0, 0],","        \"8730\": [0.35001, 0.85, 0, 0],","        \"8739\": [-0.00599, 0.606, 0, 0],","        \"8741\": [-0.00599, 0.606, 0, 0],","        \"8747\": [0.30612, 0.805, 0.19445, 0],","        \"8748\": [0.306, 0.805, 0.19445, 0],","        \"8749\": [0.306, 0.805, 0.19445, 0],","        \"8750\": [0.30612, 0.805, 0.19445, 0],","        \"8896\": [0.25001, 0.75, 0, 0],","        \"8897\": [0.25001, 0.75, 0, 0],","        \"8898\": [0.25001, 0.75, 0, 0],","        \"8899\": [0.25001, 0.75, 0, 0],","        \"8968\": [0.35001, 0.85, 0, 0],","        \"8969\": [0.35001, 0.85, 0, 0],","        \"8970\": [0.35001, 0.85, 0, 0],","        \"8971\": [0.35001, 0.85, 0, 0],","        \"9168\": [-0.00099, 0.601, 0, 0],","        \"10216\": [0.35001, 0.85, 0, 0],","        \"10217\": [0.35001, 0.85, 0, 0],","        \"10752\": [0.25001, 0.75, 0, 0],","        \"10753\": [0.25001, 0.75, 0, 0],","        \"10754\": [0.25001, 0.75, 0, 0],","        \"10756\": [0.25001, 0.75, 0, 0],","        \"10758\": [0.25001, 0.75, 0, 0]","    },","    \"Size2-Regular\": {","        \"40\": [0.65002, 1.15, 0, 0],","        \"41\": [0.65002, 1.15, 0, 0],","        \"47\": [0.65002, 1.15, 0, 0],","        \"91\": [0.65002, 1.15, 0, 0],","        \"92\": [0.65002, 1.15, 0, 0],","        \"93\": [0.65002, 1.15, 0, 0],","        \"123\": [0.65002, 1.15, 0, 0],","        \"125\": [0.65002, 1.15, 0, 0],","        \"710\": [0, 0.75, 0, 0],","        \"732\": [0, 0.75, 0, 0],","        \"770\": [0, 0.75, 0, 0],","        \"771\": [0, 0.75, 0, 0],","        \"8719\": [0.55001, 1.05, 0, 0],","        \"8720\": [0.55001, 1.05, 0, 0],","        \"8721\": [0.55001, 1.05, 0, 0],","        \"8730\": [0.65002, 1.15, 0, 0],","        \"8747\": [0.86225, 1.36, 0.44445, 0],","        \"8748\": [0.862, 1.36, 0.44445, 0],","        \"8749\": [0.862, 1.36, 0.44445, 0],","        \"8750\": [0.86225, 1.36, 0.44445, 0],","        \"8896\": [0.55001, 1.05, 0, 0],","        \"8897\": [0.55001, 1.05, 0, 0],","        \"8898\": [0.55001, 1.05, 0, 0],","        \"8899\": [0.55001, 1.05, 0, 0],","        \"8968\": [0.65002, 1.15, 0, 0],","        \"8969\": [0.65002, 1.15, 0, 0],","        \"8970\": [0.65002, 1.15, 0, 0],","        \"8971\": [0.65002, 1.15, 0, 0],","        \"10216\": [0.65002, 1.15, 0, 0],","        \"10217\": [0.65002, 1.15, 0, 0],","        \"10752\": [0.55001, 1.05, 0, 0],","        \"10753\": [0.55001, 1.05, 0, 0],","        \"10754\": [0.55001, 1.05, 0, 0],","        \"10756\": [0.55001, 1.05, 0, 0],","        \"10758\": [0.55001, 1.05, 0, 0]","    },","    \"Size3-Regular\": {","        \"40\": [0.95003, 1.45, 0, 0],","        \"41\": [0.95003, 1.45, 0, 0],","        \"47\": [0.95003, 1.45, 0, 0],","        \"91\": [0.95003, 1.45, 0, 0],","        \"92\": [0.95003, 1.45, 0, 0],","        \"93\": [0.95003, 1.45, 0, 0],","        \"123\": [0.95003, 1.45, 0, 0],","        \"125\": [0.95003, 1.45, 0, 0],","        \"710\": [0, 0.75, 0, 0],","        \"732\": [0, 0.75, 0, 0],","        \"770\": [0, 0.75, 0, 0],","        \"771\": [0, 0.75, 0, 0],","        \"8730\": [0.95003, 1.45, 0, 0],","        \"8968\": [0.95003, 1.45, 0, 0],","        \"8969\": [0.95003, 1.45, 0, 0],","        \"8970\": [0.95003, 1.45, 0, 0],","        \"8971\": [0.95003, 1.45, 0, 0],","        \"10216\": [0.95003, 1.45, 0, 0],","        \"10217\": [0.95003, 1.45, 0, 0]","    },","    \"Size4-Regular\": {","        \"40\": [1.25003, 1.75, 0, 0],","        \"41\": [1.25003, 1.75, 0, 0],","        \"47\": [1.25003, 1.75, 0, 0],","        \"91\": [1.25003, 1.75, 0, 0],","        \"92\": [1.25003, 1.75, 0, 0],","        \"93\": [1.25003, 1.75, 0, 0],","        \"123\": [1.25003, 1.75, 0, 0],","        \"125\": [1.25003, 1.75, 0, 0],","        \"710\": [0, 0.825, 0, 0],","        \"732\": [0, 0.825, 0, 0],","        \"770\": [0, 0.825, 0, 0],","        \"771\": [0, 0.825, 0, 0],","        \"8730\": [1.25003, 1.75, 0, 0],","        \"8968\": [1.25003, 1.75, 0, 0],","        \"8969\": [1.25003, 1.75, 0, 0],","        \"8970\": [1.25003, 1.75, 0, 0],","        \"8971\": [1.25003, 1.75, 0, 0],","        \"9115\": [0.64502, 1.155, 0, 0],","        \"9116\": [1e-05, 0.6, 0, 0],","        \"9117\": [0.64502, 1.155, 0, 0],","        \"9118\": [0.64502, 1.155, 0, 0],","        \"9119\": [1e-05, 0.6, 0, 0],","        \"9120\": [0.64502, 1.155, 0, 0],","        \"9121\": [0.64502, 1.155, 0, 0],","        \"9122\": [-0.00099, 0.601, 0, 0],","        \"9123\": [0.64502, 1.155, 0, 0],","        \"9124\": [0.64502, 1.155, 0, 0],","        \"9125\": [-0.00099, 0.601, 0, 0],","        \"9126\": [0.64502, 1.155, 0, 0],","        \"9127\": [1e-05, 0.9, 0, 0],","        \"9128\": [0.65002, 1.15, 0, 0],","        \"9129\": [0.90001, 0, 0, 0],","        \"9130\": [0, 0.3, 0, 0],","        \"9131\": [1e-05, 0.9, 0, 0],","        \"9132\": [0.65002, 1.15, 0, 0],","        \"9133\": [0.90001, 0, 0, 0],","        \"9143\": [0.88502, 0.915, 0, 0],","        \"10216\": [1.25003, 1.75, 0, 0],","        \"10217\": [1.25003, 1.75, 0, 0],","        \"57344\": [-0.00499, 0.605, 0, 0],","        \"57345\": [-0.00499, 0.605, 0, 0],","        \"57680\": [0, 0.12, 0, 0],","        \"57681\": [0, 0.12, 0, 0],","        \"57682\": [0, 0.12, 0, 0],","        \"57683\": [0, 0.12, 0, 0]","    },","    \"Typewriter-Regular\": {","        \"33\": [0, 0.61111, 0, 0],","        \"34\": [0, 0.61111, 0, 0],","        \"35\": [0, 0.61111, 0, 0],","        \"36\": [0.08333, 0.69444, 0, 0],","        \"37\": [0.08333, 0.69444, 0, 0],","        \"38\": [0, 0.61111, 0, 0],","        \"39\": [0, 0.61111, 0, 0],","        \"40\": [0.08333, 0.69444, 0, 0],","        \"41\": [0.08333, 0.69444, 0, 0],","        \"42\": [0, 0.52083, 0, 0],","        \"43\": [-0.08056, 0.53055, 0, 0],","        \"44\": [0.13889, 0.125, 0, 0],","        \"45\": [-0.08056, 0.53055, 0, 0],","        \"46\": [0, 0.125, 0, 0],","        \"47\": [0.08333, 0.69444, 0, 0],","        \"48\": [0, 0.61111, 0, 0],","        \"49\": [0, 0.61111, 0, 0],","        \"50\": [0, 0.61111, 0, 0],","        \"51\": [0, 0.61111, 0, 0],","        \"52\": [0, 0.61111, 0, 0],","        \"53\": [0, 0.61111, 0, 0],","        \"54\": [0, 0.61111, 0, 0],","        \"55\": [0, 0.61111, 0, 0],","        \"56\": [0, 0.61111, 0, 0],","        \"57\": [0, 0.61111, 0, 0],","        \"58\": [0, 0.43056, 0, 0],","        \"59\": [0.13889, 0.43056, 0, 0],","        \"60\": [-0.05556, 0.55556, 0, 0],","        \"61\": [-0.19549, 0.41562, 0, 0],","        \"62\": [-0.05556, 0.55556, 0, 0],","        \"63\": [0, 0.61111, 0, 0],","        \"64\": [0, 0.61111, 0, 0],","        \"65\": [0, 0.61111, 0, 0],","        \"66\": [0, 0.61111, 0, 0],","        \"67\": [0, 0.61111, 0, 0],","        \"68\": [0, 0.61111, 0, 0],","        \"69\": [0, 0.61111, 0, 0],","        \"70\": [0, 0.61111, 0, 0],","        \"71\": [0, 0.61111, 0, 0],","        \"72\": [0, 0.61111, 0, 0],","        \"73\": [0, 0.61111, 0, 0],","        \"74\": [0, 0.61111, 0, 0],","        \"75\": [0, 0.61111, 0, 0],","        \"76\": [0, 0.61111, 0, 0],","        \"77\": [0, 0.61111, 0, 0],","        \"78\": [0, 0.61111, 0, 0],","        \"79\": [0, 0.61111, 0, 0],","        \"80\": [0, 0.61111, 0, 0],","        \"81\": [0.13889, 0.61111, 0, 0],","        \"82\": [0, 0.61111, 0, 0],","        \"83\": [0, 0.61111, 0, 0],","        \"84\": [0, 0.61111, 0, 0],","        \"85\": [0, 0.61111, 0, 0],","        \"86\": [0, 0.61111, 0, 0],","        \"87\": [0, 0.61111, 0, 0],","        \"88\": [0, 0.61111, 0, 0],","        \"89\": [0, 0.61111, 0, 0],","        \"90\": [0, 0.61111, 0, 0],","        \"91\": [0.08333, 0.69444, 0, 0],","        \"92\": [0.08333, 0.69444, 0, 0],","        \"93\": [0.08333, 0.69444, 0, 0],","        \"94\": [0, 0.61111, 0, 0],","        \"95\": [0.09514, 0, 0, 0],","        \"96\": [0, 0.61111, 0, 0],","        \"97\": [0, 0.43056, 0, 0],","        \"98\": [0, 0.61111, 0, 0],","        \"99\": [0, 0.43056, 0, 0],","        \"100\": [0, 0.61111, 0, 0],","        \"101\": [0, 0.43056, 0, 0],","        \"102\": [0, 0.61111, 0, 0],","        \"103\": [0.22222, 0.43056, 0, 0],","        \"104\": [0, 0.61111, 0, 0],","        \"105\": [0, 0.61111, 0, 0],","        \"106\": [0.22222, 0.61111, 0, 0],","        \"107\": [0, 0.61111, 0, 0],","        \"108\": [0, 0.61111, 0, 0],","        \"109\": [0, 0.43056, 0, 0],","        \"110\": [0, 0.43056, 0, 0],","        \"111\": [0, 0.43056, 0, 0],","        \"112\": [0.22222, 0.43056, 0, 0],","        \"113\": [0.22222, 0.43056, 0, 0],","        \"114\": [0, 0.43056, 0, 0],","        \"115\": [0, 0.43056, 0, 0],","        \"116\": [0, 0.55358, 0, 0],","        \"117\": [0, 0.43056, 0, 0],","        \"118\": [0, 0.43056, 0, 0],","        \"119\": [0, 0.43056, 0, 0],","        \"120\": [0, 0.43056, 0, 0],","        \"121\": [0.22222, 0.43056, 0, 0],","        \"122\": [0, 0.43056, 0, 0],","        \"123\": [0.08333, 0.69444, 0, 0],","        \"124\": [0.08333, 0.69444, 0, 0],","        \"125\": [0.08333, 0.69444, 0, 0],","        \"126\": [0, 0.61111, 0, 0],","        \"127\": [0, 0.61111, 0, 0],","        \"305\": [0, 0.43056, 0, 0],","        \"567\": [0.22222, 0.43056, 0, 0],","        \"768\": [0, 0.61111, 0, 0],","        \"769\": [0, 0.61111, 0, 0],","        \"770\": [0, 0.61111, 0, 0],","        \"771\": [0, 0.61111, 0, 0],","        \"772\": [0, 0.56555, 0, 0],","        \"774\": [0, 0.61111, 0, 0],","        \"776\": [0, 0.61111, 0, 0],","        \"778\": [0, 0.61111, 0, 0],","        \"780\": [0, 0.56597, 0, 0],","        \"915\": [0, 0.61111, 0, 0],","        \"916\": [0, 0.61111, 0, 0],","        \"920\": [0, 0.61111, 0, 0],","        \"923\": [0, 0.61111, 0, 0],","        \"926\": [0, 0.61111, 0, 0],","        \"928\": [0, 0.61111, 0, 0],","        \"931\": [0, 0.61111, 0, 0],","        \"933\": [0, 0.61111, 0, 0],","        \"934\": [0, 0.61111, 0, 0],","        \"936\": [0, 0.61111, 0, 0],","        \"937\": [0, 0.61111, 0, 0],","        \"2018\": [0, 0.61111, 0, 0],","        \"2019\": [0, 0.61111, 0, 0],","        \"8242\": [0, 0.61111, 0, 0]","    }","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/buildCommon.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/buildCommon.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":1,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":1,"140":1,"141":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":42,"loc":{"start":{"line":42,"column":17},"end":{"line":42,"column":69}}},"2":{"name":"(anonymous_2)","line":83,"loc":{"start":{"line":83,"column":14},"end":{"line":83,"column":54}}},"3":{"name":"(anonymous_3)","line":101,"loc":{"start":{"line":101,"column":18},"end":{"line":101,"column":64}}},"4":{"name":"(anonymous_4)","line":115,"loc":{"start":{"line":115,"column":13},"end":{"line":115,"column":53}}},"5":{"name":"(anonymous_5)","line":132,"loc":{"start":{"line":132,"column":14},"end":{"line":132,"column":45}}},"6":{"name":"(anonymous_6)","line":163,"loc":{"start":{"line":163,"column":30},"end":{"line":163,"column":45}}},"7":{"name":"(anonymous_7)","line":195,"loc":{"start":{"line":195,"column":15},"end":{"line":195,"column":52}}},"8":{"name":"(anonymous_8)","line":207,"loc":{"start":{"line":207,"column":22},"end":{"line":207,"column":47}}},"9":{"name":"(anonymous_9)","line":216,"loc":{"start":{"line":216,"column":19},"end":{"line":216,"column":38}}},"10":{"name":"(anonymous_10)","line":229,"loc":{"start":{"line":229,"column":20},"end":{"line":229,"column":48}}},"11":{"name":"(anonymous_11)","line":280,"loc":{"start":{"line":280,"column":16},"end":{"line":280,"column":72}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":35}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":35}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":31}},"5":{"start":{"line":12,"column":0},"end":{"line":24,"column":2}},"6":{"start":{"line":27,"column":0},"end":{"line":31,"column":2}},"7":{"start":{"line":42,"column":0},"end":{"line":77,"column":2}},"8":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"9":{"start":{"line":45,"column":8},"end":{"line":45,"column":45}},"10":{"start":{"line":48,"column":4},"end":{"line":48,"column":69}},"11":{"start":{"line":50,"column":4},"end":{"line":50,"column":19}},"12":{"start":{"line":51,"column":4},"end":{"line":65,"column":5}},"13":{"start":{"line":52,"column":8},"end":{"line":52,"column":36}},"14":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"15":{"start":{"line":54,"column":12},"end":{"line":54,"column":23}},"16":{"start":{"line":56,"column":8},"end":{"line":58,"column":21}},"17":{"start":{"line":61,"column":8},"end":{"line":63,"column":34}},"18":{"start":{"line":64,"column":8},"end":{"line":64,"column":72}},"19":{"start":{"line":67,"column":4},"end":{"line":74,"column":5}},"20":{"start":{"line":68,"column":8},"end":{"line":70,"column":9}},"21":{"start":{"line":69,"column":12},"end":{"line":69,"column":46}},"22":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"23":{"start":{"line":72,"column":12},"end":{"line":72,"column":56}},"24":{"start":{"line":76,"column":4},"end":{"line":76,"column":22}},"25":{"start":{"line":83,"column":0},"end":{"line":96,"column":2}},"26":{"start":{"line":90,"column":4},"end":{"line":95,"column":5}},"27":{"start":{"line":91,"column":8},"end":{"line":91,"column":73}},"28":{"start":{"line":93,"column":8},"end":{"line":94,"column":76}},"29":{"start":{"line":101,"column":0},"end":{"line":110,"column":2}},"30":{"start":{"line":102,"column":4},"end":{"line":109,"column":5}},"31":{"start":{"line":103,"column":8},"end":{"line":103,"column":53}},"32":{"start":{"line":104,"column":11},"end":{"line":109,"column":5}},"33":{"start":{"line":105,"column":8},"end":{"line":106,"column":78}},"34":{"start":{"line":108,"column":8},"end":{"line":108,"column":72}},"35":{"start":{"line":115,"column":0},"end":{"line":127,"column":2}},"36":{"start":{"line":116,"column":4},"end":{"line":126,"column":5}},"37":{"start":{"line":121,"column":8},"end":{"line":122,"column":77}},"38":{"start":{"line":124,"column":8},"end":{"line":125,"column":77}},"39":{"start":{"line":132,"column":0},"end":{"line":157,"column":2}},"40":{"start":{"line":133,"column":4},"end":{"line":133,"column":26}},"41":{"start":{"line":134,"column":4},"end":{"line":134,"column":28}},"42":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"43":{"start":{"line":136,"column":8},"end":{"line":136,"column":45}},"44":{"start":{"line":139,"column":4},"end":{"line":139,"column":27}},"45":{"start":{"line":141,"column":4},"end":{"line":141,"column":28}},"46":{"start":{"line":142,"column":4},"end":{"line":156,"column":5}},"47":{"start":{"line":143,"column":8},"end":{"line":153,"column":9}},"48":{"start":{"line":144,"column":12},"end":{"line":144,"column":57}},"49":{"start":{"line":146,"column":12},"end":{"line":146,"column":50}},"50":{"start":{"line":147,"column":12},"end":{"line":152,"column":13}},"51":{"start":{"line":148,"column":16},"end":{"line":149,"column":76}},"52":{"start":{"line":151,"column":16},"end":{"line":151,"column":72}},"53":{"start":{"line":155,"column":8},"end":{"line":155,"column":64}},"54":{"start":{"line":163,"column":0},"end":{"line":185,"column":2}},"55":{"start":{"line":164,"column":4},"end":{"line":164,"column":19}},"56":{"start":{"line":165,"column":4},"end":{"line":165,"column":18}},"57":{"start":{"line":166,"column":4},"end":{"line":166,"column":24}},"58":{"start":{"line":168,"column":4},"end":{"line":180,"column":5}},"59":{"start":{"line":169,"column":8},"end":{"line":179,"column":9}},"60":{"start":{"line":170,"column":12},"end":{"line":172,"column":13}},"61":{"start":{"line":171,"column":16},"end":{"line":171,"column":49}},"62":{"start":{"line":173,"column":12},"end":{"line":175,"column":13}},"63":{"start":{"line":174,"column":16},"end":{"line":174,"column":47}},"64":{"start":{"line":176,"column":12},"end":{"line":178,"column":13}},"65":{"start":{"line":177,"column":16},"end":{"line":177,"column":59}},"66":{"start":{"line":182,"column":4},"end":{"line":182,"column":25}},"67":{"start":{"line":183,"column":4},"end":{"line":183,"column":23}},"68":{"start":{"line":184,"column":4},"end":{"line":184,"column":35}},"69":{"start":{"line":195,"column":0},"end":{"line":201,"column":2}},"70":{"start":{"line":196,"column":4},"end":{"line":196,"column":60}},"71":{"start":{"line":198,"column":4},"end":{"line":198,"column":34}},"72":{"start":{"line":200,"column":4},"end":{"line":200,"column":16}},"73":{"start":{"line":207,"column":0},"end":{"line":211,"column":2}},"74":{"start":{"line":208,"column":4},"end":{"line":208,"column":51}},"75":{"start":{"line":210,"column":4},"end":{"line":210,"column":34}},"76":{"start":{"line":216,"column":0},"end":{"line":222,"column":2}},"77":{"start":{"line":217,"column":4},"end":{"line":217,"column":58}},"78":{"start":{"line":219,"column":4},"end":{"line":219,"column":38}},"79":{"start":{"line":221,"column":4},"end":{"line":221,"column":20}},"80":{"start":{"line":229,"column":0},"end":{"line":239,"column":2}},"81":{"start":{"line":230,"column":4},"end":{"line":230,"column":73}},"82":{"start":{"line":231,"column":4},"end":{"line":232,"column":57}},"83":{"start":{"line":234,"column":4},"end":{"line":236,"column":25}},"84":{"start":{"line":238,"column":4},"end":{"line":238,"column":21}},"85":{"start":{"line":280,"column":0},"end":{"line":368,"column":2}},"86":{"start":{"line":281,"column":4},"end":{"line":281,"column":14}},"87":{"start":{"line":282,"column":4},"end":{"line":282,"column":16}},"88":{"start":{"line":283,"column":4},"end":{"line":283,"column":10}},"89":{"start":{"line":284,"column":4},"end":{"line":324,"column":5}},"90":{"start":{"line":285,"column":8},"end":{"line":285,"column":35}},"91":{"start":{"line":286,"column":8},"end":{"line":286,"column":36}},"92":{"start":{"line":290,"column":8},"end":{"line":290,"column":66}},"93":{"start":{"line":291,"column":8},"end":{"line":291,"column":24}},"94":{"start":{"line":292,"column":8},"end":{"line":303,"column":9}},"95":{"start":{"line":293,"column":12},"end":{"line":294,"column":42}},"96":{"start":{"line":295,"column":12},"end":{"line":297,"column":48}},"97":{"start":{"line":299,"column":12},"end":{"line":299,"column":37}},"98":{"start":{"line":301,"column":12},"end":{"line":301,"column":54}},"99":{"start":{"line":302,"column":12},"end":{"line":302,"column":42}},"100":{"start":{"line":304,"column":11},"end":{"line":324,"column":5}},"101":{"start":{"line":307,"column":8},"end":{"line":307,"column":34}},"102":{"start":{"line":308,"column":8},"end":{"line":314,"column":9}},"103":{"start":{"line":309,"column":12},"end":{"line":313,"column":13}},"104":{"start":{"line":310,"column":16},"end":{"line":310,"column":43}},"105":{"start":{"line":312,"column":16},"end":{"line":312,"column":75}},"106":{"start":{"line":315,"column":8},"end":{"line":315,"column":23}},"107":{"start":{"line":316,"column":11},"end":{"line":324,"column":5}},"108":{"start":{"line":317,"column":8},"end":{"line":317,"column":30}},"109":{"start":{"line":318,"column":11},"end":{"line":324,"column":5}},"110":{"start":{"line":319,"column":8},"end":{"line":319,"column":55}},"111":{"start":{"line":320,"column":11},"end":{"line":324,"column":5}},"112":{"start":{"line":321,"column":8},"end":{"line":321,"column":40}},"113":{"start":{"line":323,"column":8},"end":{"line":323,"column":18}},"114":{"start":{"line":327,"column":4},"end":{"line":327,"column":24}},"115":{"start":{"line":328,"column":4},"end":{"line":332,"column":5}},"116":{"start":{"line":329,"column":8},"end":{"line":331,"column":9}},"117":{"start":{"line":330,"column":12},"end":{"line":330,"column":78}},"118":{"start":{"line":333,"column":4},"end":{"line":333,"column":56}},"119":{"start":{"line":336,"column":4},"end":{"line":336,"column":26}},"120":{"start":{"line":337,"column":4},"end":{"line":337,"column":20}},"121":{"start":{"line":338,"column":4},"end":{"line":354,"column":5}},"122":{"start":{"line":339,"column":8},"end":{"line":353,"column":9}},"123":{"start":{"line":340,"column":12},"end":{"line":340,"column":40}},"124":{"start":{"line":342,"column":12},"end":{"line":342,"column":41}},"125":{"start":{"line":344,"column":12},"end":{"line":344,"column":47}},"126":{"start":{"line":345,"column":12},"end":{"line":345,"column":50}},"127":{"start":{"line":347,"column":12},"end":{"line":347,"column":61}},"128":{"start":{"line":348,"column":12},"end":{"line":348,"column":38}},"129":{"start":{"line":349,"column":12},"end":{"line":349,"column":37}},"130":{"start":{"line":350,"column":12},"end":{"line":350,"column":47}},"131":{"start":{"line":352,"column":12},"end":{"line":352,"column":41}},"132":{"start":{"line":358,"column":4},"end":{"line":359,"column":73}},"133":{"start":{"line":360,"column":4},"end":{"line":360,"column":35}},"134":{"start":{"line":362,"column":4},"end":{"line":362,"column":50}},"135":{"start":{"line":365,"column":4},"end":{"line":365,"column":51}},"136":{"start":{"line":366,"column":4},"end":{"line":366,"column":48}},"137":{"start":{"line":367,"column":4},"end":{"line":367,"column":17}},"138":{"start":{"line":371,"column":0},"end":{"line":382,"column":2}},"139":{"start":{"line":386,"column":0},"end":{"line":415,"column":2}},"140":{"start":{"line":423,"column":0},"end":{"line":467,"column":2}},"141":{"start":{"line":469,"column":0},"end":{"line":480,"column":2}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":28}},{"start":{"line":44,"column":32},"end":{"line":44,"column":60}}]},"3":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]},"5":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":8},"end":{"line":61,"column":38}},{"start":{"line":61,"column":42},"end":{"line":63,"column":33}}]},"6":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":68,"column":8}},{"start":{"line":68,"column":8},"end":{"line":68,"column":8}}]},"8":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"9":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"10":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":22}},{"start":{"line":90,"column":26},"end":{"line":90,"column":62}}]},"11":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"12":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":11},"end":{"line":104,"column":11}},{"start":{"line":104,"column":11},"end":{"line":104,"column":11}}]},"13":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]},"14":{"line":116,"type":"binary-expr","locations":[{"start":{"line":116,"column":8},"end":{"line":116,"column":37}},{"start":{"line":119,"column":12},"end":{"line":119,"column":48}},{"start":{"line":120,"column":12},"end":{"line":120,"column":48}}]},"15":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"16":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":8},"end":{"line":135,"column":28}},{"start":{"line":135,"column":32},"end":{"line":135,"column":60}}]},"17":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"18":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":8}},{"start":{"line":143,"column":8},"end":{"line":143,"column":8}}]},"19":{"line":143,"type":"binary-expr","locations":[{"start":{"line":143,"column":12},"end":{"line":143,"column":29}},{"start":{"line":143,"column":33},"end":{"line":143,"column":69}}]},"20":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":12},"end":{"line":147,"column":12}},{"start":{"line":147,"column":12},"end":{"line":147,"column":12}}]},"21":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":168,"column":4}},{"start":{"line":168,"column":4},"end":{"line":168,"column":4}}]},"22":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":12},"end":{"line":170,"column":12}},{"start":{"line":170,"column":12},"end":{"line":170,"column":12}}]},"23":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":12},"end":{"line":173,"column":12}},{"start":{"line":173,"column":12},"end":{"line":173,"column":12}}]},"24":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":12},"end":{"line":176,"column":12}},{"start":{"line":176,"column":12},"end":{"line":176,"column":12}}]},"25":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"26":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":11},"end":{"line":304,"column":11}},{"start":{"line":304,"column":11},"end":{"line":304,"column":11}}]},"27":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":12},"end":{"line":309,"column":12}},{"start":{"line":309,"column":12},"end":{"line":309,"column":12}}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":11},"end":{"line":316,"column":11}},{"start":{"line":316,"column":11},"end":{"line":316,"column":11}}]},"29":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":11},"end":{"line":318,"column":11}},{"start":{"line":318,"column":11},"end":{"line":318,"column":11}}]},"30":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":11},"end":{"line":320,"column":11}},{"start":{"line":320,"column":11},"end":{"line":320,"column":11}}]},"31":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":8},"end":{"line":329,"column":8}},{"start":{"line":329,"column":8},"end":{"line":329,"column":8}}]},"32":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":8},"end":{"line":339,"column":8}},{"start":{"line":339,"column":8},"end":{"line":339,"column":8}}]}},"code":["/* eslint no-console:0 */","/**"," * This module contains general functions that can be used for building"," * different kinds of domTree nodes in a consistent manner."," */","","var domTree = require(\"./domTree\");","var fontMetrics = require(\"./fontMetrics\");","var symbols = require(\"./symbols\");","var utils = require(\"./utils\");","","var greekCapitals = [","    \"\\\\Gamma\",","    \"\\\\Delta\",","    \"\\\\Theta\",","    \"\\\\Lambda\",","    \"\\\\Xi\",","    \"\\\\Pi\",","    \"\\\\Sigma\",","    \"\\\\Upsilon\",","    \"\\\\Phi\",","    \"\\\\Psi\",","    \"\\\\Omega\"","];","","// The following have to be loaded from Main-Italic font, using class mainit","var mainitLetters = [","    \"\\u0131\",   // dotless i, \\imath","    \"\\u0237\",   // dotless j, \\jmath","    \"\\u00a3\"   // \\pounds","];","","/**"," * Makes a symbolNode after translation via the list of symbols in symbols.js."," * Correctly pulls out metrics for the character, and optionally takes a list of"," * classes to be attached to the node."," *"," * TODO: make argument order closer to makeSpan"," * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which"," * should if present come first in `classes`."," */","var makeSymbol = function(value, fontFamily, mode, options, classes) {","    // Replace the value with its replaced value from symbol.js","    if (symbols[mode][value] && symbols[mode][value].replace) {","        value = symbols[mode][value].replace;","    }","","    var metrics = fontMetrics.getCharacterMetrics(value, fontFamily);","","    var symbolNode;","    if (metrics) {","        var italic = metrics.italic;","        if (mode === \"text\") {","            italic = 0;","        }","        symbolNode = new domTree.symbolNode(","            value, metrics.height, metrics.depth, italic, metrics.skew,","            classes);","    } else {","        // TODO(emily): Figure out a good way to only print this in development","        typeof console !== \"undefined\" && console.warn(","            \"No character metrics for '\" + value + \"' in style '\" +","                fontFamily + \"'\");","        symbolNode = new domTree.symbolNode(value, 0, 0, 0, 0, classes);","    }","","    if (options) {","        if (options.style.isTight()) {","            symbolNode.classes.push(\"mtight\");","        }","        if (options.getColor()) {","            symbolNode.style.color = options.getColor();","        }","    }","","    return symbolNode;","};","","/**"," * Makes a symbol in Main-Regular or AMS-Regular."," * Used for rel, bin, open, close, inner, and punct."," */","var mathsym = function(value, mode, options, classes) {","    // Decide what font to render the symbol in by its entry in the symbols","    // table.","    // Have a special case for when the value = \\ because the \\ is used as a","    // textord in unsupported command errors but cannot be parsed as a regular","    // text ordinal and is therefore not present as a symbol in the symbols","    // table for text","    if (value === \"\\\\\" || symbols[mode][value].font === \"main\") {","        return makeSymbol(value, \"Main-Regular\", mode, options, classes);","    } else {","        return makeSymbol(","            value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));","    }","};","","/**"," * Makes a symbol in the default font for mathords and textords."," */","var mathDefault = function(value, mode, options, classes, type) {","    if (type === \"mathord\") {","        return mathit(value, mode, options, classes);","    } else if (type === \"textord\") {","        return makeSymbol(","            value, \"Main-Regular\", mode, options, classes.concat([\"mathrm\"]));","    } else {","        throw new Error(\"unexpected type: \" + type + \" in mathDefault\");","    }","};","","/**"," * Makes a symbol in the italic math font."," */","var mathit = function(value, mode, options, classes) {","    if (/[0-9]/.test(value.charAt(0)) ||","            // glyphs for \\imath and \\jmath do not exist in Math-Italic so we","            // need to use Main-Italic instead","            utils.contains(mainitLetters, value) ||","            utils.contains(greekCapitals, value)) {","        return makeSymbol(","            value, \"Main-Italic\", mode, options, classes.concat([\"mainit\"]));","    } else {","        return makeSymbol(","            value, \"Math-Italic\", mode, options, classes.concat([\"mathit\"]));","    }","};","","/**"," * Makes either a mathord or textord in the correct font and color."," */","var makeOrd = function(group, options, type) {","    var mode = group.mode;","    var value = group.value;","    if (symbols[mode][value] && symbols[mode][value].replace) {","        value = symbols[mode][value].replace;","    }","","    var classes = [\"mord\"];","","    var font = options.font;","    if (font) {","        if (font === \"mathit\" || utils.contains(mainitLetters, value)) {","            return mathit(value, mode, options, classes);","        } else {","            var fontName = fontMap[font].fontName;","            if (fontMetrics.getCharacterMetrics(value, fontName)) {","                return makeSymbol(","                    value, fontName, mode, options, classes.concat([font]));","            } else {","                return mathDefault(value, mode, options, classes, type);","            }","        }","    } else {","        return mathDefault(value, mode, options, classes, type);","    }","};","","/**"," * Calculate the height, depth, and maxFontSize of an element based on its"," * children."," */","var sizeElementFromChildren = function(elem) {","    var height = 0;","    var depth = 0;","    var maxFontSize = 0;","","    if (elem.children) {","        for (var i = 0; i < elem.children.length; i++) {","            if (elem.children[i].height > height) {","                height = elem.children[i].height;","            }","            if (elem.children[i].depth > depth) {","                depth = elem.children[i].depth;","            }","            if (elem.children[i].maxFontSize > maxFontSize) {","                maxFontSize = elem.children[i].maxFontSize;","            }","        }","    }","","    elem.height = height;","    elem.depth = depth;","    elem.maxFontSize = maxFontSize;","};","","/**"," * Makes a span with the given list of classes, list of children, and options."," *"," * TODO: Ensure that `options` is always provided (currently some call sites"," * don't pass it)."," * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which"," * should if present come first in `classes`."," */","var makeSpan = function(classes, children, options) {","    var span = new domTree.span(classes, children, options);","","    sizeElementFromChildren(span);","","    return span;","};","","/**"," * Prepends the given children to the given span, updating height, depth, and"," * maxFontSize."," */","var prependChildren = function(span, children) {","    span.children = children.concat(span.children);","","    sizeElementFromChildren(span);","};","","/**"," * Makes a document fragment with the given list of children."," */","var makeFragment = function(children) {","    var fragment = new domTree.documentFragment(children);","","    sizeElementFromChildren(fragment);","","    return fragment;","};","","/**"," * Makes an element placed in each of the vlist elements to ensure that each"," * element has the same max font size. To do this, we create a zero-width space"," * with the correct font size."," */","var makeFontSizer = function(options, fontSize) {","    var fontSizeInner = makeSpan([], [new domTree.symbolNode(\"\\u200b\")]);","    fontSizeInner.style.fontSize =","        (fontSize / options.style.sizeMultiplier) + \"em\";","","    var fontSizer = makeSpan(","        [\"fontsize-ensurer\", \"reset-\" + options.size, \"size5\"],","        [fontSizeInner]);","","    return fontSizer;","};","","/**"," * Makes a vertical list by stacking elements and kerns on top of each other."," * Allows for many different ways of specifying the positioning method."," *"," * Arguments:"," *  - children: A list of child or kern nodes to be stacked on top of each other"," *              (i.e. the first element will be at the bottom, and the last at"," *              the top). Element nodes are specified as"," *                {type: \"elem\", elem: node}"," *              while kern nodes are specified as"," *                {type: \"kern\", size: size}"," *  - positionType: The method by which the vlist should be positioned. Valid"," *                  values are:"," *                   - \"individualShift\": The children list only contains elem"," *                                        nodes, and each node contains an extra"," *                                        \"shift\" value of how much it should be"," *                                        shifted (note that shifting is always"," *                                        moving downwards). positionData is"," *                                        ignored."," *                   - \"top\": The positionData specifies the topmost point of"," *                            the vlist (note this is expected to be a height,"," *                            so positive values move up)"," *                   - \"bottom\": The positionData specifies the bottommost point"," *                               of the vlist (note this is expected to be a"," *                               depth, so positive values move down"," *                   - \"shift\": The vlist will be positioned such that its"," *                              baseline is positionData away from the baseline"," *                              of the first child. Positive values move"," *                              downwards."," *                   - \"firstBaseline\": The vlist will be positioned such that"," *                                      its baseline is aligned with the"," *                                      baseline of the first child."," *                                      positionData is ignored. (this is"," *                                      equivalent to \"shift\" with"," *                                      positionData=0)"," *  - positionData: Data used in different ways depending on positionType"," *  - options: An Options object"," *"," */","var makeVList = function(children, positionType, positionData, options) {","    var depth;","    var currPos;","    var i;","    if (positionType === \"individualShift\") {","        var oldChildren = children;","        children = [oldChildren[0]];","","        // Add in kerns to the list of children to get each element to be","        // shifted to the correct specified shift","        depth = -oldChildren[0].shift - oldChildren[0].elem.depth;","        currPos = depth;","        for (i = 1; i < oldChildren.length; i++) {","            var diff = -oldChildren[i].shift - currPos -","                oldChildren[i].elem.depth;","            var size = diff -","                (oldChildren[i - 1].elem.height +","                 oldChildren[i - 1].elem.depth);","","            currPos = currPos + diff;","","            children.push({type: \"kern\", size: size});","            children.push(oldChildren[i]);","        }","    } else if (positionType === \"top\") {","        // We always start at the bottom, so calculate the bottom by adding up","        // all the sizes","        var bottom = positionData;","        for (i = 0; i < children.length; i++) {","            if (children[i].type === \"kern\") {","                bottom -= children[i].size;","            } else {","                bottom -= children[i].elem.height + children[i].elem.depth;","            }","        }","        depth = bottom;","    } else if (positionType === \"bottom\") {","        depth = -positionData;","    } else if (positionType === \"shift\") {","        depth = -children[0].elem.depth - positionData;","    } else if (positionType === \"firstBaseline\") {","        depth = -children[0].elem.depth;","    } else {","        depth = 0;","    }","","    // Make the fontSizer","    var maxFontSize = 0;","    for (i = 0; i < children.length; i++) {","        if (children[i].type === \"elem\") {","            maxFontSize = Math.max(maxFontSize, children[i].elem.maxFontSize);","        }","    }","    var fontSizer = makeFontSizer(options, maxFontSize);","","    // Create a new list of actual children at the correct offsets","    var realChildren = [];","    currPos = depth;","    for (i = 0; i < children.length; i++) {","        if (children[i].type === \"kern\") {","            currPos += children[i].size;","        } else {","            var child = children[i].elem;","","            var shift = -child.depth - currPos;","            currPos += child.height + child.depth;","","            var childWrap = makeSpan([], [fontSizer, child]);","            childWrap.height -= shift;","            childWrap.depth += shift;","            childWrap.style.top = shift + \"em\";","","            realChildren.push(childWrap);","        }","    }","","    // Add in an element at the end with no offset to fix the calculation of","    // baselines in some browsers (namely IE, sometimes safari)","    var baselineFix = makeSpan(","        [\"baseline-fix\"], [fontSizer, new domTree.symbolNode(\"\\u200b\")]);","    realChildren.push(baselineFix);","","    var vlist = makeSpan([\"vlist\"], realChildren);","    // Fix the final height and depth, in case there were kerns at the ends","    // since the makeSpan calculation won't take that in to account.","    vlist.height = Math.max(currPos, vlist.height);","    vlist.depth = Math.max(-depth, vlist.depth);","    return vlist;","};","","// A table of size -> font size for the different sizing functions","var sizingMultiplier = {","    size1: 0.5,","    size2: 0.7,","    size3: 0.8,","    size4: 0.9,","    size5: 1.0,","    size6: 1.2,","    size7: 1.44,","    size8: 1.73,","    size9: 2.07,","    size10: 2.49","};","","// A map of spacing functions to their attributes, like size and corresponding","// CSS class","var spacingFunctions = {","    \"\\\\qquad\": {","        size: \"2em\",","        className: \"qquad\"","    },","    \"\\\\quad\": {","        size: \"1em\",","        className: \"quad\"","    },","    \"\\\\enspace\": {","        size: \"0.5em\",","        className: \"enspace\"","    },","    \"\\\\;\": {","        size: \"0.277778em\",","        className: \"thickspace\"","    },","    \"\\\\:\": {","        size: \"0.22222em\",","        className: \"mediumspace\"","    },","    \"\\\\,\": {","        size: \"0.16667em\",","        className: \"thinspace\"","    },","    \"\\\\!\": {","        size: \"-0.16667em\",","        className: \"negativethinspace\"","    }","};","","/**"," * Maps TeX font commands to objects containing:"," * - variant: string used for \"mathvariant\" attribute in buildMathML.js"," * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics"," */","// A map between tex font commands an MathML mathvariant attribute values","var fontMap = {","    // styles","    \"mathbf\": {","        variant: \"bold\",","        fontName: \"Main-Bold\"","    },","    \"mathrm\": {","        variant: \"normal\",","        fontName: \"Main-Regular\"","    },","    \"textit\": {","        variant: \"italic\",","        fontName: \"Main-Italic\"","    },","","    // \"mathit\" is missing because it requires the use of two fonts: Main-Italic","    // and Math-Italic.  This is handled by a special case in makeOrd which ends","    // up calling mathit.","","    // families","    \"mathbb\": {","        variant: \"double-struck\",","        fontName: \"AMS-Regular\"","    },","    \"mathcal\": {","        variant: \"script\",","        fontName: \"Caligraphic-Regular\"","    },","    \"mathfrak\": {","        variant: \"fraktur\",","        fontName: \"Fraktur-Regular\"","    },","    \"mathscr\": {","        variant: \"script\",","        fontName: \"Script-Regular\"","    },","    \"mathsf\": {","        variant: \"sans-serif\",","        fontName: \"SansSerif-Regular\"","    },","    \"mathtt\": {","        variant: \"monospace\",","        fontName: \"Typewriter-Regular\"","    }","};","","module.exports = {","    fontMap: fontMap,","    makeSymbol: makeSymbol,","    mathsym: mathsym,","    makeSpan: makeSpan,","    makeFragment: makeFragment,","    makeVList: makeVList,","    makeOrd: makeOrd,","    prependChildren: prependChildren,","    sizingMultiplier: sizingMultiplier,","    spacingFunctions: spacingFunctions","};",""],"l":{"7":1,"8":1,"9":1,"10":1,"12":1,"27":1,"42":1,"44":0,"45":0,"48":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"61":0,"64":0,"67":0,"68":0,"69":0,"71":0,"72":0,"76":0,"83":1,"90":0,"91":0,"93":0,"101":1,"102":0,"103":0,"104":0,"105":0,"108":0,"115":1,"116":0,"121":0,"124":0,"132":1,"133":0,"134":0,"135":0,"136":0,"139":0,"141":0,"142":0,"143":0,"144":0,"146":0,"147":0,"148":0,"151":0,"155":0,"163":1,"164":0,"165":0,"166":0,"168":0,"169":0,"170":0,"171":0,"173":0,"174":0,"176":0,"177":0,"182":0,"183":0,"184":0,"195":1,"196":0,"198":0,"200":0,"207":1,"208":0,"210":0,"216":1,"217":0,"219":0,"221":0,"229":1,"230":0,"231":0,"234":0,"238":0,"280":1,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"290":0,"291":0,"292":0,"293":0,"295":0,"299":0,"301":0,"302":0,"304":0,"307":0,"308":0,"309":0,"310":0,"312":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"323":0,"327":0,"328":0,"329":0,"330":0,"333":0,"336":0,"337":0,"338":0,"339":0,"340":0,"342":0,"344":0,"345":0,"347":0,"348":0,"349":0,"350":0,"352":0,"358":0,"360":0,"362":0,"365":0,"366":0,"367":0,"371":1,"386":1,"423":1,"469":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/domTree.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/domTree.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":0,"75":1,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0,0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":18},"end":{"line":17,"column":36}}},"2":{"name":"span","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":42}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":30},"end":{"line":56,"column":57}}},"4":{"name":"(anonymous_4)","line":60,"loc":{"start":{"line":60,"column":28},"end":{"line":60,"column":46}}},"5":{"name":"(anonymous_5)","line":67,"loc":{"start":{"line":67,"column":24},"end":{"line":67,"column":35}}},"6":{"name":"(anonymous_6)","line":98,"loc":{"start":{"line":98,"column":26},"end":{"line":98,"column":37}}},"7":{"name":"documentFragment","line":148,"loc":{"start":{"line":148,"column":0},"end":{"line":148,"column":36}}},"8":{"name":"(anonymous_8)","line":158,"loc":{"start":{"line":158,"column":36},"end":{"line":158,"column":47}}},"9":{"name":"(anonymous_9)","line":173,"loc":{"start":{"line":173,"column":38},"end":{"line":173,"column":49}}},"10":{"name":"symbolNode","line":197,"loc":{"start":{"line":197,"column":0},"end":{"line":197,"column":72}}},"11":{"name":"(anonymous_11)","line":227,"loc":{"start":{"line":227,"column":34},"end":{"line":227,"column":52}}},"12":{"name":"(anonymous_12)","line":259,"loc":{"start":{"line":259,"column":30},"end":{"line":259,"column":41}}},"13":{"name":"(anonymous_13)","line":291,"loc":{"start":{"line":291,"column":32},"end":{"line":291,"column":43}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":49}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"3":{"start":{"line":17,"column":0},"end":{"line":26,"column":2}},"4":{"start":{"line":18,"column":4},"end":{"line":18,"column":30}},"5":{"start":{"line":19,"column":4},"end":{"line":23,"column":5}},"6":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"7":{"start":{"line":21,"column":12},"end":{"line":21,"column":33}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":29}},"9":{"start":{"line":33,"column":0},"end":{"line":49,"column":1}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":33}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":35}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":20}},"13":{"start":{"line":37,"column":4},"end":{"line":37,"column":19}},"14":{"start":{"line":38,"column":4},"end":{"line":38,"column":25}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":20}},"16":{"start":{"line":40,"column":4},"end":{"line":40,"column":25}},"17":{"start":{"line":41,"column":4},"end":{"line":48,"column":5}},"18":{"start":{"line":42,"column":8},"end":{"line":44,"column":9}},"19":{"start":{"line":43,"column":12},"end":{"line":43,"column":40}},"20":{"start":{"line":45,"column":8},"end":{"line":47,"column":9}},"21":{"start":{"line":46,"column":12},"end":{"line":46,"column":50}},"22":{"start":{"line":56,"column":0},"end":{"line":58,"column":2}},"23":{"start":{"line":57,"column":4},"end":{"line":57,"column":39}},"24":{"start":{"line":60,"column":0},"end":{"line":62,"column":2}},"25":{"start":{"line":61,"column":4},"end":{"line":61,"column":17}},"26":{"start":{"line":67,"column":0},"end":{"line":93,"column":2}},"27":{"start":{"line":68,"column":4},"end":{"line":68,"column":46}},"28":{"start":{"line":71,"column":4},"end":{"line":71,"column":47}},"29":{"start":{"line":74,"column":4},"end":{"line":78,"column":5}},"30":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"31":{"start":{"line":76,"column":12},"end":{"line":76,"column":50}},"32":{"start":{"line":81,"column":4},"end":{"line":85,"column":5}},"33":{"start":{"line":82,"column":8},"end":{"line":84,"column":9}},"34":{"start":{"line":83,"column":12},"end":{"line":83,"column":59}},"35":{"start":{"line":88,"column":4},"end":{"line":90,"column":5}},"36":{"start":{"line":89,"column":8},"end":{"line":89,"column":52}},"37":{"start":{"line":92,"column":4},"end":{"line":92,"column":16}},"38":{"start":{"line":98,"column":0},"end":{"line":140,"column":2}},"39":{"start":{"line":99,"column":4},"end":{"line":99,"column":25}},"40":{"start":{"line":102,"column":4},"end":{"line":106,"column":5}},"41":{"start":{"line":103,"column":8},"end":{"line":103,"column":30}},"42":{"start":{"line":104,"column":8},"end":{"line":104,"column":58}},"43":{"start":{"line":105,"column":8},"end":{"line":105,"column":23}},"44":{"start":{"line":108,"column":4},"end":{"line":108,"column":20}},"45":{"start":{"line":111,"column":4},"end":{"line":115,"column":5}},"46":{"start":{"line":112,"column":8},"end":{"line":114,"column":9}},"47":{"start":{"line":113,"column":12},"end":{"line":113,"column":77}},"48":{"start":{"line":117,"column":4},"end":{"line":119,"column":5}},"49":{"start":{"line":118,"column":8},"end":{"line":118,"column":60}},"50":{"start":{"line":122,"column":4},"end":{"line":128,"column":5}},"51":{"start":{"line":123,"column":8},"end":{"line":127,"column":9}},"52":{"start":{"line":124,"column":12},"end":{"line":124,"column":41}},"53":{"start":{"line":125,"column":12},"end":{"line":125,"column":58}},"54":{"start":{"line":126,"column":12},"end":{"line":126,"column":27}},"55":{"start":{"line":130,"column":4},"end":{"line":130,"column":18}},"56":{"start":{"line":133,"column":4},"end":{"line":135,"column":5}},"57":{"start":{"line":134,"column":8},"end":{"line":134,"column":46}},"58":{"start":{"line":137,"column":4},"end":{"line":137,"column":24}},"59":{"start":{"line":139,"column":4},"end":{"line":139,"column":18}},"60":{"start":{"line":148,"column":0},"end":{"line":153,"column":1}},"61":{"start":{"line":149,"column":4},"end":{"line":149,"column":35}},"62":{"start":{"line":150,"column":4},"end":{"line":150,"column":20}},"63":{"start":{"line":151,"column":4},"end":{"line":151,"column":19}},"64":{"start":{"line":152,"column":4},"end":{"line":152,"column":25}},"65":{"start":{"line":158,"column":0},"end":{"line":168,"column":2}},"66":{"start":{"line":160,"column":4},"end":{"line":160,"column":49}},"67":{"start":{"line":163,"column":4},"end":{"line":165,"column":5}},"68":{"start":{"line":164,"column":8},"end":{"line":164,"column":52}},"69":{"start":{"line":167,"column":4},"end":{"line":167,"column":16}},"70":{"start":{"line":173,"column":0},"end":{"line":182,"column":2}},"71":{"start":{"line":174,"column":4},"end":{"line":174,"column":20}},"72":{"start":{"line":177,"column":4},"end":{"line":179,"column":5}},"73":{"start":{"line":178,"column":8},"end":{"line":178,"column":46}},"74":{"start":{"line":181,"column":4},"end":{"line":181,"column":18}},"75":{"start":{"line":184,"column":0},"end":{"line":190,"column":2}},"76":{"start":{"line":197,"column":0},"end":{"line":225,"column":1}},"77":{"start":{"line":198,"column":4},"end":{"line":198,"column":29}},"78":{"start":{"line":199,"column":4},"end":{"line":199,"column":30}},"79":{"start":{"line":200,"column":4},"end":{"line":200,"column":28}},"80":{"start":{"line":201,"column":4},"end":{"line":201,"column":30}},"81":{"start":{"line":202,"column":4},"end":{"line":202,"column":26}},"82":{"start":{"line":203,"column":4},"end":{"line":203,"column":33}},"83":{"start":{"line":204,"column":4},"end":{"line":204,"column":29}},"84":{"start":{"line":205,"column":4},"end":{"line":205,"column":25}},"85":{"start":{"line":211,"column":4},"end":{"line":220,"column":5}},"86":{"start":{"line":215,"column":8},"end":{"line":219,"column":9}},"87":{"start":{"line":216,"column":12},"end":{"line":216,"column":49}},"88":{"start":{"line":218,"column":12},"end":{"line":218,"column":46}},"89":{"start":{"line":222,"column":4},"end":{"line":224,"column":5}},"90":{"start":{"line":223,"column":8},"end":{"line":223,"column":47}},"91":{"start":{"line":227,"column":0},"end":{"line":253,"column":2}},"92":{"start":{"line":228,"column":4},"end":{"line":235,"column":5}},"93":{"start":{"line":234,"column":8},"end":{"line":234,"column":21}},"94":{"start":{"line":236,"column":4},"end":{"line":241,"column":5}},"95":{"start":{"line":237,"column":8},"end":{"line":240,"column":9}},"96":{"start":{"line":239,"column":12},"end":{"line":239,"column":25}},"97":{"start":{"line":242,"column":4},"end":{"line":247,"column":5}},"98":{"start":{"line":243,"column":8},"end":{"line":246,"column":9}},"99":{"start":{"line":245,"column":12},"end":{"line":245,"column":25}},"100":{"start":{"line":248,"column":4},"end":{"line":248,"column":32}},"101":{"start":{"line":249,"column":4},"end":{"line":249,"column":56}},"102":{"start":{"line":250,"column":4},"end":{"line":250,"column":53}},"103":{"start":{"line":251,"column":4},"end":{"line":251,"column":33}},"104":{"start":{"line":252,"column":4},"end":{"line":252,"column":16}},"105":{"start":{"line":259,"column":0},"end":{"line":286,"column":2}},"106":{"start":{"line":260,"column":4},"end":{"line":260,"column":51}},"107":{"start":{"line":261,"column":4},"end":{"line":261,"column":20}},"108":{"start":{"line":263,"column":4},"end":{"line":266,"column":5}},"109":{"start":{"line":264,"column":8},"end":{"line":264,"column":46}},"110":{"start":{"line":265,"column":8},"end":{"line":265,"column":52}},"111":{"start":{"line":268,"column":4},"end":{"line":271,"column":5}},"112":{"start":{"line":269,"column":8},"end":{"line":269,"column":54}},"113":{"start":{"line":270,"column":8},"end":{"line":270,"column":51}},"114":{"start":{"line":273,"column":4},"end":{"line":278,"column":5}},"115":{"start":{"line":274,"column":8},"end":{"line":277,"column":9}},"116":{"start":{"line":275,"column":12},"end":{"line":275,"column":58}},"117":{"start":{"line":276,"column":12},"end":{"line":276,"column":50}},"118":{"start":{"line":280,"column":4},"end":{"line":285,"column":5}},"119":{"start":{"line":281,"column":8},"end":{"line":281,"column":31}},"120":{"start":{"line":282,"column":8},"end":{"line":282,"column":20}},"121":{"start":{"line":284,"column":8},"end":{"line":284,"column":20}},"122":{"start":{"line":291,"column":0},"end":{"line":330,"column":2}},"123":{"start":{"line":294,"column":4},"end":{"line":294,"column":26}},"124":{"start":{"line":296,"column":4},"end":{"line":296,"column":25}},"125":{"start":{"line":298,"column":4},"end":{"line":303,"column":5}},"126":{"start":{"line":299,"column":8},"end":{"line":299,"column":25}},"127":{"start":{"line":300,"column":8},"end":{"line":300,"column":30}},"128":{"start":{"line":301,"column":8},"end":{"line":301,"column":58}},"129":{"start":{"line":302,"column":8},"end":{"line":302,"column":23}},"130":{"start":{"line":305,"column":4},"end":{"line":305,"column":20}},"131":{"start":{"line":307,"column":4},"end":{"line":309,"column":5}},"132":{"start":{"line":308,"column":8},"end":{"line":308,"column":56}},"133":{"start":{"line":310,"column":4},"end":{"line":314,"column":5}},"134":{"start":{"line":311,"column":8},"end":{"line":313,"column":9}},"135":{"start":{"line":312,"column":12},"end":{"line":312,"column":77}},"136":{"start":{"line":316,"column":4},"end":{"line":319,"column":5}},"137":{"start":{"line":317,"column":8},"end":{"line":317,"column":25}},"138":{"start":{"line":318,"column":8},"end":{"line":318,"column":60}},"139":{"start":{"line":321,"column":4},"end":{"line":321,"column":43}},"140":{"start":{"line":322,"column":4},"end":{"line":329,"column":5}},"141":{"start":{"line":323,"column":8},"end":{"line":323,"column":22}},"142":{"start":{"line":324,"column":8},"end":{"line":324,"column":26}},"143":{"start":{"line":325,"column":8},"end":{"line":325,"column":28}},"144":{"start":{"line":326,"column":8},"end":{"line":326,"column":22}},"145":{"start":{"line":328,"column":8},"end":{"line":328,"column":23}},"146":{"start":{"line":332,"column":0},"end":{"line":336,"column":2}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":8}},{"start":{"line":20,"column":8},"end":{"line":20,"column":8}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":19},"end":{"line":34,"column":26}},{"start":{"line":34,"column":30},"end":{"line":34,"column":32}}]},"3":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":20},"end":{"line":35,"column":28}},{"start":{"line":35,"column":32},"end":{"line":35,"column":34}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":4},"end":{"line":41,"column":4}},{"start":{"line":41,"column":4},"end":{"line":41,"column":4}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":42,"column":8}},{"start":{"line":42,"column":8},"end":{"line":42,"column":8}}]},"6":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]},"7":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":75,"column":8}},{"start":{"line":75,"column":8},"end":{"line":75,"column":8}}]},"8":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":8},"end":{"line":82,"column":8}},{"start":{"line":82,"column":8},"end":{"line":82,"column":8}}]},"9":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"10":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":8},"end":{"line":112,"column":8}},{"start":{"line":112,"column":8},"end":{"line":112,"column":8}}]},"11":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":4},"end":{"line":117,"column":4}},{"start":{"line":117,"column":4},"end":{"line":117,"column":4}}]},"12":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":8},"end":{"line":123,"column":8}},{"start":{"line":123,"column":8},"end":{"line":123,"column":8}}]},"13":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":20},"end":{"line":149,"column":28}},{"start":{"line":149,"column":32},"end":{"line":149,"column":34}}]},"14":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":17},"end":{"line":198,"column":22}},{"start":{"line":198,"column":26},"end":{"line":198,"column":28}}]},"15":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":18},"end":{"line":199,"column":24}},{"start":{"line":199,"column":28},"end":{"line":199,"column":29}}]},"16":{"line":200,"type":"binary-expr","locations":[{"start":{"line":200,"column":17},"end":{"line":200,"column":22}},{"start":{"line":200,"column":26},"end":{"line":200,"column":27}}]},"17":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":18},"end":{"line":201,"column":24}},{"start":{"line":201,"column":28},"end":{"line":201,"column":29}}]},"18":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":16},"end":{"line":202,"column":20}},{"start":{"line":202,"column":24},"end":{"line":202,"column":25}}]},"19":{"line":203,"type":"binary-expr","locations":[{"start":{"line":203,"column":19},"end":{"line":203,"column":26}},{"start":{"line":203,"column":30},"end":{"line":203,"column":32}}]},"20":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":17},"end":{"line":204,"column":22}},{"start":{"line":204,"column":26},"end":{"line":204,"column":28}}]},"21":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]},"22":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":8},"end":{"line":215,"column":8}},{"start":{"line":215,"column":8},"end":{"line":215,"column":8}}]},"23":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"24":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":4},"end":{"line":228,"column":4}},{"start":{"line":228,"column":4},"end":{"line":228,"column":4}}]},"25":{"line":228,"type":"binary-expr","locations":[{"start":{"line":228,"column":8},"end":{"line":228,"column":16}},{"start":{"line":229,"column":11},"end":{"line":229,"column":43}},{"start":{"line":230,"column":11},"end":{"line":230,"column":26}},{"start":{"line":231,"column":11},"end":{"line":231,"column":69}},{"start":{"line":232,"column":11},"end":{"line":232,"column":37}},{"start":{"line":233,"column":11},"end":{"line":233,"column":51}}]},"26":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":8},"end":{"line":237,"column":8}},{"start":{"line":237,"column":8},"end":{"line":237,"column":8}}]},"27":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":12},"end":{"line":237,"column":44}},{"start":{"line":238,"column":15},"end":{"line":238,"column":57}}]},"28":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":8},"end":{"line":243,"column":8}},{"start":{"line":243,"column":8},"end":{"line":243,"column":8}}]},"29":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":12},"end":{"line":243,"column":47}},{"start":{"line":244,"column":15},"end":{"line":244,"column":57}}]},"30":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":263,"column":4}},{"start":{"line":263,"column":4},"end":{"line":263,"column":4}}]},"31":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":4},"end":{"line":268,"column":4}},{"start":{"line":268,"column":4},"end":{"line":268,"column":4}}]},"32":{"line":269,"type":"binary-expr","locations":[{"start":{"line":269,"column":15},"end":{"line":269,"column":19}},{"start":{"line":269,"column":23},"end":{"line":269,"column":53}}]},"33":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":8},"end":{"line":274,"column":8}},{"start":{"line":274,"column":8},"end":{"line":274,"column":8}}]},"34":{"line":275,"type":"binary-expr","locations":[{"start":{"line":275,"column":19},"end":{"line":275,"column":23}},{"start":{"line":275,"column":27},"end":{"line":275,"column":57}}]},"35":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":4},"end":{"line":280,"column":4}},{"start":{"line":280,"column":4},"end":{"line":280,"column":4}}]},"36":{"line":298,"type":"if","locations":[{"start":{"line":298,"column":4},"end":{"line":298,"column":4}},{"start":{"line":298,"column":4},"end":{"line":298,"column":4}}]},"37":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":4},"end":{"line":307,"column":4}},{"start":{"line":307,"column":4},"end":{"line":307,"column":4}}]},"38":{"line":311,"type":"if","locations":[{"start":{"line":311,"column":8},"end":{"line":311,"column":8}},{"start":{"line":311,"column":8},"end":{"line":311,"column":8}}]},"39":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":4},"end":{"line":316,"column":4}},{"start":{"line":316,"column":4},"end":{"line":316,"column":4}}]},"40":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":4},"end":{"line":322,"column":4}},{"start":{"line":322,"column":4},"end":{"line":322,"column":4}}]}},"code":["/**"," * These objects store the data about the DOM nodes we create, as well as some"," * extra data. They can then be transformed into real DOM nodes with the"," * `toNode` function or HTML markup using `toMarkup`. They are useful for both"," * storing extra properties on the nodes, as well as providing a way to easily"," * work with the DOM."," *"," * Similar functions for working with MathML nodes exist in mathMLTree.js."," */","var unicodeRegexes = require(\"./unicodeRegexes\");","var utils = require(\"./utils\");","","/**"," * Create an HTML className based on a list of classes. In addition to joining"," * with spaces, we also remove null or empty classes."," */","var createClass = function(classes) {","    classes = classes.slice();","    for (var i = classes.length - 1; i >= 0; i--) {","        if (!classes[i]) {","            classes.splice(i, 1);","        }","    }","","    return classes.join(\" \");","};","","/**"," * This node represents a span node, with a className, a list of children, and"," * an inline style. It also contains information about its height, depth, and"," * maxFontSize."," */","function span(classes, children, options) {","    this.classes = classes || [];","    this.children = children || [];","    this.height = 0;","    this.depth = 0;","    this.maxFontSize = 0;","    this.style = {};","    this.attributes = {};","    if (options) {","        if (options.style.isTight()) {","            this.classes.push(\"mtight\");","        }","        if (options.getColor()) {","            this.style.color = options.getColor();","        }","    }","}","","/**"," * Sets an arbitrary attribute on the span. Warning: use this wisely. Not all"," * browsers support attributes the same, and having too many custom attributes"," * is probably bad."," */","span.prototype.setAttribute = function(attribute, value) {","    this.attributes[attribute] = value;","};","","span.prototype.tryCombine = function(sibling) {","    return false;","};","","/**"," * Convert the span into an HTML node"," */","span.prototype.toNode = function() {","    var span = document.createElement(\"span\");","","    // Apply the class","    span.className = createClass(this.classes);","","    // Apply inline styles","    for (var style in this.style) {","        if (Object.prototype.hasOwnProperty.call(this.style, style)) {","            span.style[style] = this.style[style];","        }","    }","","    // Apply attributes","    for (var attr in this.attributes) {","        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {","            span.setAttribute(attr, this.attributes[attr]);","        }","    }","","    // Append the children, also as HTML nodes","    for (var i = 0; i < this.children.length; i++) {","        span.appendChild(this.children[i].toNode());","    }","","    return span;","};","","/**"," * Convert the span into an HTML markup string"," */","span.prototype.toMarkup = function() {","    var markup = \"<span\";","","    // Add the class","    if (this.classes.length) {","        markup += \" class=\\\"\";","        markup += utils.escape(createClass(this.classes));","        markup += \"\\\"\";","    }","","    var styles = \"\";","","    // Add the styles, after hyphenation","    for (var style in this.style) {","        if (this.style.hasOwnProperty(style)) {","            styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";","        }","    }","","    if (styles) {","        markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";","    }","","    // Add the attributes","    for (var attr in this.attributes) {","        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {","            markup += \" \" + attr + \"=\\\"\";","            markup += utils.escape(this.attributes[attr]);","            markup += \"\\\"\";","        }","    }","","    markup += \">\";","","    // Add the markup of the children, also as markup","    for (var i = 0; i < this.children.length; i++) {","        markup += this.children[i].toMarkup();","    }","","    markup += \"</span>\";","","    return markup;","};","","/**"," * This node represents a document fragment, which contains elements, but when"," * placed into the DOM doesn't have any representation itself. Thus, it only"," * contains children and doesn't have any HTML properties. It also keeps track"," * of a height, depth, and maxFontSize."," */","function documentFragment(children) {","    this.children = children || [];","    this.height = 0;","    this.depth = 0;","    this.maxFontSize = 0;","}","","/**"," * Convert the fragment into a node"," */","documentFragment.prototype.toNode = function() {","    // Create a fragment","    var frag = document.createDocumentFragment();","","    // Append the children","    for (var i = 0; i < this.children.length; i++) {","        frag.appendChild(this.children[i].toNode());","    }","","    return frag;","};","","/**"," * Convert the fragment into HTML markup"," */","documentFragment.prototype.toMarkup = function() {","    var markup = \"\";","","    // Simply concatenate the markup for the children together","    for (var i = 0; i < this.children.length; i++) {","        markup += this.children[i].toMarkup();","    }","","    return markup;","};","","var iCombinations = {","    'î': '\\u0131\\u0302',","    'ï': '\\u0131\\u0308',","    'í': '\\u0131\\u0301',","    // 'ī': '\\u0131\\u0304', // enable when we add Extended Latin","    'ì': '\\u0131\\u0300'","};","","/**"," * A symbol node contains information about a single symbol. It either renders"," * to a single text node, or a span with a single text node in it, depending on"," * whether it has CSS classes, styles, or needs italic correction."," */","function symbolNode(value, height, depth, italic, skew, classes, style) {","    this.value = value || \"\";","    this.height = height || 0;","    this.depth = depth || 0;","    this.italic = italic || 0;","    this.skew = skew || 0;","    this.classes = classes || [];","    this.style = style || {};","    this.maxFontSize = 0;","","    // Mark CJK characters with specific classes so that we can specify which","    // fonts to use.  This allows us to render these characters with a serif","    // font in situations where the browser would either default to a sans serif","    // or render a placeholder character.","    if (unicodeRegexes.cjkRegex.test(value)) {","        // I couldn't find any fonts that contained Hangul as well as all of","        // the other characters we wanted to test there for it gets its own","        // CSS class.","        if (unicodeRegexes.hangulRegex.test(value)) {","            this.classes.push('hangul_fallback');","        } else {","            this.classes.push('cjk_fallback');","        }","    }","","    if (/[îïíì]/.test(this.value)) {    // add ī when we add Extended Latin","        this.value = iCombinations[this.value];","    }","}","","symbolNode.prototype.tryCombine = function(sibling) {","    if (!sibling","        || !(sibling instanceof symbolNode)","        || this.italic > 0","        || createClass(this.classes) !== createClass(sibling.classes)","        || this.skew !== sibling.skew","        || this.maxFontSize !== sibling.maxFontSize) {","        return false;","    }","    for (var style in this.style) {","        if (this.style.hasOwnProperty(style)","            && this.style[style] !== sibling.style[style]) {","            return false;","        }","    }","    for (style in sibling.style) {","        if (sibling.style.hasOwnProperty(style)","            && this.style[style] !== sibling.style[style]) {","            return false;","        }","    }","    this.value += sibling.value;","    this.height = Math.max(this.height, sibling.height);","    this.depth = Math.max(this.depth, sibling.depth);","    this.italic = sibling.italic;","    return true;","};","","/**"," * Creates a text node or span from a symbol node. Note that a span is only"," * created if it is needed."," */","symbolNode.prototype.toNode = function() {","    var node = document.createTextNode(this.value);","    var span = null;","","    if (this.italic > 0) {","        span = document.createElement(\"span\");","        span.style.marginRight = this.italic + \"em\";","    }","","    if (this.classes.length > 0) {","        span = span || document.createElement(\"span\");","        span.className = createClass(this.classes);","    }","","    for (var style in this.style) {","        if (this.style.hasOwnProperty(style)) {","            span = span || document.createElement(\"span\");","            span.style[style] = this.style[style];","        }","    }","","    if (span) {","        span.appendChild(node);","        return span;","    } else {","        return node;","    }","};","","/**"," * Creates markup for a symbol node."," */","symbolNode.prototype.toMarkup = function() {","    // TODO(alpert): More duplication than I'd like from","    // span.prototype.toMarkup and symbolNode.prototype.toNode...","    var needsSpan = false;","","    var markup = \"<span\";","","    if (this.classes.length) {","        needsSpan = true;","        markup += \" class=\\\"\";","        markup += utils.escape(createClass(this.classes));","        markup += \"\\\"\";","    }","","    var styles = \"\";","","    if (this.italic > 0) {","        styles += \"margin-right:\" + this.italic + \"em;\";","    }","    for (var style in this.style) {","        if (this.style.hasOwnProperty(style)) {","            styles += utils.hyphenate(style) + \":\" + this.style[style] + \";\";","        }","    }","","    if (styles) {","        needsSpan = true;","        markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";","    }","","    var escaped = utils.escape(this.value);","    if (needsSpan) {","        markup += \">\";","        markup += escaped;","        markup += \"</span>\";","        return markup;","    } else {","        return escaped;","    }","};","","module.exports = {","    span: span,","    documentFragment: documentFragment,","    symbolNode: symbolNode","};",""],"l":{"10":1,"11":1,"17":1,"18":0,"19":0,"20":0,"21":0,"25":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"45":0,"46":0,"56":1,"57":0,"60":1,"61":0,"67":1,"68":0,"71":0,"74":0,"75":0,"76":0,"81":0,"82":0,"83":0,"88":0,"89":0,"92":0,"98":1,"99":0,"102":0,"103":0,"104":0,"105":0,"108":0,"111":0,"112":0,"113":0,"117":0,"118":0,"122":0,"123":0,"124":0,"125":0,"126":0,"130":0,"133":0,"134":0,"137":0,"139":0,"148":1,"149":0,"150":0,"151":0,"152":0,"158":1,"160":0,"163":0,"164":0,"167":0,"173":1,"174":0,"177":0,"178":0,"181":0,"184":1,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"211":0,"215":0,"216":0,"218":0,"222":0,"223":0,"227":1,"228":0,"234":0,"236":0,"237":0,"239":0,"242":0,"243":0,"245":0,"248":0,"249":0,"250":0,"251":0,"252":0,"259":1,"260":0,"261":0,"263":0,"264":0,"265":0,"268":0,"269":0,"270":0,"273":0,"274":0,"275":0,"276":0,"280":0,"281":0,"282":0,"284":0,"291":1,"294":0,"296":0,"298":0,"299":0,"300":0,"301":0,"302":0,"305":0,"307":0,"308":0,"310":0,"311":0,"312":0,"316":0,"317":0,"318":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"328":0,"332":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/utils.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":1,"16":0,"17":1,"18":1,"19":0,"20":1,"21":1,"22":1,"23":0,"24":1,"25":0,"26":1,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,1],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":14},"end":{"line":11,"column":35}}},"2":{"name":"(anonymous_2)","line":31,"loc":{"start":{"line":31,"column":15},"end":{"line":31,"column":36}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":12},"end":{"line":38,"column":50}}},"4":{"name":"(anonymous_4)","line":45,"loc":{"start":{"line":45,"column":16},"end":{"line":45,"column":30}}},"5":{"name":"escaper","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":24}}},"6":{"name":"escape","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":22}}},"7":{"name":"(anonymous_7)","line":81,"loc":{"start":{"line":81,"column":25},"end":{"line":81,"column":46}}},"8":{"name":"(anonymous_8)","line":85,"loc":{"start":{"line":85,"column":25},"end":{"line":85,"column":46}}},"9":{"name":"clearNode","line":94,"loc":{"start":{"line":94,"column":0},"end":{"line":94,"column":25}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":44}},"2":{"start":{"line":11,"column":0},"end":{"line":26,"column":2}},"3":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":18}},"5":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"6":{"start":{"line":16,"column":8},"end":{"line":16,"column":34}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":14}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":24}},"9":{"start":{"line":20,"column":4},"end":{"line":24,"column":5}},"10":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"11":{"start":{"line":22,"column":12},"end":{"line":22,"column":21}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":14}},"13":{"start":{"line":31,"column":0},"end":{"line":33,"column":2}},"14":{"start":{"line":32,"column":4},"end":{"line":32,"column":38}},"15":{"start":{"line":38,"column":0},"end":{"line":40,"column":2}},"16":{"start":{"line":39,"column":4},"end":{"line":39,"column":64}},"17":{"start":{"line":44,"column":0},"end":{"line":44,"column":27}},"18":{"start":{"line":45,"column":0},"end":{"line":47,"column":2}},"19":{"start":{"line":46,"column":4},"end":{"line":46,"column":55}},"20":{"start":{"line":49,"column":0},"end":{"line":55,"column":2}},"21":{"start":{"line":57,"column":0},"end":{"line":57,"column":30}},"22":{"start":{"line":59,"column":0},"end":{"line":61,"column":1}},"23":{"start":{"line":60,"column":4},"end":{"line":60,"column":32}},"24":{"start":{"line":69,"column":0},"end":{"line":71,"column":1}},"25":{"start":{"line":70,"column":4},"end":{"line":70,"column":54}},"26":{"start":{"line":77,"column":0},"end":{"line":77,"column":19}},"27":{"start":{"line":78,"column":0},"end":{"line":89,"column":1}},"28":{"start":{"line":79,"column":4},"end":{"line":79,"column":50}},"29":{"start":{"line":80,"column":4},"end":{"line":88,"column":5}},"30":{"start":{"line":81,"column":8},"end":{"line":83,"column":10}},"31":{"start":{"line":82,"column":12},"end":{"line":82,"column":36}},"32":{"start":{"line":85,"column":8},"end":{"line":87,"column":10}},"33":{"start":{"line":86,"column":12},"end":{"line":86,"column":34}},"34":{"start":{"line":94,"column":0},"end":{"line":96,"column":1}},"35":{"start":{"line":95,"column":4},"end":{"line":95,"column":29}},"36":{"start":{"line":98,"column":0},"end":{"line":106,"column":2}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"2":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"3":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":21}},{"start":{"line":15,"column":25},"end":{"line":15,"column":55}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":8}},{"start":{"line":21,"column":8},"end":{"line":21,"column":8}}]},"5":{"line":39,"type":"cond-expr","locations":[{"start":{"line":39,"column":35},"end":{"line":39,"column":53}},{"start":{"line":39,"column":56},"end":{"line":39,"column":63}}]},"6":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":0},"end":{"line":78,"column":0}},{"start":{"line":78,"column":0},"end":{"line":78,"column":0}}]},"7":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]}},"code":["/**"," * This file contains a list of utility functions which are useful in other"," * files."," */","","/**"," * Provide an `indexOf` function which works in IE8, but defers to native if"," * possible."," */","var nativeIndexOf = Array.prototype.indexOf;","var indexOf = function(list, elem) {","    if (list == null) {","        return -1;","    }","    if (nativeIndexOf && list.indexOf === nativeIndexOf) {","        return list.indexOf(elem);","    }","    var i = 0;","    var l = list.length;","    for (; i < l; i++) {","        if (list[i] === elem) {","            return i;","        }","    }","    return -1;","};","","/**"," * Return whether an element is contained in a list"," */","var contains = function(list, elem) {","    return indexOf(list, elem) !== -1;","};","","/**"," * Provide a default value if a setting is undefined"," */","var deflt = function(setting, defaultIfUndefined) {","    return setting === undefined ? defaultIfUndefined : setting;","};","","// hyphenate and escape adapted from Facebook's React under Apache 2 license","","var uppercase = /([A-Z])/g;","var hyphenate = function(str) {","    return str.replace(uppercase, \"-$1\").toLowerCase();","};","","var ESCAPE_LOOKUP = {","    \"&\": \"&amp;\",","    \">\": \"&gt;\",","    \"<\": \"&lt;\",","    \"\\\"\": \"&quot;\",","    \"'\": \"&#x27;\"","};","","var ESCAPE_REGEX = /[&><\"']/g;","","function escaper(match) {","    return ESCAPE_LOOKUP[match];","}","","/**"," * Escapes text to prevent scripting attacks."," *"," * @param {*} text Text value to escape."," * @return {string} An escaped string."," */","function escape(text) {","    return (\"\" + text).replace(ESCAPE_REGEX, escaper);","}","","/**"," * A function to set the text content of a DOM element in all supported"," * browsers. Note that we don't define this if there is no document."," */","var setTextContent;","if (typeof document !== \"undefined\") {","    var testNode = document.createElement(\"span\");","    if (\"textContent\" in testNode) {","        setTextContent = function(node, text) {","            node.textContent = text;","        };","    } else {","        setTextContent = function(node, text) {","            node.innerText = text;","        };","    }","}","","/**"," * A function to clear a node."," */","function clearNode(node) {","    setTextContent(node, \"\");","}","","module.exports = {","    contains: contains,","    deflt: deflt,","    escape: escape,","    hyphenate: hyphenate,","    indexOf: indexOf,","    setTextContent: setTextContent,","    clearNode: clearNode","};",""],"l":{"10":1,"11":1,"12":0,"13":0,"15":0,"16":0,"18":0,"19":0,"20":0,"21":0,"22":0,"25":0,"31":1,"32":0,"38":1,"39":0,"44":1,"45":1,"46":0,"49":1,"57":1,"59":1,"60":0,"69":1,"70":0,"77":1,"78":1,"79":0,"80":0,"81":0,"82":0,"85":0,"86":0,"94":1,"95":0,"98":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/symbols.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/symbols.js","s":{"1":1,"2":1,"3":802,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":1,"58":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":1,"115":1,"116":1,"117":1,"118":1,"119":1,"120":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"157":1,"158":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1,"260":1,"261":1,"262":1,"263":1,"264":1,"265":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"320":1,"321":1,"322":1,"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":1,"331":1,"332":1,"333":1,"334":1,"335":1,"336":1,"337":1,"338":1,"339":1,"340":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":1,"360":1,"361":1,"362":1,"363":1,"364":1,"365":1,"366":1,"367":1,"368":1,"369":1,"370":1,"371":1,"372":1,"373":1,"374":1,"375":1,"376":1,"377":1,"378":1,"379":1,"380":1,"381":1,"382":1,"383":1,"384":1,"385":1,"386":1,"387":1,"388":1,"389":1,"390":1,"391":1,"392":1,"393":1,"394":1,"395":1,"396":1,"397":1,"398":1,"399":1,"400":1,"401":1,"402":1,"403":1,"404":1,"405":1,"406":1,"407":1,"408":1,"409":1,"410":1,"411":1,"412":1,"413":1,"414":1,"415":1,"416":1,"417":1,"418":1,"419":1,"420":1,"421":1,"422":1,"423":1,"424":1,"425":1,"426":1,"427":1,"428":1,"429":1,"430":1,"431":1,"432":1,"433":1,"434":1,"435":1,"436":1,"437":1,"438":1,"439":1,"440":1,"441":1,"442":1,"443":1,"444":1,"445":1,"446":1,"447":1,"448":1,"449":1,"450":1,"451":1,"452":1,"453":1,"454":1,"455":1,"456":1,"457":1,"458":1,"459":1,"460":1,"461":1,"462":1,"463":1,"464":1,"465":1,"466":1,"467":1,"468":1,"469":1,"470":1,"471":1,"472":1,"473":1,"474":1,"475":1,"476":1,"477":1,"478":1,"479":1,"480":1,"481":1,"482":1,"483":1,"484":1,"485":1,"486":1,"487":1,"488":1,"489":1,"490":1,"491":1,"492":1,"493":1,"494":1,"495":1,"496":1,"497":1,"498":1,"499":1,"500":1,"501":1,"502":1,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"510":1,"511":1,"512":1,"513":1,"514":1,"515":1,"516":1,"517":1,"518":1,"519":1,"520":1,"521":1,"522":1,"523":1,"524":1,"525":1,"526":1,"527":1,"528":1,"529":1,"530":1,"531":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1,"543":1,"544":1,"545":1,"546":1,"547":1,"548":14,"549":14,"550":1,"551":1,"552":27,"553":27,"554":1,"555":1,"556":52,"557":52,"558":52,"559":1,"560":23,"561":23,"562":1,"563":31,"564":31,"565":1,"566":8,"567":8,"568":1,"569":64,"570":64,"571":1,"572":1,"573":1,"574":1,"575":1,"576":1},"b":{},"f":{"1":802},"fnMap":{"1":{"name":"defineSymbol","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":24,"column":56}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":22,"column":2}},"2":{"start":{"line":24,"column":0},"end":{"line":30,"column":1}},"3":{"start":{"line":25,"column":4},"end":{"line":29,"column":6}},"4":{"start":{"line":36,"column":0},"end":{"line":36,"column":18}},"5":{"start":{"line":37,"column":0},"end":{"line":37,"column":18}},"6":{"start":{"line":40,"column":0},"end":{"line":40,"column":18}},"7":{"start":{"line":41,"column":0},"end":{"line":41,"column":16}},"8":{"start":{"line":44,"column":0},"end":{"line":44,"column":22}},"9":{"start":{"line":45,"column":0},"end":{"line":45,"column":16}},"10":{"start":{"line":46,"column":0},"end":{"line":46,"column":20}},"11":{"start":{"line":47,"column":0},"end":{"line":47,"column":20}},"12":{"start":{"line":48,"column":0},"end":{"line":48,"column":24}},"13":{"start":{"line":49,"column":0},"end":{"line":49,"column":14}},"14":{"start":{"line":50,"column":0},"end":{"line":50,"column":18}},"15":{"start":{"line":51,"column":0},"end":{"line":51,"column":20}},"16":{"start":{"line":52,"column":0},"end":{"line":52,"column":16}},"17":{"start":{"line":53,"column":0},"end":{"line":53,"column":24}},"18":{"start":{"line":54,"column":0},"end":{"line":54,"column":24}},"19":{"start":{"line":59,"column":0},"end":{"line":59,"column":51}},"20":{"start":{"line":60,"column":0},"end":{"line":60,"column":50}},"21":{"start":{"line":61,"column":0},"end":{"line":61,"column":50}},"22":{"start":{"line":62,"column":0},"end":{"line":62,"column":49}},"23":{"start":{"line":63,"column":0},"end":{"line":63,"column":50}},"24":{"start":{"line":64,"column":0},"end":{"line":64,"column":52}},"25":{"start":{"line":65,"column":0},"end":{"line":65,"column":52}},"26":{"start":{"line":66,"column":0},"end":{"line":66,"column":51}},"27":{"start":{"line":67,"column":0},"end":{"line":67,"column":49}},"28":{"start":{"line":68,"column":0},"end":{"line":68,"column":48}},"29":{"start":{"line":69,"column":0},"end":{"line":69,"column":48}},"30":{"start":{"line":70,"column":0},"end":{"line":70,"column":51}},"31":{"start":{"line":71,"column":0},"end":{"line":71,"column":54}},"32":{"start":{"line":72,"column":0},"end":{"line":72,"column":52}},"33":{"start":{"line":73,"column":0},"end":{"line":73,"column":51}},"34":{"start":{"line":74,"column":0},"end":{"line":74,"column":56}},"35":{"start":{"line":75,"column":0},"end":{"line":75,"column":56}},"36":{"start":{"line":76,"column":0},"end":{"line":76,"column":51}},"37":{"start":{"line":77,"column":0},"end":{"line":77,"column":51}},"38":{"start":{"line":78,"column":0},"end":{"line":78,"column":48}},"39":{"start":{"line":79,"column":0},"end":{"line":79,"column":52}},"40":{"start":{"line":80,"column":0},"end":{"line":80,"column":51}},"41":{"start":{"line":81,"column":0},"end":{"line":81,"column":51}},"42":{"start":{"line":82,"column":0},"end":{"line":82,"column":50}},"43":{"start":{"line":85,"column":0},"end":{"line":85,"column":53}},"44":{"start":{"line":86,"column":0},"end":{"line":86,"column":53}},"45":{"start":{"line":89,"column":0},"end":{"line":89,"column":51}},"46":{"start":{"line":90,"column":0},"end":{"line":90,"column":51}},"47":{"start":{"line":91,"column":0},"end":{"line":91,"column":51}},"48":{"start":{"line":92,"column":0},"end":{"line":92,"column":51}},"49":{"start":{"line":93,"column":0},"end":{"line":93,"column":55}},"50":{"start":{"line":94,"column":0},"end":{"line":94,"column":56}},"51":{"start":{"line":95,"column":0},"end":{"line":95,"column":54}},"52":{"start":{"line":96,"column":0},"end":{"line":96,"column":56}},"53":{"start":{"line":97,"column":0},"end":{"line":97,"column":55}},"54":{"start":{"line":98,"column":0},"end":{"line":98,"column":54}},"55":{"start":{"line":99,"column":0},"end":{"line":99,"column":53}},"56":{"start":{"line":100,"column":0},"end":{"line":100,"column":57}},"57":{"start":{"line":101,"column":0},"end":{"line":101,"column":58}},"58":{"start":{"line":102,"column":0},"end":{"line":102,"column":52}},"59":{"start":{"line":103,"column":0},"end":{"line":103,"column":55}},"60":{"start":{"line":104,"column":0},"end":{"line":104,"column":61}},"61":{"start":{"line":105,"column":0},"end":{"line":105,"column":52}},"62":{"start":{"line":106,"column":0},"end":{"line":106,"column":59}},"63":{"start":{"line":107,"column":0},"end":{"line":107,"column":52}},"64":{"start":{"line":108,"column":0},"end":{"line":108,"column":59}},"65":{"start":{"line":111,"column":0},"end":{"line":111,"column":53}},"66":{"start":{"line":112,"column":0},"end":{"line":112,"column":54}},"67":{"start":{"line":115,"column":0},"end":{"line":115,"column":58}},"68":{"start":{"line":116,"column":0},"end":{"line":116,"column":57}},"69":{"start":{"line":117,"column":0},"end":{"line":117,"column":54}},"70":{"start":{"line":118,"column":0},"end":{"line":118,"column":53}},"71":{"start":{"line":121,"column":0},"end":{"line":121,"column":48}},"72":{"start":{"line":122,"column":0},"end":{"line":122,"column":52}},"73":{"start":{"line":123,"column":0},"end":{"line":123,"column":51}},"74":{"start":{"line":124,"column":0},"end":{"line":124,"column":51}},"75":{"start":{"line":125,"column":0},"end":{"line":125,"column":49}},"76":{"start":{"line":126,"column":0},"end":{"line":126,"column":51}},"77":{"start":{"line":127,"column":0},"end":{"line":127,"column":53}},"78":{"start":{"line":128,"column":0},"end":{"line":128,"column":52}},"79":{"start":{"line":129,"column":0},"end":{"line":129,"column":53}},"80":{"start":{"line":130,"column":0},"end":{"line":130,"column":48}},"81":{"start":{"line":131,"column":0},"end":{"line":131,"column":51}},"82":{"start":{"line":134,"column":0},"end":{"line":134,"column":59}},"83":{"start":{"line":135,"column":0},"end":{"line":135,"column":55}},"84":{"start":{"line":136,"column":0},"end":{"line":136,"column":59}},"85":{"start":{"line":137,"column":0},"end":{"line":137,"column":60}},"86":{"start":{"line":138,"column":0},"end":{"line":138,"column":56}},"87":{"start":{"line":139,"column":0},"end":{"line":139,"column":60}},"88":{"start":{"line":140,"column":0},"end":{"line":140,"column":60}},"89":{"start":{"line":141,"column":0},"end":{"line":141,"column":64}},"90":{"start":{"line":142,"column":0},"end":{"line":142,"column":60}},"91":{"start":{"line":143,"column":0},"end":{"line":143,"column":64}},"92":{"start":{"line":144,"column":0},"end":{"line":144,"column":52}},"93":{"start":{"line":145,"column":0},"end":{"line":145,"column":56}},"94":{"start":{"line":146,"column":0},"end":{"line":146,"column":53}},"95":{"start":{"line":147,"column":0},"end":{"line":147,"column":59}},"96":{"start":{"line":148,"column":0},"end":{"line":148,"column":60}},"97":{"start":{"line":149,"column":0},"end":{"line":149,"column":53}},"98":{"start":{"line":150,"column":0},"end":{"line":150,"column":59}},"99":{"start":{"line":151,"column":0},"end":{"line":151,"column":60}},"100":{"start":{"line":152,"column":0},"end":{"line":152,"column":53}},"101":{"start":{"line":153,"column":0},"end":{"line":153,"column":61}},"102":{"start":{"line":154,"column":0},"end":{"line":154,"column":62}},"103":{"start":{"line":155,"column":0},"end":{"line":155,"column":53}},"104":{"start":{"line":156,"column":0},"end":{"line":156,"column":63}},"105":{"start":{"line":159,"column":0},"end":{"line":159,"column":50}},"106":{"start":{"line":160,"column":0},"end":{"line":160,"column":54}},"107":{"start":{"line":161,"column":0},"end":{"line":161,"column":50}},"108":{"start":{"line":162,"column":0},"end":{"line":162,"column":49}},"109":{"start":{"line":163,"column":0},"end":{"line":163,"column":50}},"110":{"start":{"line":164,"column":0},"end":{"line":164,"column":54}},"111":{"start":{"line":165,"column":0},"end":{"line":165,"column":50}},"112":{"start":{"line":166,"column":0},"end":{"line":166,"column":53}},"113":{"start":{"line":167,"column":0},"end":{"line":167,"column":50}},"114":{"start":{"line":168,"column":0},"end":{"line":168,"column":52}},"115":{"start":{"line":169,"column":0},"end":{"line":169,"column":53}},"116":{"start":{"line":170,"column":0},"end":{"line":170,"column":56}},"117":{"start":{"line":171,"column":0},"end":{"line":171,"column":49}},"118":{"start":{"line":172,"column":0},"end":{"line":172,"column":54}},"119":{"start":{"line":173,"column":0},"end":{"line":173,"column":49}},"120":{"start":{"line":174,"column":0},"end":{"line":174,"column":51}},"121":{"start":{"line":175,"column":0},"end":{"line":175,"column":51}},"122":{"start":{"line":176,"column":0},"end":{"line":176,"column":58}},"123":{"start":{"line":177,"column":0},"end":{"line":177,"column":60}},"124":{"start":{"line":178,"column":0},"end":{"line":178,"column":54}},"125":{"start":{"line":179,"column":0},"end":{"line":179,"column":57}},"126":{"start":{"line":180,"column":0},"end":{"line":180,"column":55}},"127":{"start":{"line":181,"column":0},"end":{"line":181,"column":58}},"128":{"start":{"line":182,"column":0},"end":{"line":182,"column":49}},"129":{"start":{"line":183,"column":0},"end":{"line":183,"column":54}},"130":{"start":{"line":184,"column":0},"end":{"line":184,"column":50}},"131":{"start":{"line":185,"column":0},"end":{"line":185,"column":49}},"132":{"start":{"line":186,"column":0},"end":{"line":186,"column":50}},"133":{"start":{"line":187,"column":0},"end":{"line":187,"column":54}},"134":{"start":{"line":188,"column":0},"end":{"line":188,"column":50}},"135":{"start":{"line":189,"column":0},"end":{"line":189,"column":53}},"136":{"start":{"line":190,"column":0},"end":{"line":190,"column":50}},"137":{"start":{"line":191,"column":0},"end":{"line":191,"column":52}},"138":{"start":{"line":192,"column":0},"end":{"line":192,"column":53}},"139":{"start":{"line":193,"column":0},"end":{"line":193,"column":56}},"140":{"start":{"line":194,"column":0},"end":{"line":194,"column":50}},"141":{"start":{"line":195,"column":0},"end":{"line":195,"column":59}},"142":{"start":{"line":196,"column":0},"end":{"line":196,"column":54}},"143":{"start":{"line":197,"column":0},"end":{"line":197,"column":51}},"144":{"start":{"line":198,"column":0},"end":{"line":198,"column":59}},"145":{"start":{"line":199,"column":0},"end":{"line":199,"column":61}},"146":{"start":{"line":200,"column":0},"end":{"line":200,"column":55}},"147":{"start":{"line":201,"column":0},"end":{"line":201,"column":54}},"148":{"start":{"line":202,"column":0},"end":{"line":202,"column":57}},"149":{"start":{"line":203,"column":0},"end":{"line":203,"column":55}},"150":{"start":{"line":204,"column":0},"end":{"line":204,"column":58}},"151":{"start":{"line":205,"column":0},"end":{"line":205,"column":51}},"152":{"start":{"line":206,"column":0},"end":{"line":206,"column":53}},"153":{"start":{"line":207,"column":0},"end":{"line":207,"column":53}},"154":{"start":{"line":208,"column":0},"end":{"line":208,"column":55}},"155":{"start":{"line":209,"column":0},"end":{"line":209,"column":50}},"156":{"start":{"line":210,"column":0},"end":{"line":210,"column":50}},"157":{"start":{"line":213,"column":0},"end":{"line":213,"column":55}},"158":{"start":{"line":214,"column":0},"end":{"line":214,"column":56}},"159":{"start":{"line":215,"column":0},"end":{"line":215,"column":55}},"160":{"start":{"line":216,"column":0},"end":{"line":216,"column":56}},"161":{"start":{"line":217,"column":0},"end":{"line":217,"column":60}},"162":{"start":{"line":218,"column":0},"end":{"line":218,"column":60}},"163":{"start":{"line":221,"column":0},"end":{"line":221,"column":56}},"164":{"start":{"line":222,"column":0},"end":{"line":222,"column":55}},"165":{"start":{"line":223,"column":0},"end":{"line":223,"column":61}},"166":{"start":{"line":224,"column":0},"end":{"line":224,"column":56}},"167":{"start":{"line":225,"column":0},"end":{"line":225,"column":57}},"168":{"start":{"line":226,"column":0},"end":{"line":226,"column":57}},"169":{"start":{"line":227,"column":0},"end":{"line":227,"column":62}},"170":{"start":{"line":228,"column":0},"end":{"line":228,"column":56}},"171":{"start":{"line":229,"column":0},"end":{"line":229,"column":52}},"172":{"start":{"line":230,"column":0},"end":{"line":230,"column":53}},"173":{"start":{"line":231,"column":0},"end":{"line":231,"column":53}},"174":{"start":{"line":232,"column":0},"end":{"line":232,"column":53}},"175":{"start":{"line":233,"column":0},"end":{"line":233,"column":58}},"176":{"start":{"line":234,"column":0},"end":{"line":234,"column":62}},"177":{"start":{"line":235,"column":0},"end":{"line":235,"column":66}},"178":{"start":{"line":236,"column":0},"end":{"line":236,"column":60}},"179":{"start":{"line":237,"column":0},"end":{"line":237,"column":61}},"180":{"start":{"line":238,"column":0},"end":{"line":238,"column":56}},"181":{"start":{"line":239,"column":0},"end":{"line":239,"column":63}},"182":{"start":{"line":240,"column":0},"end":{"line":240,"column":59}},"183":{"start":{"line":241,"column":0},"end":{"line":241,"column":52}},"184":{"start":{"line":242,"column":0},"end":{"line":242,"column":55}},"185":{"start":{"line":243,"column":0},"end":{"line":243,"column":57}},"186":{"start":{"line":244,"column":0},"end":{"line":244,"column":55}},"187":{"start":{"line":245,"column":0},"end":{"line":245,"column":52}},"188":{"start":{"line":246,"column":0},"end":{"line":246,"column":56}},"189":{"start":{"line":247,"column":0},"end":{"line":247,"column":52}},"190":{"start":{"line":248,"column":0},"end":{"line":248,"column":58}},"191":{"start":{"line":251,"column":0},"end":{"line":251,"column":53}},"192":{"start":{"line":252,"column":0},"end":{"line":252,"column":55}},"193":{"start":{"line":253,"column":0},"end":{"line":253,"column":54}},"194":{"start":{"line":256,"column":0},"end":{"line":256,"column":56}},"195":{"start":{"line":257,"column":0},"end":{"line":257,"column":57}},"196":{"start":{"line":260,"column":0},"end":{"line":260,"column":54}},"197":{"start":{"line":261,"column":0},"end":{"line":261,"column":55}},"198":{"start":{"line":262,"column":0},"end":{"line":262,"column":54}},"199":{"start":{"line":263,"column":0},"end":{"line":263,"column":55}},"200":{"start":{"line":266,"column":0},"end":{"line":266,"column":49}},"201":{"start":{"line":267,"column":0},"end":{"line":267,"column":53}},"202":{"start":{"line":268,"column":0},"end":{"line":268,"column":56}},"203":{"start":{"line":269,"column":0},"end":{"line":269,"column":52}},"204":{"start":{"line":270,"column":0},"end":{"line":270,"column":55}},"205":{"start":{"line":271,"column":0},"end":{"line":271,"column":53}},"206":{"start":{"line":272,"column":0},"end":{"line":272,"column":52}},"207":{"start":{"line":273,"column":0},"end":{"line":273,"column":48}},"208":{"start":{"line":274,"column":0},"end":{"line":274,"column":52}},"209":{"start":{"line":275,"column":0},"end":{"line":275,"column":54}},"210":{"start":{"line":276,"column":0},"end":{"line":276,"column":55}},"211":{"start":{"line":277,"column":0},"end":{"line":277,"column":53}},"212":{"start":{"line":278,"column":0},"end":{"line":278,"column":57}},"213":{"start":{"line":279,"column":0},"end":{"line":279,"column":58}},"214":{"start":{"line":280,"column":0},"end":{"line":280,"column":52}},"215":{"start":{"line":281,"column":0},"end":{"line":281,"column":54}},"216":{"start":{"line":282,"column":0},"end":{"line":282,"column":54}},"217":{"start":{"line":283,"column":0},"end":{"line":283,"column":51}},"218":{"start":{"line":284,"column":0},"end":{"line":284,"column":53}},"219":{"start":{"line":285,"column":0},"end":{"line":285,"column":56}},"220":{"start":{"line":286,"column":0},"end":{"line":286,"column":56}},"221":{"start":{"line":287,"column":0},"end":{"line":287,"column":52}},"222":{"start":{"line":288,"column":0},"end":{"line":288,"column":55}},"223":{"start":{"line":289,"column":0},"end":{"line":289,"column":60}},"224":{"start":{"line":290,"column":0},"end":{"line":290,"column":59}},"225":{"start":{"line":291,"column":0},"end":{"line":291,"column":50}},"226":{"start":{"line":292,"column":0},"end":{"line":292,"column":51}},"227":{"start":{"line":293,"column":0},"end":{"line":293,"column":55}},"228":{"start":{"line":294,"column":0},"end":{"line":294,"column":55}},"229":{"start":{"line":295,"column":0},"end":{"line":295,"column":51}},"230":{"start":{"line":296,"column":0},"end":{"line":296,"column":51}},"231":{"start":{"line":297,"column":0},"end":{"line":297,"column":49}},"232":{"start":{"line":298,"column":0},"end":{"line":298,"column":53}},"233":{"start":{"line":299,"column":0},"end":{"line":299,"column":55}},"234":{"start":{"line":300,"column":0},"end":{"line":300,"column":51}},"235":{"start":{"line":301,"column":0},"end":{"line":301,"column":54}},"236":{"start":{"line":302,"column":0},"end":{"line":302,"column":51}},"237":{"start":{"line":303,"column":0},"end":{"line":303,"column":48}},"238":{"start":{"line":304,"column":0},"end":{"line":304,"column":52}},"239":{"start":{"line":305,"column":0},"end":{"line":305,"column":54}},"240":{"start":{"line":306,"column":0},"end":{"line":306,"column":55}},"241":{"start":{"line":307,"column":0},"end":{"line":307,"column":51}},"242":{"start":{"line":308,"column":0},"end":{"line":308,"column":51}},"243":{"start":{"line":309,"column":0},"end":{"line":309,"column":54}},"244":{"start":{"line":310,"column":0},"end":{"line":310,"column":53}},"245":{"start":{"line":311,"column":0},"end":{"line":311,"column":56}},"246":{"start":{"line":312,"column":0},"end":{"line":312,"column":54}},"247":{"start":{"line":313,"column":0},"end":{"line":313,"column":51}},"248":{"start":{"line":314,"column":0},"end":{"line":314,"column":53}},"249":{"start":{"line":315,"column":0},"end":{"line":315,"column":56}},"250":{"start":{"line":316,"column":0},"end":{"line":316,"column":56}},"251":{"start":{"line":317,"column":0},"end":{"line":317,"column":52}},"252":{"start":{"line":318,"column":0},"end":{"line":318,"column":55}},"253":{"start":{"line":319,"column":0},"end":{"line":319,"column":61}},"254":{"start":{"line":320,"column":0},"end":{"line":320,"column":60}},"255":{"start":{"line":321,"column":0},"end":{"line":321,"column":50}},"256":{"start":{"line":322,"column":0},"end":{"line":322,"column":53}},"257":{"start":{"line":323,"column":0},"end":{"line":323,"column":58}},"258":{"start":{"line":324,"column":0},"end":{"line":324,"column":52}},"259":{"start":{"line":325,"column":0},"end":{"line":325,"column":54}},"260":{"start":{"line":326,"column":0},"end":{"line":326,"column":54}},"261":{"start":{"line":327,"column":0},"end":{"line":327,"column":62}},"262":{"start":{"line":328,"column":0},"end":{"line":328,"column":54}},"263":{"start":{"line":329,"column":0},"end":{"line":329,"column":56}},"264":{"start":{"line":330,"column":0},"end":{"line":330,"column":63}},"265":{"start":{"line":331,"column":0},"end":{"line":331,"column":52}},"266":{"start":{"line":332,"column":0},"end":{"line":332,"column":51}},"267":{"start":{"line":333,"column":0},"end":{"line":333,"column":50}},"268":{"start":{"line":334,"column":0},"end":{"line":334,"column":48}},"269":{"start":{"line":335,"column":0},"end":{"line":335,"column":48}},"270":{"start":{"line":336,"column":0},"end":{"line":336,"column":50}},"271":{"start":{"line":337,"column":0},"end":{"line":337,"column":50}},"272":{"start":{"line":338,"column":0},"end":{"line":338,"column":50}},"273":{"start":{"line":341,"column":0},"end":{"line":341,"column":52}},"274":{"start":{"line":342,"column":0},"end":{"line":342,"column":58}},"275":{"start":{"line":343,"column":0},"end":{"line":343,"column":48}},"276":{"start":{"line":344,"column":0},"end":{"line":344,"column":48}},"277":{"start":{"line":345,"column":0},"end":{"line":345,"column":59}},"278":{"start":{"line":346,"column":0},"end":{"line":346,"column":53}},"279":{"start":{"line":347,"column":0},"end":{"line":347,"column":52}},"280":{"start":{"line":348,"column":0},"end":{"line":348,"column":58}},"281":{"start":{"line":349,"column":0},"end":{"line":349,"column":51}},"282":{"start":{"line":350,"column":0},"end":{"line":350,"column":51}},"283":{"start":{"line":351,"column":0},"end":{"line":351,"column":59}},"284":{"start":{"line":352,"column":0},"end":{"line":352,"column":60}},"285":{"start":{"line":353,"column":0},"end":{"line":353,"column":55}},"286":{"start":{"line":354,"column":0},"end":{"line":354,"column":53}},"287":{"start":{"line":355,"column":0},"end":{"line":355,"column":56}},"288":{"start":{"line":356,"column":0},"end":{"line":356,"column":55}},"289":{"start":{"line":357,"column":0},"end":{"line":357,"column":54}},"290":{"start":{"line":358,"column":0},"end":{"line":358,"column":53}},"291":{"start":{"line":359,"column":0},"end":{"line":359,"column":54}},"292":{"start":{"line":360,"column":0},"end":{"line":360,"column":54}},"293":{"start":{"line":361,"column":0},"end":{"line":361,"column":53}},"294":{"start":{"line":364,"column":0},"end":{"line":364,"column":59}},"295":{"start":{"line":365,"column":0},"end":{"line":365,"column":58}},"296":{"start":{"line":366,"column":0},"end":{"line":366,"column":59}},"297":{"start":{"line":367,"column":0},"end":{"line":367,"column":60}},"298":{"start":{"line":368,"column":0},"end":{"line":368,"column":55}},"299":{"start":{"line":369,"column":0},"end":{"line":369,"column":61}},"300":{"start":{"line":370,"column":0},"end":{"line":370,"column":58}},"301":{"start":{"line":371,"column":0},"end":{"line":371,"column":58}},"302":{"start":{"line":372,"column":0},"end":{"line":372,"column":62}},"303":{"start":{"line":373,"column":0},"end":{"line":373,"column":59}},"304":{"start":{"line":374,"column":0},"end":{"line":374,"column":60}},"305":{"start":{"line":375,"column":0},"end":{"line":375,"column":48}},"306":{"start":{"line":376,"column":0},"end":{"line":376,"column":55}},"307":{"start":{"line":377,"column":0},"end":{"line":377,"column":58}},"308":{"start":{"line":378,"column":0},"end":{"line":378,"column":60}},"309":{"start":{"line":379,"column":0},"end":{"line":379,"column":53}},"310":{"start":{"line":380,"column":0},"end":{"line":380,"column":64}},"311":{"start":{"line":381,"column":0},"end":{"line":381,"column":61}},"312":{"start":{"line":382,"column":0},"end":{"line":382,"column":60}},"313":{"start":{"line":383,"column":0},"end":{"line":383,"column":62}},"314":{"start":{"line":384,"column":0},"end":{"line":384,"column":59}},"315":{"start":{"line":385,"column":0},"end":{"line":385,"column":59}},"316":{"start":{"line":386,"column":0},"end":{"line":386,"column":60}},"317":{"start":{"line":387,"column":0},"end":{"line":387,"column":61}},"318":{"start":{"line":388,"column":0},"end":{"line":388,"column":48}},"319":{"start":{"line":389,"column":0},"end":{"line":389,"column":59}},"320":{"start":{"line":390,"column":0},"end":{"line":390,"column":59}},"321":{"start":{"line":391,"column":0},"end":{"line":391,"column":61}},"322":{"start":{"line":392,"column":0},"end":{"line":392,"column":60}},"323":{"start":{"line":393,"column":0},"end":{"line":393,"column":52}},"324":{"start":{"line":394,"column":0},"end":{"line":394,"column":56}},"325":{"start":{"line":395,"column":0},"end":{"line":395,"column":56}},"326":{"start":{"line":397,"column":0},"end":{"line":397,"column":49}},"327":{"start":{"line":398,"column":0},"end":{"line":398,"column":46}},"328":{"start":{"line":399,"column":0},"end":{"line":399,"column":46}},"329":{"start":{"line":400,"column":0},"end":{"line":400,"column":46}},"330":{"start":{"line":401,"column":0},"end":{"line":401,"column":46}},"331":{"start":{"line":402,"column":0},"end":{"line":402,"column":46}},"332":{"start":{"line":403,"column":0},"end":{"line":403,"column":46}},"333":{"start":{"line":404,"column":0},"end":{"line":404,"column":55}},"334":{"start":{"line":405,"column":0},"end":{"line":405,"column":55}},"335":{"start":{"line":406,"column":0},"end":{"line":406,"column":55}},"336":{"start":{"line":407,"column":0},"end":{"line":407,"column":58}},"337":{"start":{"line":408,"column":0},"end":{"line":408,"column":55}},"338":{"start":{"line":409,"column":0},"end":{"line":409,"column":55}},"339":{"start":{"line":410,"column":0},"end":{"line":410,"column":55}},"340":{"start":{"line":411,"column":0},"end":{"line":411,"column":56}},"341":{"start":{"line":412,"column":0},"end":{"line":412,"column":52}},"342":{"start":{"line":413,"column":0},"end":{"line":413,"column":52}},"343":{"start":{"line":414,"column":0},"end":{"line":414,"column":55}},"344":{"start":{"line":415,"column":0},"end":{"line":415,"column":57}},"345":{"start":{"line":416,"column":0},"end":{"line":416,"column":53}},"346":{"start":{"line":417,"column":0},"end":{"line":417,"column":53}},"347":{"start":{"line":418,"column":0},"end":{"line":418,"column":55}},"348":{"start":{"line":419,"column":0},"end":{"line":419,"column":53}},"349":{"start":{"line":420,"column":0},"end":{"line":420,"column":54}},"350":{"start":{"line":421,"column":0},"end":{"line":421,"column":53}},"351":{"start":{"line":422,"column":0},"end":{"line":422,"column":53}},"352":{"start":{"line":423,"column":0},"end":{"line":423,"column":58}},"353":{"start":{"line":424,"column":0},"end":{"line":424,"column":59}},"354":{"start":{"line":425,"column":0},"end":{"line":425,"column":55}},"355":{"start":{"line":426,"column":0},"end":{"line":426,"column":54}},"356":{"start":{"line":427,"column":0},"end":{"line":427,"column":55}},"357":{"start":{"line":428,"column":0},"end":{"line":428,"column":55}},"358":{"start":{"line":429,"column":0},"end":{"line":429,"column":57}},"359":{"start":{"line":430,"column":0},"end":{"line":430,"column":54}},"360":{"start":{"line":431,"column":0},"end":{"line":431,"column":53}},"361":{"start":{"line":432,"column":0},"end":{"line":432,"column":55}},"362":{"start":{"line":433,"column":0},"end":{"line":433,"column":54}},"363":{"start":{"line":434,"column":0},"end":{"line":434,"column":55}},"364":{"start":{"line":435,"column":0},"end":{"line":435,"column":56}},"365":{"start":{"line":436,"column":0},"end":{"line":436,"column":52}},"366":{"start":{"line":437,"column":0},"end":{"line":437,"column":52}},"367":{"start":{"line":438,"column":0},"end":{"line":438,"column":52}},"368":{"start":{"line":439,"column":0},"end":{"line":439,"column":52}},"369":{"start":{"line":440,"column":0},"end":{"line":440,"column":52}},"370":{"start":{"line":441,"column":0},"end":{"line":441,"column":53}},"371":{"start":{"line":442,"column":0},"end":{"line":442,"column":55}},"372":{"start":{"line":443,"column":0},"end":{"line":443,"column":53}},"373":{"start":{"line":444,"column":0},"end":{"line":444,"column":57}},"374":{"start":{"line":445,"column":0},"end":{"line":445,"column":53}},"375":{"start":{"line":446,"column":0},"end":{"line":446,"column":53}},"376":{"start":{"line":447,"column":0},"end":{"line":447,"column":53}},"377":{"start":{"line":448,"column":0},"end":{"line":448,"column":55}},"378":{"start":{"line":449,"column":0},"end":{"line":449,"column":60}},"379":{"start":{"line":450,"column":0},"end":{"line":450,"column":58}},"380":{"start":{"line":451,"column":0},"end":{"line":451,"column":55}},"381":{"start":{"line":452,"column":0},"end":{"line":452,"column":56}},"382":{"start":{"line":453,"column":0},"end":{"line":453,"column":58}},"383":{"start":{"line":454,"column":0},"end":{"line":454,"column":56}},"384":{"start":{"line":455,"column":0},"end":{"line":455,"column":45}},"385":{"start":{"line":456,"column":0},"end":{"line":456,"column":40}},"386":{"start":{"line":457,"column":0},"end":{"line":457,"column":45}},"387":{"start":{"line":458,"column":0},"end":{"line":458,"column":50}},"388":{"start":{"line":459,"column":0},"end":{"line":459,"column":50}},"389":{"start":{"line":460,"column":0},"end":{"line":460,"column":49}},"390":{"start":{"line":461,"column":0},"end":{"line":461,"column":48}},"391":{"start":{"line":462,"column":0},"end":{"line":462,"column":51}},"392":{"start":{"line":463,"column":0},"end":{"line":463,"column":49}},"393":{"start":{"line":464,"column":0},"end":{"line":464,"column":49}},"394":{"start":{"line":465,"column":0},"end":{"line":465,"column":54}},"395":{"start":{"line":466,"column":0},"end":{"line":466,"column":50}},"396":{"start":{"line":467,"column":0},"end":{"line":467,"column":49}},"397":{"start":{"line":468,"column":0},"end":{"line":468,"column":51}},"398":{"start":{"line":469,"column":0},"end":{"line":469,"column":49}},"399":{"start":{"line":470,"column":0},"end":{"line":470,"column":54}},"400":{"start":{"line":471,"column":0},"end":{"line":471,"column":41}},"401":{"start":{"line":472,"column":0},"end":{"line":472,"column":41}},"402":{"start":{"line":473,"column":0},"end":{"line":473,"column":53}},"403":{"start":{"line":474,"column":0},"end":{"line":474,"column":52}},"404":{"start":{"line":475,"column":0},"end":{"line":475,"column":52}},"405":{"start":{"line":476,"column":0},"end":{"line":476,"column":42}},"406":{"start":{"line":477,"column":0},"end":{"line":477,"column":42}},"407":{"start":{"line":478,"column":0},"end":{"line":478,"column":42}},"408":{"start":{"line":479,"column":0},"end":{"line":479,"column":42}},"409":{"start":{"line":480,"column":0},"end":{"line":480,"column":54}},"410":{"start":{"line":481,"column":0},"end":{"line":481,"column":53}},"411":{"start":{"line":482,"column":0},"end":{"line":482,"column":53}},"412":{"start":{"line":483,"column":0},"end":{"line":483,"column":40}},"413":{"start":{"line":484,"column":0},"end":{"line":484,"column":40}},"414":{"start":{"line":485,"column":0},"end":{"line":485,"column":40}},"415":{"start":{"line":486,"column":0},"end":{"line":486,"column":40}},"416":{"start":{"line":487,"column":0},"end":{"line":487,"column":52}},"417":{"start":{"line":488,"column":0},"end":{"line":488,"column":50}},"418":{"start":{"line":489,"column":0},"end":{"line":489,"column":48}},"419":{"start":{"line":490,"column":0},"end":{"line":490,"column":49}},"420":{"start":{"line":491,"column":0},"end":{"line":491,"column":50}},"421":{"start":{"line":492,"column":0},"end":{"line":492,"column":43}},"422":{"start":{"line":493,"column":0},"end":{"line":493,"column":48}},"423":{"start":{"line":494,"column":0},"end":{"line":494,"column":51}},"424":{"start":{"line":495,"column":0},"end":{"line":495,"column":52}},"425":{"start":{"line":496,"column":0},"end":{"line":496,"column":52}},"426":{"start":{"line":497,"column":0},"end":{"line":497,"column":54}},"427":{"start":{"line":498,"column":0},"end":{"line":498,"column":54}},"428":{"start":{"line":499,"column":0},"end":{"line":499,"column":54}},"429":{"start":{"line":500,"column":0},"end":{"line":500,"column":54}},"430":{"start":{"line":501,"column":0},"end":{"line":501,"column":52}},"431":{"start":{"line":502,"column":0},"end":{"line":502,"column":55}},"432":{"start":{"line":503,"column":0},"end":{"line":503,"column":48}},"433":{"start":{"line":504,"column":0},"end":{"line":504,"column":49}},"434":{"start":{"line":505,"column":0},"end":{"line":505,"column":43}},"435":{"start":{"line":506,"column":0},"end":{"line":506,"column":48}},"436":{"start":{"line":507,"column":0},"end":{"line":507,"column":49}},"437":{"start":{"line":508,"column":0},"end":{"line":508,"column":56}},"438":{"start":{"line":509,"column":0},"end":{"line":509,"column":48}},"439":{"start":{"line":510,"column":0},"end":{"line":510,"column":49}},"440":{"start":{"line":511,"column":0},"end":{"line":511,"column":49}},"441":{"start":{"line":512,"column":0},"end":{"line":512,"column":47}},"442":{"start":{"line":513,"column":0},"end":{"line":513,"column":51}},"443":{"start":{"line":514,"column":0},"end":{"line":514,"column":49}},"444":{"start":{"line":515,"column":0},"end":{"line":515,"column":47}},"445":{"start":{"line":516,"column":0},"end":{"line":516,"column":47}},"446":{"start":{"line":517,"column":0},"end":{"line":517,"column":47}},"447":{"start":{"line":518,"column":0},"end":{"line":518,"column":53}},"448":{"start":{"line":519,"column":0},"end":{"line":519,"column":51}},"449":{"start":{"line":520,"column":0},"end":{"line":520,"column":50}},"450":{"start":{"line":521,"column":0},"end":{"line":521,"column":55}},"451":{"start":{"line":522,"column":0},"end":{"line":522,"column":42}},"452":{"start":{"line":523,"column":0},"end":{"line":523,"column":42}},"453":{"start":{"line":524,"column":0},"end":{"line":524,"column":48}},"454":{"start":{"line":525,"column":0},"end":{"line":525,"column":53}},"455":{"start":{"line":526,"column":0},"end":{"line":526,"column":51}},"456":{"start":{"line":527,"column":0},"end":{"line":527,"column":50}},"457":{"start":{"line":528,"column":0},"end":{"line":528,"column":51}},"458":{"start":{"line":529,"column":0},"end":{"line":529,"column":52}},"459":{"start":{"line":530,"column":0},"end":{"line":530,"column":57}},"460":{"start":{"line":531,"column":0},"end":{"line":531,"column":52}},"461":{"start":{"line":532,"column":0},"end":{"line":532,"column":56}},"462":{"start":{"line":533,"column":0},"end":{"line":533,"column":51}},"463":{"start":{"line":534,"column":0},"end":{"line":534,"column":59}},"464":{"start":{"line":535,"column":0},"end":{"line":535,"column":61}},"465":{"start":{"line":536,"column":0},"end":{"line":536,"column":52}},"466":{"start":{"line":537,"column":0},"end":{"line":537,"column":53}},"467":{"start":{"line":538,"column":0},"end":{"line":538,"column":50}},"468":{"start":{"line":539,"column":0},"end":{"line":539,"column":58}},"469":{"start":{"line":540,"column":0},"end":{"line":540,"column":59}},"470":{"start":{"line":541,"column":0},"end":{"line":541,"column":43}},"471":{"start":{"line":542,"column":0},"end":{"line":542,"column":46}},"472":{"start":{"line":543,"column":0},"end":{"line":543,"column":44}},"473":{"start":{"line":544,"column":0},"end":{"line":544,"column":46}},"474":{"start":{"line":545,"column":0},"end":{"line":545,"column":48}},"475":{"start":{"line":546,"column":0},"end":{"line":546,"column":49}},"476":{"start":{"line":547,"column":0},"end":{"line":547,"column":48}},"477":{"start":{"line":548,"column":0},"end":{"line":548,"column":49}},"478":{"start":{"line":549,"column":0},"end":{"line":549,"column":53}},"479":{"start":{"line":550,"column":0},"end":{"line":550,"column":54}},"480":{"start":{"line":551,"column":0},"end":{"line":551,"column":52}},"481":{"start":{"line":552,"column":0},"end":{"line":552,"column":53}},"482":{"start":{"line":553,"column":0},"end":{"line":553,"column":55}},"483":{"start":{"line":554,"column":0},"end":{"line":554,"column":49}},"484":{"start":{"line":555,"column":0},"end":{"line":555,"column":54}},"485":{"start":{"line":556,"column":0},"end":{"line":556,"column":51}},"486":{"start":{"line":557,"column":0},"end":{"line":557,"column":54}},"487":{"start":{"line":558,"column":0},"end":{"line":558,"column":53}},"488":{"start":{"line":559,"column":0},"end":{"line":559,"column":53}},"489":{"start":{"line":560,"column":0},"end":{"line":560,"column":55}},"490":{"start":{"line":561,"column":0},"end":{"line":561,"column":55}},"491":{"start":{"line":562,"column":0},"end":{"line":562,"column":57}},"492":{"start":{"line":563,"column":0},"end":{"line":563,"column":57}},"493":{"start":{"line":564,"column":0},"end":{"line":564,"column":51}},"494":{"start":{"line":565,"column":0},"end":{"line":565,"column":51}},"495":{"start":{"line":566,"column":0},"end":{"line":566,"column":53}},"496":{"start":{"line":567,"column":0},"end":{"line":567,"column":53}},"497":{"start":{"line":568,"column":0},"end":{"line":568,"column":51}},"498":{"start":{"line":569,"column":0},"end":{"line":569,"column":51}},"499":{"start":{"line":570,"column":0},"end":{"line":570,"column":48}},"500":{"start":{"line":571,"column":0},"end":{"line":571,"column":50}},"501":{"start":{"line":572,"column":0},"end":{"line":572,"column":49}},"502":{"start":{"line":573,"column":0},"end":{"line":573,"column":50}},"503":{"start":{"line":574,"column":0},"end":{"line":574,"column":49}},"504":{"start":{"line":575,"column":0},"end":{"line":575,"column":48}},"505":{"start":{"line":576,"column":0},"end":{"line":576,"column":54}},"506":{"start":{"line":577,"column":0},"end":{"line":577,"column":53}},"507":{"start":{"line":578,"column":0},"end":{"line":578,"column":52}},"508":{"start":{"line":579,"column":0},"end":{"line":579,"column":49}},"509":{"start":{"line":580,"column":0},"end":{"line":580,"column":53}},"510":{"start":{"line":581,"column":0},"end":{"line":581,"column":53}},"511":{"start":{"line":582,"column":0},"end":{"line":582,"column":60}},"512":{"start":{"line":583,"column":0},"end":{"line":583,"column":60}},"513":{"start":{"line":584,"column":0},"end":{"line":584,"column":53}},"514":{"start":{"line":585,"column":0},"end":{"line":585,"column":53}},"515":{"start":{"line":586,"column":0},"end":{"line":586,"column":53}},"516":{"start":{"line":587,"column":0},"end":{"line":587,"column":53}},"517":{"start":{"line":588,"column":0},"end":{"line":588,"column":55}},"518":{"start":{"line":589,"column":0},"end":{"line":589,"column":54}},"519":{"start":{"line":590,"column":0},"end":{"line":590,"column":54}},"520":{"start":{"line":591,"column":0},"end":{"line":591,"column":53}},"521":{"start":{"line":592,"column":0},"end":{"line":592,"column":54}},"522":{"start":{"line":593,"column":0},"end":{"line":593,"column":52}},"523":{"start":{"line":594,"column":0},"end":{"line":594,"column":54}},"524":{"start":{"line":595,"column":0},"end":{"line":595,"column":54}},"525":{"start":{"line":596,"column":0},"end":{"line":596,"column":52}},"526":{"start":{"line":597,"column":0},"end":{"line":597,"column":52}},"527":{"start":{"line":598,"column":0},"end":{"line":598,"column":52}},"528":{"start":{"line":599,"column":0},"end":{"line":599,"column":55}},"529":{"start":{"line":600,"column":0},"end":{"line":600,"column":55}},"530":{"start":{"line":602,"column":0},"end":{"line":602,"column":50}},"531":{"start":{"line":603,"column":0},"end":{"line":603,"column":51}},"532":{"start":{"line":604,"column":0},"end":{"line":604,"column":49}},"533":{"start":{"line":605,"column":0},"end":{"line":605,"column":49}},"534":{"start":{"line":606,"column":0},"end":{"line":606,"column":50}},"535":{"start":{"line":607,"column":0},"end":{"line":607,"column":50}},"536":{"start":{"line":608,"column":0},"end":{"line":608,"column":56}},"537":{"start":{"line":609,"column":0},"end":{"line":609,"column":56}},"538":{"start":{"line":610,"column":0},"end":{"line":610,"column":56}},"539":{"start":{"line":611,"column":0},"end":{"line":611,"column":56}},"540":{"start":{"line":612,"column":0},"end":{"line":612,"column":56}},"541":{"start":{"line":614,"column":0},"end":{"line":614,"column":51}},"542":{"start":{"line":615,"column":0},"end":{"line":615,"column":49}},"543":{"start":{"line":616,"column":0},"end":{"line":616,"column":49}},"544":{"start":{"line":619,"column":0},"end":{"line":619,"column":6}},"545":{"start":{"line":620,"column":0},"end":{"line":620,"column":7}},"546":{"start":{"line":623,"column":0},"end":{"line":623,"column":40}},"547":{"start":{"line":624,"column":0},"end":{"line":627,"column":1}},"548":{"start":{"line":625,"column":4},"end":{"line":625,"column":35}},"549":{"start":{"line":626,"column":4},"end":{"line":626,"column":46}},"550":{"start":{"line":630,"column":0},"end":{"line":630,"column":49}},"551":{"start":{"line":631,"column":0},"end":{"line":634,"column":1}},"552":{"start":{"line":632,"column":4},"end":{"line":632,"column":31}},"553":{"start":{"line":633,"column":4},"end":{"line":633,"column":46}},"554":{"start":{"line":637,"column":0},"end":{"line":637,"column":69}},"555":{"start":{"line":638,"column":0},"end":{"line":642,"column":1}},"556":{"start":{"line":639,"column":4},"end":{"line":639,"column":27}},"557":{"start":{"line":640,"column":4},"end":{"line":640,"column":46}},"558":{"start":{"line":641,"column":4},"end":{"line":641,"column":46}},"559":{"start":{"line":645,"column":0},"end":{"line":648,"column":1}},"560":{"start":{"line":646,"column":4},"end":{"line":646,"column":32}},"561":{"start":{"line":647,"column":4},"end":{"line":647,"column":46}},"562":{"start":{"line":650,"column":0},"end":{"line":653,"column":1}},"563":{"start":{"line":651,"column":4},"end":{"line":651,"column":32}},"564":{"start":{"line":652,"column":4},"end":{"line":652,"column":46}},"565":{"start":{"line":655,"column":0},"end":{"line":658,"column":1}},"566":{"start":{"line":656,"column":4},"end":{"line":656,"column":32}},"567":{"start":{"line":657,"column":4},"end":{"line":657,"column":46}},"568":{"start":{"line":661,"column":0},"end":{"line":664,"column":1}},"569":{"start":{"line":662,"column":4},"end":{"line":662,"column":32}},"570":{"start":{"line":663,"column":4},"end":{"line":663,"column":46}},"571":{"start":{"line":667,"column":0},"end":{"line":667,"column":49}},"572":{"start":{"line":668,"column":0},"end":{"line":668,"column":49}},"573":{"start":{"line":669,"column":0},"end":{"line":669,"column":49}},"574":{"start":{"line":670,"column":0},"end":{"line":670,"column":49}},"575":{"start":{"line":671,"column":0},"end":{"line":671,"column":49}},"576":{"start":{"line":672,"column":0},"end":{"line":672,"column":49}}},"branchMap":{},"code":["/**"," * This file holds a list of all no-argument functions and single-character"," * symbols (like 'a' or ';')."," *"," * For each of the symbols, there are three properties they can have:"," * - font (required): the font to be used for this symbol. Either \"main\" (the","     normal font), or \"ams\" (the ams fonts)."," * - group (required): the ParseNode group type the symbol should have (i.e.","     \"textord\", \"mathord\", etc).","     See https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types"," * - replace: the character that this symbol or function should be"," *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi"," *   character in the main font)."," *"," * The outermost map in the table indicates what mode the symbols should be"," * accepted in (e.g. \"math\" or \"text\")."," */","","module.exports = {","    math: {},","    text: {}","};","","function defineSymbol(mode, font, group, replace, name) {","    module.exports[mode][name] = {","        font: font,","        group: group,","        replace: replace","    };","}","","// Some abbreviations for commonly used strings.","// This helps minify the code, and also spotting typos using jshint.","","// modes:","var math = \"math\";","var text = \"text\";","","// fonts:","var main = \"main\";","var ams = \"ams\";","","// groups:","var accent = \"accent\";","var bin = \"bin\";","var close = \"close\";","var inner = \"inner\";","var mathord = \"mathord\";","var op = \"op\";","var open = \"open\";","var punct = \"punct\";","var rel = \"rel\";","var spacing = \"spacing\";","var textord = \"textord\";","","// Now comes the symbol table","","// Relation Symbols","defineSymbol(math, main, rel, \"\\u2261\", \"\\\\equiv\");","defineSymbol(math, main, rel, \"\\u227a\", \"\\\\prec\");","defineSymbol(math, main, rel, \"\\u227b\", \"\\\\succ\");","defineSymbol(math, main, rel, \"\\u223c\", \"\\\\sim\");","defineSymbol(math, main, rel, \"\\u22a5\", \"\\\\perp\");","defineSymbol(math, main, rel, \"\\u2aaf\", \"\\\\preceq\");","defineSymbol(math, main, rel, \"\\u2ab0\", \"\\\\succeq\");","defineSymbol(math, main, rel, \"\\u2243\", \"\\\\simeq\");","defineSymbol(math, main, rel, \"\\u2223\", \"\\\\mid\");","defineSymbol(math, main, rel, \"\\u226a\", \"\\\\ll\");","defineSymbol(math, main, rel, \"\\u226b\", \"\\\\gg\");","defineSymbol(math, main, rel, \"\\u224d\", \"\\\\asymp\");","defineSymbol(math, main, rel, \"\\u2225\", \"\\\\parallel\");","defineSymbol(math, main, rel, \"\\u22c8\", \"\\\\bowtie\");","defineSymbol(math, main, rel, \"\\u2323\", \"\\\\smile\");","defineSymbol(math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\");","defineSymbol(math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\");","defineSymbol(math, main, rel, \"\\u2250\", \"\\\\doteq\");","defineSymbol(math, main, rel, \"\\u2322\", \"\\\\frown\");","defineSymbol(math, main, rel, \"\\u220b\", \"\\\\ni\");","defineSymbol(math, main, rel, \"\\u221d\", \"\\\\propto\");","defineSymbol(math, main, rel, \"\\u22a2\", \"\\\\vdash\");","defineSymbol(math, main, rel, \"\\u22a3\", \"\\\\dashv\");","defineSymbol(math, main, rel, \"\\u220b\", \"\\\\owns\");","","// Punctuation","defineSymbol(math, main, punct, \"\\u002e\", \"\\\\ldotp\");","defineSymbol(math, main, punct, \"\\u22c5\", \"\\\\cdotp\");","","// Misc Symbols","defineSymbol(math, main, textord, \"\\u0023\", \"\\\\#\");","defineSymbol(text, main, textord, \"\\u0023\", \"\\\\#\");","defineSymbol(math, main, textord, \"\\u0026\", \"\\\\&\");","defineSymbol(text, main, textord, \"\\u0026\", \"\\\\&\");","defineSymbol(math, main, textord, \"\\u2135\", \"\\\\aleph\");","defineSymbol(math, main, textord, \"\\u2200\", \"\\\\forall\");","defineSymbol(math, main, textord, \"\\u210f\", \"\\\\hbar\");","defineSymbol(math, main, textord, \"\\u2203\", \"\\\\exists\");","defineSymbol(math, main, textord, \"\\u2207\", \"\\\\nabla\");","defineSymbol(math, main, textord, \"\\u266d\", \"\\\\flat\");","defineSymbol(math, main, textord, \"\\u2113\", \"\\\\ell\");","defineSymbol(math, main, textord, \"\\u266e\", \"\\\\natural\");","defineSymbol(math, main, textord, \"\\u2663\", \"\\\\clubsuit\");","defineSymbol(math, main, textord, \"\\u2118\", \"\\\\wp\");","defineSymbol(math, main, textord, \"\\u266f\", \"\\\\sharp\");","defineSymbol(math, main, textord, \"\\u2662\", \"\\\\diamondsuit\");","defineSymbol(math, main, textord, \"\\u211c\", \"\\\\Re\");","defineSymbol(math, main, textord, \"\\u2661\", \"\\\\heartsuit\");","defineSymbol(math, main, textord, \"\\u2111\", \"\\\\Im\");","defineSymbol(math, main, textord, \"\\u2660\", \"\\\\spadesuit\");","","// Math and Text","defineSymbol(math, main, textord, \"\\u2020\", \"\\\\dag\");","defineSymbol(math, main, textord, \"\\u2021\", \"\\\\ddag\");","","// Large Delimiters","defineSymbol(math, main, close, \"\\u23b1\", \"\\\\rmoustache\");","defineSymbol(math, main, open, \"\\u23b0\", \"\\\\lmoustache\");","defineSymbol(math, main, close, \"\\u27ef\", \"\\\\rgroup\");","defineSymbol(math, main, open, \"\\u27ee\", \"\\\\lgroup\");","","// Binary Operators","defineSymbol(math, main, bin, \"\\u2213\", \"\\\\mp\");","defineSymbol(math, main, bin, \"\\u2296\", \"\\\\ominus\");","defineSymbol(math, main, bin, \"\\u228e\", \"\\\\uplus\");","defineSymbol(math, main, bin, \"\\u2293\", \"\\\\sqcap\");","defineSymbol(math, main, bin, \"\\u2217\", \"\\\\ast\");","defineSymbol(math, main, bin, \"\\u2294\", \"\\\\sqcup\");","defineSymbol(math, main, bin, \"\\u25ef\", \"\\\\bigcirc\");","defineSymbol(math, main, bin, \"\\u2219\", \"\\\\bullet\");","defineSymbol(math, main, bin, \"\\u2021\", \"\\\\ddagger\");","defineSymbol(math, main, bin, \"\\u2240\", \"\\\\wr\");","defineSymbol(math, main, bin, \"\\u2a3f\", \"\\\\amalg\");","","// Arrow Symbols","defineSymbol(math, main, rel, \"\\u27f5\", \"\\\\longleftarrow\");","defineSymbol(math, main, rel, \"\\u21d0\", \"\\\\Leftarrow\");","defineSymbol(math, main, rel, \"\\u27f8\", \"\\\\Longleftarrow\");","defineSymbol(math, main, rel, \"\\u27f6\", \"\\\\longrightarrow\");","defineSymbol(math, main, rel, \"\\u21d2\", \"\\\\Rightarrow\");","defineSymbol(math, main, rel, \"\\u27f9\", \"\\\\Longrightarrow\");","defineSymbol(math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\");","defineSymbol(math, main, rel, \"\\u27f7\", \"\\\\longleftrightarrow\");","defineSymbol(math, main, rel, \"\\u21d4\", \"\\\\Leftrightarrow\");","defineSymbol(math, main, rel, \"\\u27fa\", \"\\\\Longleftrightarrow\");","defineSymbol(math, main, rel, \"\\u21a6\", \"\\\\mapsto\");","defineSymbol(math, main, rel, \"\\u27fc\", \"\\\\longmapsto\");","defineSymbol(math, main, rel, \"\\u2197\", \"\\\\nearrow\");","defineSymbol(math, main, rel, \"\\u21a9\", \"\\\\hookleftarrow\");","defineSymbol(math, main, rel, \"\\u21aa\", \"\\\\hookrightarrow\");","defineSymbol(math, main, rel, \"\\u2198\", \"\\\\searrow\");","defineSymbol(math, main, rel, \"\\u21bc\", \"\\\\leftharpoonup\");","defineSymbol(math, main, rel, \"\\u21c0\", \"\\\\rightharpoonup\");","defineSymbol(math, main, rel, \"\\u2199\", \"\\\\swarrow\");","defineSymbol(math, main, rel, \"\\u21bd\", \"\\\\leftharpoondown\");","defineSymbol(math, main, rel, \"\\u21c1\", \"\\\\rightharpoondown\");","defineSymbol(math, main, rel, \"\\u2196\", \"\\\\nwarrow\");","defineSymbol(math, main, rel, \"\\u21cc\", \"\\\\rightleftharpoons\");","","// AMS Negated Binary Relations","defineSymbol(math, ams, rel, \"\\u226e\", \"\\\\nless\");","defineSymbol(math, ams, rel, \"\\ue010\", \"\\\\nleqslant\");","defineSymbol(math, ams, rel, \"\\ue011\", \"\\\\nleqq\");","defineSymbol(math, ams, rel, \"\\u2a87\", \"\\\\lneq\");","defineSymbol(math, ams, rel, \"\\u2268\", \"\\\\lneqq\");","defineSymbol(math, ams, rel, \"\\ue00c\", \"\\\\lvertneqq\");","defineSymbol(math, ams, rel, \"\\u22e6\", \"\\\\lnsim\");","defineSymbol(math, ams, rel, \"\\u2a89\", \"\\\\lnapprox\");","defineSymbol(math, ams, rel, \"\\u2280\", \"\\\\nprec\");","defineSymbol(math, ams, rel, \"\\u22e0\", \"\\\\npreceq\");","defineSymbol(math, ams, rel, \"\\u22e8\", \"\\\\precnsim\");","defineSymbol(math, ams, rel, \"\\u2ab9\", \"\\\\precnapprox\");","defineSymbol(math, ams, rel, \"\\u2241\", \"\\\\nsim\");","defineSymbol(math, ams, rel, \"\\ue006\", \"\\\\nshortmid\");","defineSymbol(math, ams, rel, \"\\u2224\", \"\\\\nmid\");","defineSymbol(math, ams, rel, \"\\u22ac\", \"\\\\nvdash\");","defineSymbol(math, ams, rel, \"\\u22ad\", \"\\\\nvDash\");","defineSymbol(math, ams, rel, \"\\u22ea\", \"\\\\ntriangleleft\");","defineSymbol(math, ams, rel, \"\\u22ec\", \"\\\\ntrianglelefteq\");","defineSymbol(math, ams, rel, \"\\u228a\", \"\\\\subsetneq\");","defineSymbol(math, ams, rel, \"\\ue01a\", \"\\\\varsubsetneq\");","defineSymbol(math, ams, rel, \"\\u2acb\", \"\\\\subsetneqq\");","defineSymbol(math, ams, rel, \"\\ue017\", \"\\\\varsubsetneqq\");","defineSymbol(math, ams, rel, \"\\u226f\", \"\\\\ngtr\");","defineSymbol(math, ams, rel, \"\\ue00f\", \"\\\\ngeqslant\");","defineSymbol(math, ams, rel, \"\\ue00e\", \"\\\\ngeqq\");","defineSymbol(math, ams, rel, \"\\u2a88\", \"\\\\gneq\");","defineSymbol(math, ams, rel, \"\\u2269\", \"\\\\gneqq\");","defineSymbol(math, ams, rel, \"\\ue00d\", \"\\\\gvertneqq\");","defineSymbol(math, ams, rel, \"\\u22e7\", \"\\\\gnsim\");","defineSymbol(math, ams, rel, \"\\u2a8a\", \"\\\\gnapprox\");","defineSymbol(math, ams, rel, \"\\u2281\", \"\\\\nsucc\");","defineSymbol(math, ams, rel, \"\\u22e1\", \"\\\\nsucceq\");","defineSymbol(math, ams, rel, \"\\u22e9\", \"\\\\succnsim\");","defineSymbol(math, ams, rel, \"\\u2aba\", \"\\\\succnapprox\");","defineSymbol(math, ams, rel, \"\\u2246\", \"\\\\ncong\");","defineSymbol(math, ams, rel, \"\\ue007\", \"\\\\nshortparallel\");","defineSymbol(math, ams, rel, \"\\u2226\", \"\\\\nparallel\");","defineSymbol(math, ams, rel, \"\\u22af\", \"\\\\nVDash\");","defineSymbol(math, ams, rel, \"\\u22eb\", \"\\\\ntriangleright\");","defineSymbol(math, ams, rel, \"\\u22ed\", \"\\\\ntrianglerighteq\");","defineSymbol(math, ams, rel, \"\\ue018\", \"\\\\nsupseteqq\");","defineSymbol(math, ams, rel, \"\\u228b\", \"\\\\supsetneq\");","defineSymbol(math, ams, rel, \"\\ue01b\", \"\\\\varsupsetneq\");","defineSymbol(math, ams, rel, \"\\u2acc\", \"\\\\supsetneqq\");","defineSymbol(math, ams, rel, \"\\ue019\", \"\\\\varsupsetneqq\");","defineSymbol(math, ams, rel, \"\\u22ae\", \"\\\\nVdash\");","defineSymbol(math, ams, rel, \"\\u2ab5\", \"\\\\precneqq\");","defineSymbol(math, ams, rel, \"\\u2ab6\", \"\\\\succneqq\");","defineSymbol(math, ams, rel, \"\\ue016\", \"\\\\nsubseteqq\");","defineSymbol(math, ams, bin, \"\\u22b4\", \"\\\\unlhd\");","defineSymbol(math, ams, bin, \"\\u22b5\", \"\\\\unrhd\");","","// AMS Negated Arrows","defineSymbol(math, ams, rel, \"\\u219a\", \"\\\\nleftarrow\");","defineSymbol(math, ams, rel, \"\\u219b\", \"\\\\nrightarrow\");","defineSymbol(math, ams, rel, \"\\u21cd\", \"\\\\nLeftarrow\");","defineSymbol(math, ams, rel, \"\\u21cf\", \"\\\\nRightarrow\");","defineSymbol(math, ams, rel, \"\\u21ae\", \"\\\\nleftrightarrow\");","defineSymbol(math, ams, rel, \"\\u21ce\", \"\\\\nLeftrightarrow\");","","// AMS Misc","defineSymbol(math, ams, rel, \"\\u25b3\", \"\\\\vartriangle\");","defineSymbol(math, ams, textord, \"\\u210f\", \"\\\\hslash\");","defineSymbol(math, ams, textord, \"\\u25bd\", \"\\\\triangledown\");","defineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\lozenge\");","defineSymbol(math, ams, textord, \"\\u24c8\", \"\\\\circledS\");","defineSymbol(math, ams, textord, \"\\u00ae\", \"\\\\circledR\");","defineSymbol(math, ams, textord, \"\\u2221\", \"\\\\measuredangle\");","defineSymbol(math, ams, textord, \"\\u2204\", \"\\\\nexists\");","defineSymbol(math, ams, textord, \"\\u2127\", \"\\\\mho\");","defineSymbol(math, ams, textord, \"\\u2132\", \"\\\\Finv\");","defineSymbol(math, ams, textord, \"\\u2141\", \"\\\\Game\");","defineSymbol(math, ams, textord, \"\\u006b\", \"\\\\Bbbk\");","defineSymbol(math, ams, textord, \"\\u2035\", \"\\\\backprime\");","defineSymbol(math, ams, textord, \"\\u25b2\", \"\\\\blacktriangle\");","defineSymbol(math, ams, textord, \"\\u25bc\", \"\\\\blacktriangledown\");","defineSymbol(math, ams, textord, \"\\u25a0\", \"\\\\blacksquare\");","defineSymbol(math, ams, textord, \"\\u29eb\", \"\\\\blacklozenge\");","defineSymbol(math, ams, textord, \"\\u2605\", \"\\\\bigstar\");","defineSymbol(math, ams, textord, \"\\u2222\", \"\\\\sphericalangle\");","defineSymbol(math, ams, textord, \"\\u2201\", \"\\\\complement\");","defineSymbol(math, ams, textord, \"\\u00f0\", \"\\\\eth\");","defineSymbol(math, ams, textord, \"\\u2571\", \"\\\\diagup\");","defineSymbol(math, ams, textord, \"\\u2572\", \"\\\\diagdown\");","defineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\square\");","defineSymbol(math, ams, textord, \"\\u25a1\", \"\\\\Box\");","defineSymbol(math, ams, textord, \"\\u25ca\", \"\\\\Diamond\");","defineSymbol(math, ams, textord, \"\\u00a5\", \"\\\\yen\");","defineSymbol(math, ams, textord, \"\\u2713\", \"\\\\checkmark\");","","// AMS Hebrew","defineSymbol(math, ams, textord, \"\\u2136\", \"\\\\beth\");","defineSymbol(math, ams, textord, \"\\u2138\", \"\\\\daleth\");","defineSymbol(math, ams, textord, \"\\u2137\", \"\\\\gimel\");","","// AMS Greek","defineSymbol(math, ams, textord, \"\\u03dd\", \"\\\\digamma\");","defineSymbol(math, ams, textord, \"\\u03f0\", \"\\\\varkappa\");","","// AMS Delimiters","defineSymbol(math, ams, open, \"\\u250c\", \"\\\\ulcorner\");","defineSymbol(math, ams, close, \"\\u2510\", \"\\\\urcorner\");","defineSymbol(math, ams, open, \"\\u2514\", \"\\\\llcorner\");","defineSymbol(math, ams, close, \"\\u2518\", \"\\\\lrcorner\");","","// AMS Binary Relations","defineSymbol(math, ams, rel, \"\\u2266\", \"\\\\leqq\");","defineSymbol(math, ams, rel, \"\\u2a7d\", \"\\\\leqslant\");","defineSymbol(math, ams, rel, \"\\u2a95\", \"\\\\eqslantless\");","defineSymbol(math, ams, rel, \"\\u2272\", \"\\\\lesssim\");","defineSymbol(math, ams, rel, \"\\u2a85\", \"\\\\lessapprox\");","defineSymbol(math, ams, rel, \"\\u224a\", \"\\\\approxeq\");","defineSymbol(math, ams, bin, \"\\u22d6\", \"\\\\lessdot\");","defineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\lll\");","defineSymbol(math, ams, rel, \"\\u2276\", \"\\\\lessgtr\");","defineSymbol(math, ams, rel, \"\\u22da\", \"\\\\lesseqgtr\");","defineSymbol(math, ams, rel, \"\\u2a8b\", \"\\\\lesseqqgtr\");","defineSymbol(math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");","defineSymbol(math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\");","defineSymbol(math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\");","defineSymbol(math, ams, rel, \"\\u223d\", \"\\\\backsim\");","defineSymbol(math, ams, rel, \"\\u22cd\", \"\\\\backsimeq\");","defineSymbol(math, ams, rel, \"\\u2ac5\", \"\\\\subseteqq\");","defineSymbol(math, ams, rel, \"\\u22d0\", \"\\\\Subset\");","defineSymbol(math, ams, rel, \"\\u228f\", \"\\\\sqsubset\");","defineSymbol(math, ams, rel, \"\\u227c\", \"\\\\preccurlyeq\");","defineSymbol(math, ams, rel, \"\\u22de\", \"\\\\curlyeqprec\");","defineSymbol(math, ams, rel, \"\\u227e\", \"\\\\precsim\");","defineSymbol(math, ams, rel, \"\\u2ab7\", \"\\\\precapprox\");","defineSymbol(math, ams, rel, \"\\u22b2\", \"\\\\vartriangleleft\");","defineSymbol(math, ams, rel, \"\\u22b4\", \"\\\\trianglelefteq\");","defineSymbol(math, ams, rel, \"\\u22a8\", \"\\\\vDash\");","defineSymbol(math, ams, rel, \"\\u22aa\", \"\\\\Vvdash\");","defineSymbol(math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");","defineSymbol(math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");","defineSymbol(math, ams, rel, \"\\u224f\", \"\\\\bumpeq\");","defineSymbol(math, ams, rel, \"\\u224e\", \"\\\\Bumpeq\");","defineSymbol(math, ams, rel, \"\\u2267\", \"\\\\geqq\");","defineSymbol(math, ams, rel, \"\\u2a7e\", \"\\\\geqslant\");","defineSymbol(math, ams, rel, \"\\u2a96\", \"\\\\eqslantgtr\");","defineSymbol(math, ams, rel, \"\\u2273\", \"\\\\gtrsim\");","defineSymbol(math, ams, rel, \"\\u2a86\", \"\\\\gtrapprox\");","defineSymbol(math, ams, bin, \"\\u22d7\", \"\\\\gtrdot\");","defineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\ggg\");","defineSymbol(math, ams, rel, \"\\u2277\", \"\\\\gtrless\");","defineSymbol(math, ams, rel, \"\\u22db\", \"\\\\gtreqless\");","defineSymbol(math, ams, rel, \"\\u2a8c\", \"\\\\gtreqqless\");","defineSymbol(math, ams, rel, \"\\u2256\", \"\\\\eqcirc\");","defineSymbol(math, ams, rel, \"\\u2257\", \"\\\\circeq\");","defineSymbol(math, ams, rel, \"\\u225c\", \"\\\\triangleq\");","defineSymbol(math, ams, rel, \"\\u223c\", \"\\\\thicksim\");","defineSymbol(math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");","defineSymbol(math, ams, rel, \"\\u2ac6\", \"\\\\supseteqq\");","defineSymbol(math, ams, rel, \"\\u22d1\", \"\\\\Supset\");","defineSymbol(math, ams, rel, \"\\u2290\", \"\\\\sqsupset\");","defineSymbol(math, ams, rel, \"\\u227d\", \"\\\\succcurlyeq\");","defineSymbol(math, ams, rel, \"\\u22df\", \"\\\\curlyeqsucc\");","defineSymbol(math, ams, rel, \"\\u227f\", \"\\\\succsim\");","defineSymbol(math, ams, rel, \"\\u2ab8\", \"\\\\succapprox\");","defineSymbol(math, ams, rel, \"\\u22b3\", \"\\\\vartriangleright\");","defineSymbol(math, ams, rel, \"\\u22b5\", \"\\\\trianglerighteq\");","defineSymbol(math, ams, rel, \"\\u22a9\", \"\\\\Vdash\");","defineSymbol(math, ams, rel, \"\\u2223\", \"\\\\shortmid\");","defineSymbol(math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");","defineSymbol(math, ams, rel, \"\\u226c\", \"\\\\between\");","defineSymbol(math, ams, rel, \"\\u22d4\", \"\\\\pitchfork\");","defineSymbol(math, ams, rel, \"\\u221d\", \"\\\\varpropto\");","defineSymbol(math, ams, rel, \"\\u25c0\", \"\\\\blacktriangleleft\");","defineSymbol(math, ams, rel, \"\\u2234\", \"\\\\therefore\");","defineSymbol(math, ams, rel, \"\\u220d\", \"\\\\backepsilon\");","defineSymbol(math, ams, rel, \"\\u25b6\", \"\\\\blacktriangleright\");","defineSymbol(math, ams, rel, \"\\u2235\", \"\\\\because\");","defineSymbol(math, ams, rel, \"\\u22d8\", \"\\\\llless\");","defineSymbol(math, ams, rel, \"\\u22d9\", \"\\\\gggtr\");","defineSymbol(math, ams, bin, \"\\u22b2\", \"\\\\lhd\");","defineSymbol(math, ams, bin, \"\\u22b3\", \"\\\\rhd\");","defineSymbol(math, ams, rel, \"\\u2242\", \"\\\\eqsim\");","defineSymbol(math, main, rel, \"\\u22c8\", \"\\\\Join\");","defineSymbol(math, ams, rel, \"\\u2251\", \"\\\\Doteq\");","","// AMS Binary Operators","defineSymbol(math, ams, bin, \"\\u2214\", \"\\\\dotplus\");","defineSymbol(math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");","defineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\Cap\");","defineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\Cup\");","defineSymbol(math, ams, bin, \"\\u2a5e\", \"\\\\doublebarwedge\");","defineSymbol(math, ams, bin, \"\\u229f\", \"\\\\boxminus\");","defineSymbol(math, ams, bin, \"\\u229e\", \"\\\\boxplus\");","defineSymbol(math, ams, bin, \"\\u22c7\", \"\\\\divideontimes\");","defineSymbol(math, ams, bin, \"\\u22c9\", \"\\\\ltimes\");","defineSymbol(math, ams, bin, \"\\u22ca\", \"\\\\rtimes\");","defineSymbol(math, ams, bin, \"\\u22cb\", \"\\\\leftthreetimes\");","defineSymbol(math, ams, bin, \"\\u22cc\", \"\\\\rightthreetimes\");","defineSymbol(math, ams, bin, \"\\u22cf\", \"\\\\curlywedge\");","defineSymbol(math, ams, bin, \"\\u22ce\", \"\\\\curlyvee\");","defineSymbol(math, ams, bin, \"\\u229d\", \"\\\\circleddash\");","defineSymbol(math, ams, bin, \"\\u229b\", \"\\\\circledast\");","defineSymbol(math, ams, bin, \"\\u22c5\", \"\\\\centerdot\");","defineSymbol(math, ams, bin, \"\\u22ba\", \"\\\\intercal\");","defineSymbol(math, ams, bin, \"\\u22d2\", \"\\\\doublecap\");","defineSymbol(math, ams, bin, \"\\u22d3\", \"\\\\doublecup\");","defineSymbol(math, ams, bin, \"\\u22a0\", \"\\\\boxtimes\");","","// AMS Arrows","defineSymbol(math, ams, rel, \"\\u21e2\", \"\\\\dashrightarrow\");","defineSymbol(math, ams, rel, \"\\u21e0\", \"\\\\dashleftarrow\");","defineSymbol(math, ams, rel, \"\\u21c7\", \"\\\\leftleftarrows\");","defineSymbol(math, ams, rel, \"\\u21c6\", \"\\\\leftrightarrows\");","defineSymbol(math, ams, rel, \"\\u21da\", \"\\\\Lleftarrow\");","defineSymbol(math, ams, rel, \"\\u219e\", \"\\\\twoheadleftarrow\");","defineSymbol(math, ams, rel, \"\\u21a2\", \"\\\\leftarrowtail\");","defineSymbol(math, ams, rel, \"\\u21ab\", \"\\\\looparrowleft\");","defineSymbol(math, ams, rel, \"\\u21cb\", \"\\\\leftrightharpoons\");","defineSymbol(math, ams, rel, \"\\u21b6\", \"\\\\curvearrowleft\");","defineSymbol(math, ams, rel, \"\\u21ba\", \"\\\\circlearrowleft\");","defineSymbol(math, ams, rel, \"\\u21b0\", \"\\\\Lsh\");","defineSymbol(math, ams, rel, \"\\u21c8\", \"\\\\upuparrows\");","defineSymbol(math, ams, rel, \"\\u21bf\", \"\\\\upharpoonleft\");","defineSymbol(math, ams, rel, \"\\u21c3\", \"\\\\downharpoonleft\");","defineSymbol(math, ams, rel, \"\\u22b8\", \"\\\\multimap\");","defineSymbol(math, ams, rel, \"\\u21ad\", \"\\\\leftrightsquigarrow\");","defineSymbol(math, ams, rel, \"\\u21c9\", \"\\\\rightrightarrows\");","defineSymbol(math, ams, rel, \"\\u21c4\", \"\\\\rightleftarrows\");","defineSymbol(math, ams, rel, \"\\u21a0\", \"\\\\twoheadrightarrow\");","defineSymbol(math, ams, rel, \"\\u21a3\", \"\\\\rightarrowtail\");","defineSymbol(math, ams, rel, \"\\u21ac\", \"\\\\looparrowright\");","defineSymbol(math, ams, rel, \"\\u21b7\", \"\\\\curvearrowright\");","defineSymbol(math, ams, rel, \"\\u21bb\", \"\\\\circlearrowright\");","defineSymbol(math, ams, rel, \"\\u21b1\", \"\\\\Rsh\");","defineSymbol(math, ams, rel, \"\\u21ca\", \"\\\\downdownarrows\");","defineSymbol(math, ams, rel, \"\\u21be\", \"\\\\upharpoonright\");","defineSymbol(math, ams, rel, \"\\u21c2\", \"\\\\downharpoonright\");","defineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\rightsquigarrow\");","defineSymbol(math, ams, rel, \"\\u21dd\", \"\\\\leadsto\");","defineSymbol(math, ams, rel, \"\\u21db\", \"\\\\Rrightarrow\");","defineSymbol(math, ams, rel, \"\\u21be\", \"\\\\restriction\");","","defineSymbol(math, main, textord, \"\\u2018\", \"`\");","defineSymbol(math, main, textord, \"$\", \"\\\\$\");","defineSymbol(text, main, textord, \"$\", \"\\\\$\");","defineSymbol(math, main, textord, \"%\", \"\\\\%\");","defineSymbol(text, main, textord, \"%\", \"\\\\%\");","defineSymbol(math, main, textord, \"_\", \"\\\\_\");","defineSymbol(text, main, textord, \"_\", \"\\\\_\");","defineSymbol(math, main, textord, \"\\u2220\", \"\\\\angle\");","defineSymbol(math, main, textord, \"\\u221e\", \"\\\\infty\");","defineSymbol(math, main, textord, \"\\u2032\", \"\\\\prime\");","defineSymbol(math, main, textord, \"\\u25b3\", \"\\\\triangle\");","defineSymbol(math, main, textord, \"\\u0393\", \"\\\\Gamma\");","defineSymbol(math, main, textord, \"\\u0394\", \"\\\\Delta\");","defineSymbol(math, main, textord, \"\\u0398\", \"\\\\Theta\");","defineSymbol(math, main, textord, \"\\u039b\", \"\\\\Lambda\");","defineSymbol(math, main, textord, \"\\u039e\", \"\\\\Xi\");","defineSymbol(math, main, textord, \"\\u03a0\", \"\\\\Pi\");","defineSymbol(math, main, textord, \"\\u03a3\", \"\\\\Sigma\");","defineSymbol(math, main, textord, \"\\u03a5\", \"\\\\Upsilon\");","defineSymbol(math, main, textord, \"\\u03a6\", \"\\\\Phi\");","defineSymbol(math, main, textord, \"\\u03a8\", \"\\\\Psi\");","defineSymbol(math, main, textord, \"\\u03a9\", \"\\\\Omega\");","defineSymbol(math, main, textord, \"\\u00ac\", \"\\\\neg\");","defineSymbol(math, main, textord, \"\\u00ac\", \"\\\\lnot\");","defineSymbol(math, main, textord, \"\\u22a4\", \"\\\\top\");","defineSymbol(math, main, textord, \"\\u22a5\", \"\\\\bot\");","defineSymbol(math, main, textord, \"\\u2205\", \"\\\\emptyset\");","defineSymbol(math, ams, textord, \"\\u2205\", \"\\\\varnothing\");","defineSymbol(math, main, mathord, \"\\u03b1\", \"\\\\alpha\");","defineSymbol(math, main, mathord, \"\\u03b2\", \"\\\\beta\");","defineSymbol(math, main, mathord, \"\\u03b3\", \"\\\\gamma\");","defineSymbol(math, main, mathord, \"\\u03b4\", \"\\\\delta\");","defineSymbol(math, main, mathord, \"\\u03f5\", \"\\\\epsilon\");","defineSymbol(math, main, mathord, \"\\u03b6\", \"\\\\zeta\");","defineSymbol(math, main, mathord, \"\\u03b7\", \"\\\\eta\");","defineSymbol(math, main, mathord, \"\\u03b8\", \"\\\\theta\");","defineSymbol(math, main, mathord, \"\\u03b9\", \"\\\\iota\");","defineSymbol(math, main, mathord, \"\\u03ba\", \"\\\\kappa\");","defineSymbol(math, main, mathord, \"\\u03bb\", \"\\\\lambda\");","defineSymbol(math, main, mathord, \"\\u03bc\", \"\\\\mu\");","defineSymbol(math, main, mathord, \"\\u03bd\", \"\\\\nu\");","defineSymbol(math, main, mathord, \"\\u03be\", \"\\\\xi\");","defineSymbol(math, main, mathord, \"o\", \"\\\\omicron\");","defineSymbol(math, main, mathord, \"\\u03c0\", \"\\\\pi\");","defineSymbol(math, main, mathord, \"\\u03c1\", \"\\\\rho\");","defineSymbol(math, main, mathord, \"\\u03c3\", \"\\\\sigma\");","defineSymbol(math, main, mathord, \"\\u03c4\", \"\\\\tau\");","defineSymbol(math, main, mathord, \"\\u03c5\", \"\\\\upsilon\");","defineSymbol(math, main, mathord, \"\\u03d5\", \"\\\\phi\");","defineSymbol(math, main, mathord, \"\\u03c7\", \"\\\\chi\");","defineSymbol(math, main, mathord, \"\\u03c8\", \"\\\\psi\");","defineSymbol(math, main, mathord, \"\\u03c9\", \"\\\\omega\");","defineSymbol(math, main, mathord, \"\\u03b5\", \"\\\\varepsilon\");","defineSymbol(math, main, mathord, \"\\u03d1\", \"\\\\vartheta\");","defineSymbol(math, main, mathord, \"\\u03d6\", \"\\\\varpi\");","defineSymbol(math, main, mathord, \"\\u03f1\", \"\\\\varrho\");","defineSymbol(math, main, mathord, \"\\u03c2\", \"\\\\varsigma\");","defineSymbol(math, main, mathord, \"\\u03c6\", \"\\\\varphi\");","defineSymbol(math, main, bin, \"\\u2217\", \"*\");","defineSymbol(math, main, bin, \"+\", \"+\");","defineSymbol(math, main, bin, \"\\u2212\", \"-\");","defineSymbol(math, main, bin, \"\\u22c5\", \"\\\\cdot\");","defineSymbol(math, main, bin, \"\\u2218\", \"\\\\circ\");","defineSymbol(math, main, bin, \"\\u00f7\", \"\\\\div\");","defineSymbol(math, main, bin, \"\\u00b1\", \"\\\\pm\");","defineSymbol(math, main, bin, \"\\u00d7\", \"\\\\times\");","defineSymbol(math, main, bin, \"\\u2229\", \"\\\\cap\");","defineSymbol(math, main, bin, \"\\u222a\", \"\\\\cup\");","defineSymbol(math, main, bin, \"\\u2216\", \"\\\\setminus\");","defineSymbol(math, main, bin, \"\\u2227\", \"\\\\land\");","defineSymbol(math, main, bin, \"\\u2228\", \"\\\\lor\");","defineSymbol(math, main, bin, \"\\u2227\", \"\\\\wedge\");","defineSymbol(math, main, bin, \"\\u2228\", \"\\\\vee\");","defineSymbol(math, main, textord, \"\\u221a\", \"\\\\surd\");","defineSymbol(math, main, open, \"(\", \"(\");","defineSymbol(math, main, open, \"[\", \"[\");","defineSymbol(math, main, open, \"\\u27e8\", \"\\\\langle\");","defineSymbol(math, main, open, \"\\u2223\", \"\\\\lvert\");","defineSymbol(math, main, open, \"\\u2225\", \"\\\\lVert\");","defineSymbol(math, main, close, \")\", \")\");","defineSymbol(math, main, close, \"]\", \"]\");","defineSymbol(math, main, close, \"?\", \"?\");","defineSymbol(math, main, close, \"!\", \"!\");","defineSymbol(math, main, close, \"\\u27e9\", \"\\\\rangle\");","defineSymbol(math, main, close, \"\\u2223\", \"\\\\rvert\");","defineSymbol(math, main, close, \"\\u2225\", \"\\\\rVert\");","defineSymbol(math, main, rel, \"=\", \"=\");","defineSymbol(math, main, rel, \"<\", \"<\");","defineSymbol(math, main, rel, \">\", \">\");","defineSymbol(math, main, rel, \":\", \":\");","defineSymbol(math, main, rel, \"\\u2248\", \"\\\\approx\");","defineSymbol(math, main, rel, \"\\u2245\", \"\\\\cong\");","defineSymbol(math, main, rel, \"\\u2265\", \"\\\\ge\");","defineSymbol(math, main, rel, \"\\u2265\", \"\\\\geq\");","defineSymbol(math, main, rel, \"\\u2190\", \"\\\\gets\");","defineSymbol(math, main, rel, \">\", \"\\\\gt\");","defineSymbol(math, main, rel, \"\\u2208\", \"\\\\in\");","defineSymbol(math, main, rel, \"\\u2209\", \"\\\\notin\");","defineSymbol(math, main, rel, \"\\u2282\", \"\\\\subset\");","defineSymbol(math, main, rel, \"\\u2283\", \"\\\\supset\");","defineSymbol(math, main, rel, \"\\u2286\", \"\\\\subseteq\");","defineSymbol(math, main, rel, \"\\u2287\", \"\\\\supseteq\");","defineSymbol(math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\");","defineSymbol(math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\");","defineSymbol(math, main, rel, \"\\u22a8\", \"\\\\models\");","defineSymbol(math, main, rel, \"\\u2190\", \"\\\\leftarrow\");","defineSymbol(math, main, rel, \"\\u2264\", \"\\\\le\");","defineSymbol(math, main, rel, \"\\u2264\", \"\\\\leq\");","defineSymbol(math, main, rel, \"<\", \"\\\\lt\");","defineSymbol(math, main, rel, \"\\u2260\", \"\\\\ne\");","defineSymbol(math, main, rel, \"\\u2260\", \"\\\\neq\");","defineSymbol(math, main, rel, \"\\u2192\", \"\\\\rightarrow\");","defineSymbol(math, main, rel, \"\\u2192\", \"\\\\to\");","defineSymbol(math, ams, rel, \"\\u2271\", \"\\\\ngeq\");","defineSymbol(math, ams, rel, \"\\u2270\", \"\\\\nleq\");","defineSymbol(math, main, spacing, null, \"\\\\!\");","defineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\ \");","defineSymbol(math, main, spacing, \"\\u00a0\", \"~\");","defineSymbol(math, main, spacing, null, \"\\\\,\");","defineSymbol(math, main, spacing, null, \"\\\\:\");","defineSymbol(math, main, spacing, null, \"\\\\;\");","defineSymbol(math, main, spacing, null, \"\\\\enspace\");","defineSymbol(math, main, spacing, null, \"\\\\qquad\");","defineSymbol(math, main, spacing, null, \"\\\\quad\");","defineSymbol(math, main, spacing, \"\\u00a0\", \"\\\\space\");","defineSymbol(math, main, punct, \",\", \",\");","defineSymbol(math, main, punct, \";\", \";\");","defineSymbol(math, main, punct, \":\", \"\\\\colon\");","defineSymbol(math, ams, bin, \"\\u22bc\", \"\\\\barwedge\");","defineSymbol(math, ams, bin, \"\\u22bb\", \"\\\\veebar\");","defineSymbol(math, main, bin, \"\\u2299\", \"\\\\odot\");","defineSymbol(math, main, bin, \"\\u2295\", \"\\\\oplus\");","defineSymbol(math, main, bin, \"\\u2297\", \"\\\\otimes\");","defineSymbol(math, main, textord, \"\\u2202\", \"\\\\partial\");","defineSymbol(math, main, bin, \"\\u2298\", \"\\\\oslash\");","defineSymbol(math, ams, bin, \"\\u229a\", \"\\\\circledcirc\");","defineSymbol(math, ams, bin, \"\\u22a1\", \"\\\\boxdot\");","defineSymbol(math, main, bin, \"\\u25b3\", \"\\\\bigtriangleup\");","defineSymbol(math, main, bin, \"\\u25bd\", \"\\\\bigtriangledown\");","defineSymbol(math, main, bin, \"\\u2020\", \"\\\\dagger\");","defineSymbol(math, main, bin, \"\\u22c4\", \"\\\\diamond\");","defineSymbol(math, main, bin, \"\\u22c6\", \"\\\\star\");","defineSymbol(math, main, bin, \"\\u25c3\", \"\\\\triangleleft\");","defineSymbol(math, main, bin, \"\\u25b9\", \"\\\\triangleright\");","defineSymbol(math, main, open, \"{\", \"\\\\{\");","defineSymbol(text, main, textord, \"{\", \"\\\\{\");","defineSymbol(math, main, close, \"}\", \"\\\\}\");","defineSymbol(text, main, textord, \"}\", \"\\\\}\");","defineSymbol(math, main, open, \"{\", \"\\\\lbrace\");","defineSymbol(math, main, close, \"}\", \"\\\\rbrace\");","defineSymbol(math, main, open, \"[\", \"\\\\lbrack\");","defineSymbol(math, main, close, \"]\", \"\\\\rbrack\");","defineSymbol(math, main, open, \"\\u230a\", \"\\\\lfloor\");","defineSymbol(math, main, close, \"\\u230b\", \"\\\\rfloor\");","defineSymbol(math, main, open, \"\\u2308\", \"\\\\lceil\");","defineSymbol(math, main, close, \"\\u2309\", \"\\\\rceil\");","defineSymbol(math, main, textord, \"\\\\\", \"\\\\backslash\");","defineSymbol(math, main, textord, \"\\u2223\", \"|\");","defineSymbol(math, main, textord, \"\\u2223\", \"\\\\vert\");","defineSymbol(math, main, textord, \"\\u2225\", \"\\\\|\");","defineSymbol(math, main, textord, \"\\u2225\", \"\\\\Vert\");","defineSymbol(math, main, rel, \"\\u2191\", \"\\\\uparrow\");","defineSymbol(math, main, rel, \"\\u21d1\", \"\\\\Uparrow\");","defineSymbol(math, main, rel, \"\\u2193\", \"\\\\downarrow\");","defineSymbol(math, main, rel, \"\\u21d3\", \"\\\\Downarrow\");","defineSymbol(math, main, rel, \"\\u2195\", \"\\\\updownarrow\");","defineSymbol(math, main, rel, \"\\u21d5\", \"\\\\Updownarrow\");","defineSymbol(math, math, op, \"\\u2210\", \"\\\\coprod\");","defineSymbol(math, math, op, \"\\u22c1\", \"\\\\bigvee\");","defineSymbol(math, math, op, \"\\u22c0\", \"\\\\bigwedge\");","defineSymbol(math, math, op, \"\\u2a04\", \"\\\\biguplus\");","defineSymbol(math, math, op, \"\\u22c2\", \"\\\\bigcap\");","defineSymbol(math, math, op, \"\\u22c3\", \"\\\\bigcup\");","defineSymbol(math, math, op, \"\\u222b\", \"\\\\int\");","defineSymbol(math, math, op, \"\\u222b\", \"\\\\intop\");","defineSymbol(math, math, op, \"\\u222c\", \"\\\\iint\");","defineSymbol(math, math, op, \"\\u222d\", \"\\\\iiint\");","defineSymbol(math, math, op, \"\\u220f\", \"\\\\prod\");","defineSymbol(math, math, op, \"\\u2211\", \"\\\\sum\");","defineSymbol(math, math, op, \"\\u2a02\", \"\\\\bigotimes\");","defineSymbol(math, math, op, \"\\u2a01\", \"\\\\bigoplus\");","defineSymbol(math, math, op, \"\\u2a00\", \"\\\\bigodot\");","defineSymbol(math, math, op, \"\\u222e\", \"\\\\oint\");","defineSymbol(math, math, op, \"\\u2a06\", \"\\\\bigsqcup\");","defineSymbol(math, math, op, \"\\u222b\", \"\\\\smallint\");","defineSymbol(text, main, inner, \"\\u2026\", \"\\\\textellipsis\");","defineSymbol(math, main, inner, \"\\u2026\", \"\\\\mathellipsis\");","defineSymbol(text, main, inner, \"\\u2026\", \"\\\\ldots\");","defineSymbol(math, main, inner, \"\\u2026\", \"\\\\ldots\");","defineSymbol(math, main, inner, \"\\u22ef\", \"\\\\cdots\");","defineSymbol(math, main, inner, \"\\u22f1\", \"\\\\ddots\");","defineSymbol(math, main, textord, \"\\u22ee\", \"\\\\vdots\");","defineSymbol(math, main, accent, \"\\u00b4\", \"\\\\acute\");","defineSymbol(math, main, accent, \"\\u0060\", \"\\\\grave\");","defineSymbol(math, main, accent, \"\\u00a8\", \"\\\\ddot\");","defineSymbol(math, main, accent, \"\\u007e\", \"\\\\tilde\");","defineSymbol(math, main, accent, \"\\u00af\", \"\\\\bar\");","defineSymbol(math, main, accent, \"\\u02d8\", \"\\\\breve\");","defineSymbol(math, main, accent, \"\\u02c7\", \"\\\\check\");","defineSymbol(math, main, accent, \"\\u005e\", \"\\\\hat\");","defineSymbol(math, main, accent, \"\\u20d7\", \"\\\\vec\");","defineSymbol(math, main, accent, \"\\u02d9\", \"\\\\dot\");","defineSymbol(math, main, mathord, \"\\u0131\", \"\\\\imath\");","defineSymbol(math, main, mathord, \"\\u0237\", \"\\\\jmath\");","","defineSymbol(text, main, textord, \"\\u2013\", \"--\");","defineSymbol(text, main, textord, \"\\u2014\", \"---\");","defineSymbol(text, main, textord, \"\\u2018\", \"`\");","defineSymbol(text, main, textord, \"\\u2019\", \"'\");","defineSymbol(text, main, textord, \"\\u201c\", \"``\");","defineSymbol(text, main, textord, \"\\u201d\", \"''\");","defineSymbol(math, main, textord, \"\\u00b0\", \"\\\\degree\");","defineSymbol(text, main, textord, \"\\u00b0\", \"\\\\degree\");","defineSymbol(math, main, mathord, \"\\u00a3\", \"\\\\pounds\");","defineSymbol(math, ams, textord, \"\\u2720\", \"\\\\maltese\");","defineSymbol(text, ams, textord, \"\\u2720\", \"\\\\maltese\");","","defineSymbol(text, main, spacing, \"\\u00a0\", \"\\\\ \");","defineSymbol(text, main, spacing, \"\\u00a0\", \" \");","defineSymbol(text, main, spacing, \"\\u00a0\", \"~\");","","// There are lots of symbols which are the same, so we add them in afterwards.","var i;","var ch;","","// All of these are textords in math mode","var mathTextSymbols = \"0123456789/@.\\\"\";","for (i = 0; i < mathTextSymbols.length; i++) {","    ch = mathTextSymbols.charAt(i);","    defineSymbol(math, main, textord, ch, ch);","}","","// All of these are textords in text mode","var textSymbols = \"0123456789!@*()-=+[]\\\";:?/.,\";","for (i = 0; i < textSymbols.length; i++) {","    ch = textSymbols.charAt(i);","    defineSymbol(text, main, textord, ch, ch);","}","","// All of these are textords in text mode, and mathords in math mode","var letters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";","for (i = 0; i < letters.length; i++) {","    ch = letters.charAt(i);","    defineSymbol(math, main, mathord, ch, ch);","    defineSymbol(text, main, textord, ch, ch);","}","","// Latin-1 letters","for (i = 0x00C0; i <= 0x00D6; i++) {","    ch = String.fromCharCode(i);","    defineSymbol(text, main, textord, ch, ch);","}","","for (i = 0x00D8; i <= 0x00F6; i++) {","    ch = String.fromCharCode(i);","    defineSymbol(text, main, textord, ch, ch);","}","","for (i = 0x00F8; i <= 0x00FF; i++) {","    ch = String.fromCharCode(i);","    defineSymbol(text, main, textord, ch, ch);","}","","// Cyrillic","for (i = 0x0410; i <= 0x044F; i++) {","    ch = String.fromCharCode(i);","    defineSymbol(text, main, textord, ch, ch);","}","","// Unicode versions of existing characters","defineSymbol(text, main, textord, \"\\u2013\", \"–\");","defineSymbol(text, main, textord, \"\\u2014\", \"—\");","defineSymbol(text, main, textord, \"\\u2018\", \"‘\");","defineSymbol(text, main, textord, \"\\u2019\", \"’\");","defineSymbol(text, main, textord, \"\\u201c\", \"“\");","defineSymbol(text, main, textord, \"\\u201d\", \"”\");",""],"l":{"19":1,"24":1,"25":802,"36":1,"37":1,"40":1,"41":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":1,"73":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1,"80":1,"81":1,"82":1,"85":1,"86":1,"89":1,"90":1,"91":1,"92":1,"93":1,"94":1,"95":1,"96":1,"97":1,"98":1,"99":1,"100":1,"101":1,"102":1,"103":1,"104":1,"105":1,"106":1,"107":1,"108":1,"111":1,"112":1,"115":1,"116":1,"117":1,"118":1,"121":1,"122":1,"123":1,"124":1,"125":1,"126":1,"127":1,"128":1,"129":1,"130":1,"131":1,"134":1,"135":1,"136":1,"137":1,"138":1,"139":1,"140":1,"141":1,"142":1,"143":1,"144":1,"145":1,"146":1,"147":1,"148":1,"149":1,"150":1,"151":1,"152":1,"153":1,"154":1,"155":1,"156":1,"159":1,"160":1,"161":1,"162":1,"163":1,"164":1,"165":1,"166":1,"167":1,"168":1,"169":1,"170":1,"171":1,"172":1,"173":1,"174":1,"175":1,"176":1,"177":1,"178":1,"179":1,"180":1,"181":1,"182":1,"183":1,"184":1,"185":1,"186":1,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1,"196":1,"197":1,"198":1,"199":1,"200":1,"201":1,"202":1,"203":1,"204":1,"205":1,"206":1,"207":1,"208":1,"209":1,"210":1,"213":1,"214":1,"215":1,"216":1,"217":1,"218":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":1,"235":1,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"251":1,"252":1,"253":1,"256":1,"257":1,"260":1,"261":1,"262":1,"263":1,"266":1,"267":1,"268":1,"269":1,"270":1,"271":1,"272":1,"273":1,"274":1,"275":1,"276":1,"277":1,"278":1,"279":1,"280":1,"281":1,"282":1,"283":1,"284":1,"285":1,"286":1,"287":1,"288":1,"289":1,"290":1,"291":1,"292":1,"293":1,"294":1,"295":1,"296":1,"297":1,"298":1,"299":1,"300":1,"301":1,"302":1,"303":1,"304":1,"305":1,"306":1,"307":1,"308":1,"309":1,"310":1,"311":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"320":1,"321":1,"322":1,"323":1,"324":1,"325":1,"326":1,"327":1,"328":1,"329":1,"330":1,"331":1,"332":1,"333":1,"334":1,"335":1,"336":1,"337":1,"338":1,"341":1,"342":1,"343":1,"344":1,"345":1,"346":1,"347":1,"348":1,"349":1,"350":1,"351":1,"352":1,"353":1,"354":1,"355":1,"356":1,"357":1,"358":1,"359":1,"360":1,"361":1,"364":1,"365":1,"366":1,"367":1,"368":1,"369":1,"370":1,"371":1,"372":1,"373":1,"374":1,"375":1,"376":1,"377":1,"378":1,"379":1,"380":1,"381":1,"382":1,"383":1,"384":1,"385":1,"386":1,"387":1,"388":1,"389":1,"390":1,"391":1,"392":1,"393":1,"394":1,"395":1,"397":1,"398":1,"399":1,"400":1,"401":1,"402":1,"403":1,"404":1,"405":1,"406":1,"407":1,"408":1,"409":1,"410":1,"411":1,"412":1,"413":1,"414":1,"415":1,"416":1,"417":1,"418":1,"419":1,"420":1,"421":1,"422":1,"423":1,"424":1,"425":1,"426":1,"427":1,"428":1,"429":1,"430":1,"431":1,"432":1,"433":1,"434":1,"435":1,"436":1,"437":1,"438":1,"439":1,"440":1,"441":1,"442":1,"443":1,"444":1,"445":1,"446":1,"447":1,"448":1,"449":1,"450":1,"451":1,"452":1,"453":1,"454":1,"455":1,"456":1,"457":1,"458":1,"459":1,"460":1,"461":1,"462":1,"463":1,"464":1,"465":1,"466":1,"467":1,"468":1,"469":1,"470":1,"471":1,"472":1,"473":1,"474":1,"475":1,"476":1,"477":1,"478":1,"479":1,"480":1,"481":1,"482":1,"483":1,"484":1,"485":1,"486":1,"487":1,"488":1,"489":1,"490":1,"491":1,"492":1,"493":1,"494":1,"495":1,"496":1,"497":1,"498":1,"499":1,"500":1,"501":1,"502":1,"503":1,"504":1,"505":1,"506":1,"507":1,"508":1,"509":1,"510":1,"511":1,"512":1,"513":1,"514":1,"515":1,"516":1,"517":1,"518":1,"519":1,"520":1,"521":1,"522":1,"523":1,"524":1,"525":1,"526":1,"527":1,"528":1,"529":1,"530":1,"531":1,"532":1,"533":1,"534":1,"535":1,"536":1,"537":1,"538":1,"539":1,"540":1,"541":1,"542":1,"543":1,"544":1,"545":1,"546":1,"547":1,"548":1,"549":1,"550":1,"551":1,"552":1,"553":1,"554":1,"555":1,"556":1,"557":1,"558":1,"559":1,"560":1,"561":1,"562":1,"563":1,"564":1,"565":1,"566":1,"567":1,"568":1,"569":1,"570":1,"571":1,"572":1,"573":1,"574":1,"575":1,"576":1,"577":1,"578":1,"579":1,"580":1,"581":1,"582":1,"583":1,"584":1,"585":1,"586":1,"587":1,"588":1,"589":1,"590":1,"591":1,"592":1,"593":1,"594":1,"595":1,"596":1,"597":1,"598":1,"599":1,"600":1,"602":1,"603":1,"604":1,"605":1,"606":1,"607":1,"608":1,"609":1,"610":1,"611":1,"612":1,"614":1,"615":1,"616":1,"619":1,"620":1,"623":1,"624":1,"625":14,"626":14,"630":1,"631":1,"632":27,"633":27,"637":1,"638":1,"639":52,"640":52,"641":52,"645":1,"646":23,"647":23,"650":1,"651":31,"652":31,"655":1,"656":8,"657":8,"661":1,"662":64,"663":64,"667":1,"668":1,"669":1,"670":1,"671":1,"672":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/delimiter.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/delimiter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":1,"179":1,"180":1,"181":1,"182":1,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":1,"194":1,"195":1,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":1,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":37,"loc":{"start":{"line":37,"column":17},"end":{"line":37,"column":40}}},"2":{"name":"(anonymous_2)","line":50,"loc":{"start":{"line":50,"column":17},"end":{"line":50,"column":54}}},"3":{"name":"(anonymous_3)","line":59,"loc":{"start":{"line":59,"column":16},"end":{"line":59,"column":59}}},"4":{"name":"(anonymous_4)","line":79,"loc":{"start":{"line":79,"column":21},"end":{"line":79,"column":76}}},"5":{"name":"(anonymous_5)","line":101,"loc":{"start":{"line":101,"column":21},"end":{"line":101,"column":75}}},"6":{"name":"(anonymous_6)","line":124,"loc":{"start":{"line":124,"column":16},"end":{"line":124,"column":45}}},"7":{"name":"(anonymous_7)","line":146,"loc":{"start":{"line":146,"column":23},"end":{"line":147,"column":41}}},"8":{"name":"(anonymous_8)","line":359,"loc":{"start":{"line":359,"column":21},"end":{"line":359,"column":67}}},"9":{"name":"(anonymous_9)","line":426,"loc":{"start":{"line":426,"column":22},"end":{"line":426,"column":37}}},"10":{"name":"(anonymous_10)","line":440,"loc":{"start":{"line":440,"column":23},"end":{"line":440,"column":66}}},"11":{"name":"(anonymous_11)","line":476,"loc":{"start":{"line":476,"column":27},"end":{"line":477,"column":45}}},"12":{"name":"(anonymous_12)","line":514,"loc":{"start":{"line":514,"column":25},"end":{"line":515,"column":43}}}},"statementMap":{"1":{"start":{"line":23,"column":0},"end":{"line":23,"column":41}},"2":{"start":{"line":24,"column":0},"end":{"line":24,"column":31}},"3":{"start":{"line":26,"column":0},"end":{"line":26,"column":43}},"4":{"start":{"line":27,"column":0},"end":{"line":27,"column":43}},"5":{"start":{"line":28,"column":0},"end":{"line":28,"column":35}},"6":{"start":{"line":29,"column":0},"end":{"line":29,"column":31}},"7":{"start":{"line":31,"column":0},"end":{"line":31,"column":36}},"8":{"start":{"line":37,"column":0},"end":{"line":45,"column":2}},"9":{"start":{"line":38,"column":4},"end":{"line":44,"column":5}},"10":{"start":{"line":39,"column":8},"end":{"line":40,"column":48}},"11":{"start":{"line":42,"column":8},"end":{"line":43,"column":26}},"12":{"start":{"line":50,"column":0},"end":{"line":53,"column":2}},"13":{"start":{"line":51,"column":4},"end":{"line":52,"column":23}},"14":{"start":{"line":59,"column":0},"end":{"line":72,"column":2}},"15":{"start":{"line":60,"column":4},"end":{"line":60,"column":28}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":26}},"17":{"start":{"line":65,"column":4},"end":{"line":65,"column":75}},"18":{"start":{"line":67,"column":4},"end":{"line":67,"column":30}},"19":{"start":{"line":68,"column":4},"end":{"line":68,"column":29}},"20":{"start":{"line":69,"column":4},"end":{"line":69,"column":46}},"21":{"start":{"line":71,"column":4},"end":{"line":71,"column":16}},"22":{"start":{"line":79,"column":0},"end":{"line":95,"column":2}},"23":{"start":{"line":80,"column":4},"end":{"line":80,"column":76}},"24":{"start":{"line":82,"column":4},"end":{"line":82,"column":56}},"25":{"start":{"line":84,"column":4},"end":{"line":92,"column":5}},"26":{"start":{"line":85,"column":8},"end":{"line":87,"column":45}},"27":{"start":{"line":89,"column":8},"end":{"line":89,"column":38}},"28":{"start":{"line":90,"column":8},"end":{"line":90,"column":29}},"29":{"start":{"line":91,"column":8},"end":{"line":91,"column":28}},"30":{"start":{"line":94,"column":4},"end":{"line":94,"column":16}},"31":{"start":{"line":101,"column":0},"end":{"line":118,"column":2}},"32":{"start":{"line":102,"column":4},"end":{"line":102,"column":55}},"33":{"start":{"line":104,"column":4},"end":{"line":106,"column":38}},"34":{"start":{"line":108,"column":4},"end":{"line":115,"column":5}},"35":{"start":{"line":109,"column":8},"end":{"line":110,"column":45}},"36":{"start":{"line":112,"column":8},"end":{"line":112,"column":38}},"37":{"start":{"line":113,"column":8},"end":{"line":113,"column":29}},"38":{"start":{"line":114,"column":8},"end":{"line":114,"column":28}},"39":{"start":{"line":117,"column":4},"end":{"line":117,"column":16}},"40":{"start":{"line":124,"column":0},"end":{"line":140,"column":2}},"41":{"start":{"line":125,"column":4},"end":{"line":125,"column":18}},"42":{"start":{"line":127,"column":4},"end":{"line":131,"column":5}},"43":{"start":{"line":128,"column":8},"end":{"line":128,"column":34}},"44":{"start":{"line":129,"column":11},"end":{"line":131,"column":5}},"45":{"start":{"line":130,"column":8},"end":{"line":130,"column":34}},"46":{"start":{"line":133,"column":4},"end":{"line":135,"column":70}},"47":{"start":{"line":139,"column":4},"end":{"line":139,"column":39}},"48":{"start":{"line":146,"column":0},"end":{"line":326,"column":2}},"49":{"start":{"line":150,"column":4},"end":{"line":150,"column":12}},"50":{"start":{"line":151,"column":4},"end":{"line":151,"column":15}},"51":{"start":{"line":152,"column":4},"end":{"line":152,"column":15}},"52":{"start":{"line":153,"column":4},"end":{"line":153,"column":15}},"53":{"start":{"line":154,"column":4},"end":{"line":154,"column":34}},"54":{"start":{"line":155,"column":4},"end":{"line":155,"column":18}},"55":{"start":{"line":157,"column":4},"end":{"line":157,"column":31}},"56":{"start":{"line":162,"column":4},"end":{"line":251,"column":5}},"57":{"start":{"line":163,"column":8},"end":{"line":163,"column":35}},"58":{"start":{"line":164,"column":11},"end":{"line":251,"column":5}},"59":{"start":{"line":165,"column":8},"end":{"line":165,"column":35}},"60":{"start":{"line":166,"column":11},"end":{"line":251,"column":5}},"61":{"start":{"line":167,"column":8},"end":{"line":167,"column":32}},"62":{"start":{"line":168,"column":11},"end":{"line":251,"column":5}},"63":{"start":{"line":169,"column":8},"end":{"line":169,"column":32}},"64":{"start":{"line":170,"column":11},"end":{"line":251,"column":5}},"65":{"start":{"line":171,"column":8},"end":{"line":171,"column":26}},"66":{"start":{"line":172,"column":8},"end":{"line":172,"column":26}},"67":{"start":{"line":173,"column":8},"end":{"line":173,"column":31}},"68":{"start":{"line":174,"column":11},"end":{"line":251,"column":5}},"69":{"start":{"line":175,"column":8},"end":{"line":175,"column":26}},"70":{"start":{"line":176,"column":8},"end":{"line":176,"column":26}},"71":{"start":{"line":177,"column":8},"end":{"line":177,"column":31}},"72":{"start":{"line":178,"column":11},"end":{"line":251,"column":5}},"73":{"start":{"line":179,"column":8},"end":{"line":179,"column":23}},"74":{"start":{"line":180,"column":8},"end":{"line":180,"column":26}},"75":{"start":{"line":181,"column":8},"end":{"line":181,"column":26}},"76":{"start":{"line":182,"column":8},"end":{"line":182,"column":31}},"77":{"start":{"line":183,"column":11},"end":{"line":251,"column":5}},"78":{"start":{"line":184,"column":8},"end":{"line":184,"column":23}},"79":{"start":{"line":185,"column":8},"end":{"line":185,"column":26}},"80":{"start":{"line":186,"column":8},"end":{"line":186,"column":26}},"81":{"start":{"line":187,"column":8},"end":{"line":187,"column":31}},"82":{"start":{"line":188,"column":11},"end":{"line":251,"column":5}},"83":{"start":{"line":189,"column":8},"end":{"line":189,"column":32}},"84":{"start":{"line":190,"column":8},"end":{"line":190,"column":26}},"85":{"start":{"line":191,"column":8},"end":{"line":191,"column":31}},"86":{"start":{"line":192,"column":11},"end":{"line":251,"column":5}},"87":{"start":{"line":193,"column":8},"end":{"line":193,"column":23}},"88":{"start":{"line":194,"column":8},"end":{"line":194,"column":35}},"89":{"start":{"line":195,"column":8},"end":{"line":195,"column":31}},"90":{"start":{"line":196,"column":11},"end":{"line":251,"column":5}},"91":{"start":{"line":197,"column":8},"end":{"line":197,"column":32}},"92":{"start":{"line":198,"column":8},"end":{"line":198,"column":26}},"93":{"start":{"line":199,"column":8},"end":{"line":199,"column":31}},"94":{"start":{"line":200,"column":11},"end":{"line":251,"column":5}},"95":{"start":{"line":201,"column":8},"end":{"line":201,"column":23}},"96":{"start":{"line":202,"column":8},"end":{"line":202,"column":35}},"97":{"start":{"line":203,"column":8},"end":{"line":203,"column":31}},"98":{"start":{"line":204,"column":11},"end":{"line":251,"column":5}},"99":{"start":{"line":205,"column":8},"end":{"line":205,"column":23}},"100":{"start":{"line":206,"column":8},"end":{"line":206,"column":26}},"101":{"start":{"line":207,"column":8},"end":{"line":207,"column":26}},"102":{"start":{"line":208,"column":8},"end":{"line":208,"column":31}},"103":{"start":{"line":209,"column":11},"end":{"line":251,"column":5}},"104":{"start":{"line":210,"column":8},"end":{"line":210,"column":23}},"105":{"start":{"line":211,"column":8},"end":{"line":211,"column":26}},"106":{"start":{"line":212,"column":8},"end":{"line":212,"column":26}},"107":{"start":{"line":213,"column":8},"end":{"line":213,"column":31}},"108":{"start":{"line":214,"column":11},"end":{"line":251,"column":5}},"109":{"start":{"line":215,"column":8},"end":{"line":215,"column":23}},"110":{"start":{"line":216,"column":8},"end":{"line":216,"column":26}},"111":{"start":{"line":217,"column":8},"end":{"line":217,"column":26}},"112":{"start":{"line":218,"column":8},"end":{"line":218,"column":26}},"113":{"start":{"line":219,"column":8},"end":{"line":219,"column":31}},"114":{"start":{"line":220,"column":11},"end":{"line":251,"column":5}},"115":{"start":{"line":221,"column":8},"end":{"line":221,"column":23}},"116":{"start":{"line":222,"column":8},"end":{"line":222,"column":26}},"117":{"start":{"line":223,"column":8},"end":{"line":223,"column":26}},"118":{"start":{"line":224,"column":8},"end":{"line":224,"column":26}},"119":{"start":{"line":225,"column":8},"end":{"line":225,"column":31}},"120":{"start":{"line":226,"column":11},"end":{"line":251,"column":5}},"121":{"start":{"line":227,"column":8},"end":{"line":227,"column":23}},"122":{"start":{"line":228,"column":8},"end":{"line":228,"column":26}},"123":{"start":{"line":229,"column":8},"end":{"line":229,"column":26}},"124":{"start":{"line":230,"column":8},"end":{"line":230,"column":31}},"125":{"start":{"line":231,"column":11},"end":{"line":251,"column":5}},"126":{"start":{"line":232,"column":8},"end":{"line":232,"column":23}},"127":{"start":{"line":233,"column":8},"end":{"line":233,"column":26}},"128":{"start":{"line":234,"column":8},"end":{"line":234,"column":26}},"129":{"start":{"line":235,"column":8},"end":{"line":235,"column":31}},"130":{"start":{"line":236,"column":11},"end":{"line":251,"column":5}},"131":{"start":{"line":237,"column":8},"end":{"line":237,"column":23}},"132":{"start":{"line":238,"column":8},"end":{"line":238,"column":26}},"133":{"start":{"line":239,"column":8},"end":{"line":239,"column":26}},"134":{"start":{"line":240,"column":8},"end":{"line":240,"column":31}},"135":{"start":{"line":241,"column":11},"end":{"line":251,"column":5}},"136":{"start":{"line":242,"column":8},"end":{"line":242,"column":23}},"137":{"start":{"line":243,"column":8},"end":{"line":243,"column":26}},"138":{"start":{"line":244,"column":8},"end":{"line":244,"column":26}},"139":{"start":{"line":245,"column":8},"end":{"line":245,"column":31}},"140":{"start":{"line":246,"column":11},"end":{"line":251,"column":5}},"141":{"start":{"line":247,"column":8},"end":{"line":247,"column":23}},"142":{"start":{"line":248,"column":8},"end":{"line":248,"column":26}},"143":{"start":{"line":249,"column":8},"end":{"line":249,"column":26}},"144":{"start":{"line":250,"column":8},"end":{"line":250,"column":31}},"145":{"start":{"line":254,"column":4},"end":{"line":254,"column":43}},"146":{"start":{"line":255,"column":4},"end":{"line":255,"column":62}},"147":{"start":{"line":256,"column":4},"end":{"line":256,"column":49}},"148":{"start":{"line":257,"column":4},"end":{"line":257,"column":71}},"149":{"start":{"line":258,"column":4},"end":{"line":258,"column":49}},"150":{"start":{"line":259,"column":4},"end":{"line":259,"column":71}},"151":{"start":{"line":260,"column":4},"end":{"line":260,"column":30}},"152":{"start":{"line":261,"column":4},"end":{"line":261,"column":25}},"153":{"start":{"line":262,"column":4},"end":{"line":266,"column":5}},"154":{"start":{"line":263,"column":8},"end":{"line":263,"column":53}},"155":{"start":{"line":264,"column":8},"end":{"line":264,"column":71}},"156":{"start":{"line":265,"column":8},"end":{"line":265,"column":25}},"157":{"start":{"line":270,"column":4},"end":{"line":270,"column":75}},"158":{"start":{"line":273,"column":4},"end":{"line":274,"column":72}},"159":{"start":{"line":277,"column":4},"end":{"line":278,"column":67}},"160":{"start":{"line":284,"column":4},"end":{"line":284,"column":54}},"161":{"start":{"line":285,"column":4},"end":{"line":287,"column":5}},"162":{"start":{"line":286,"column":8},"end":{"line":286,"column":51}},"163":{"start":{"line":289,"column":4},"end":{"line":289,"column":49}},"164":{"start":{"line":294,"column":4},"end":{"line":294,"column":20}},"165":{"start":{"line":297,"column":4},"end":{"line":297,"column":47}},"166":{"start":{"line":299,"column":4},"end":{"line":299,"column":10}},"167":{"start":{"line":300,"column":4},"end":{"line":315,"column":5}},"168":{"start":{"line":302,"column":8},"end":{"line":304,"column":9}},"169":{"start":{"line":303,"column":12},"end":{"line":303,"column":55}},"170":{"start":{"line":308,"column":8},"end":{"line":310,"column":9}},"171":{"start":{"line":309,"column":12},"end":{"line":309,"column":55}},"172":{"start":{"line":311,"column":8},"end":{"line":311,"column":51}},"173":{"start":{"line":312,"column":8},"end":{"line":314,"column":9}},"174":{"start":{"line":313,"column":12},"end":{"line":313,"column":55}},"175":{"start":{"line":318,"column":4},"end":{"line":318,"column":44}},"176":{"start":{"line":321,"column":4},"end":{"line":321,"column":72}},"177":{"start":{"line":323,"column":4},"end":{"line":325,"column":38}},"178":{"start":{"line":330,"column":0},"end":{"line":335,"column":2}},"179":{"start":{"line":338,"column":0},"end":{"line":344,"column":2}},"180":{"start":{"line":347,"column":0},"end":{"line":349,"column":2}},"181":{"start":{"line":354,"column":0},"end":{"line":354,"column":46}},"182":{"start":{"line":359,"column":0},"end":{"line":377,"column":2}},"183":{"start":{"line":361,"column":4},"end":{"line":365,"column":5}},"184":{"start":{"line":362,"column":8},"end":{"line":362,"column":27}},"185":{"start":{"line":363,"column":11},"end":{"line":365,"column":5}},"186":{"start":{"line":364,"column":8},"end":{"line":364,"column":27}},"187":{"start":{"line":368,"column":4},"end":{"line":376,"column":5}},"188":{"start":{"line":370,"column":8},"end":{"line":370,"column":74}},"189":{"start":{"line":371,"column":11},"end":{"line":376,"column":5}},"190":{"start":{"line":372,"column":8},"end":{"line":373,"column":73}},"191":{"start":{"line":375,"column":8},"end":{"line":375,"column":67}},"192":{"start":{"line":392,"column":0},"end":{"line":400,"column":2}},"193":{"start":{"line":403,"column":0},"end":{"line":408,"column":2}},"194":{"start":{"line":412,"column":0},"end":{"line":421,"column":2}},"195":{"start":{"line":426,"column":0},"end":{"line":434,"column":2}},"196":{"start":{"line":427,"column":4},"end":{"line":433,"column":5}},"197":{"start":{"line":428,"column":8},"end":{"line":428,"column":30}},"198":{"start":{"line":429,"column":11},"end":{"line":433,"column":5}},"199":{"start":{"line":430,"column":8},"end":{"line":430,"column":47}},"200":{"start":{"line":431,"column":11},"end":{"line":433,"column":5}},"201":{"start":{"line":432,"column":8},"end":{"line":432,"column":31}},"202":{"start":{"line":440,"column":0},"end":{"line":470,"column":2}},"203":{"start":{"line":445,"column":4},"end":{"line":445,"column":52}},"204":{"start":{"line":446,"column":4},"end":{"line":466,"column":5}},"205":{"start":{"line":447,"column":8},"end":{"line":450,"column":9}},"206":{"start":{"line":449,"column":12},"end":{"line":449,"column":18}},"207":{"start":{"line":452,"column":8},"end":{"line":452,"column":70}},"208":{"start":{"line":453,"column":8},"end":{"line":453,"column":57}},"209":{"start":{"line":458,"column":8},"end":{"line":460,"column":9}},"210":{"start":{"line":459,"column":12},"end":{"line":459,"column":60}},"211":{"start":{"line":463,"column":8},"end":{"line":465,"column":9}},"212":{"start":{"line":464,"column":12},"end":{"line":464,"column":31}},"213":{"start":{"line":469,"column":4},"end":{"line":469,"column":41}},"214":{"start":{"line":476,"column":0},"end":{"line":508,"column":2}},"215":{"start":{"line":478,"column":4},"end":{"line":482,"column":5}},"216":{"start":{"line":479,"column":8},"end":{"line":479,"column":27}},"217":{"start":{"line":480,"column":11},"end":{"line":482,"column":5}},"218":{"start":{"line":481,"column":8},"end":{"line":481,"column":27}},"219":{"start":{"line":485,"column":4},"end":{"line":485,"column":17}},"220":{"start":{"line":486,"column":4},"end":{"line":492,"column":5}},"221":{"start":{"line":487,"column":8},"end":{"line":487,"column":47}},"222":{"start":{"line":488,"column":11},"end":{"line":492,"column":5}},"223":{"start":{"line":489,"column":8},"end":{"line":489,"column":47}},"224":{"start":{"line":491,"column":8},"end":{"line":491,"column":48}},"225":{"start":{"line":495,"column":4},"end":{"line":495,"column":71}},"226":{"start":{"line":499,"column":4},"end":{"line":507,"column":5}},"227":{"start":{"line":500,"column":8},"end":{"line":501,"column":39}},"228":{"start":{"line":502,"column":11},"end":{"line":507,"column":5}},"229":{"start":{"line":503,"column":8},"end":{"line":504,"column":39}},"230":{"start":{"line":505,"column":11},"end":{"line":507,"column":5}},"231":{"start":{"line":506,"column":8},"end":{"line":506,"column":79}},"232":{"start":{"line":514,"column":0},"end":{"line":544,"column":2}},"233":{"start":{"line":517,"column":4},"end":{"line":518,"column":72}},"234":{"start":{"line":521,"column":4},"end":{"line":521,"column":30}},"235":{"start":{"line":522,"column":4},"end":{"line":522,"column":60}},"236":{"start":{"line":524,"column":4},"end":{"line":525,"column":49}},"237":{"start":{"line":527,"column":4},"end":{"line":538,"column":47}},"238":{"start":{"line":542,"column":4},"end":{"line":543,"column":41}},"239":{"start":{"line":546,"column":0},"end":{"line":550,"column":2}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"2":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":8},"end":{"line":38,"column":28}},{"start":{"line":38,"column":32},"end":{"line":38,"column":60}}]},"3":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":14},"end":{"line":60,"column":21}},{"start":{"line":60,"column":25},"end":{"line":60,"column":27}}]},"4":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"5":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"6":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"7":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":11},"end":{"line":129,"column":11}},{"start":{"line":129,"column":11},"end":{"line":129,"column":11}}]},"8":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":4}},{"start":{"line":162,"column":4},"end":{"line":162,"column":4}}]},"9":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":11},"end":{"line":164,"column":11}},{"start":{"line":164,"column":11},"end":{"line":164,"column":11}}]},"10":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":11},"end":{"line":166,"column":11}},{"start":{"line":166,"column":11},"end":{"line":166,"column":11}}]},"11":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":11},"end":{"line":168,"column":11}},{"start":{"line":168,"column":11},"end":{"line":168,"column":11}}]},"12":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":11},"end":{"line":170,"column":11}},{"start":{"line":170,"column":11},"end":{"line":170,"column":11}}]},"13":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":11},"end":{"line":174,"column":11}},{"start":{"line":174,"column":11},"end":{"line":174,"column":11}}]},"14":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":11},"end":{"line":178,"column":11}},{"start":{"line":178,"column":11},"end":{"line":178,"column":11}}]},"15":{"line":178,"type":"binary-expr","locations":[{"start":{"line":178,"column":15},"end":{"line":178,"column":28}},{"start":{"line":178,"column":32},"end":{"line":178,"column":52}}]},"16":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":11},"end":{"line":183,"column":11}},{"start":{"line":183,"column":11},"end":{"line":183,"column":11}}]},"17":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":15},"end":{"line":183,"column":28}},{"start":{"line":183,"column":32},"end":{"line":183,"column":52}}]},"18":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":11},"end":{"line":188,"column":11}},{"start":{"line":188,"column":11},"end":{"line":188,"column":11}}]},"19":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":11},"end":{"line":192,"column":11}},{"start":{"line":192,"column":11},"end":{"line":192,"column":11}}]},"20":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":11},"end":{"line":196,"column":11}},{"start":{"line":196,"column":11},"end":{"line":196,"column":11}}]},"21":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":11},"end":{"line":200,"column":11}},{"start":{"line":200,"column":11},"end":{"line":200,"column":11}}]},"22":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":11},"end":{"line":204,"column":11}},{"start":{"line":204,"column":11},"end":{"line":204,"column":11}}]},"23":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":11},"end":{"line":209,"column":11}},{"start":{"line":209,"column":11},"end":{"line":209,"column":11}}]},"24":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":11},"end":{"line":214,"column":11}},{"start":{"line":214,"column":11},"end":{"line":214,"column":11}}]},"25":{"line":214,"type":"binary-expr","locations":[{"start":{"line":214,"column":15},"end":{"line":214,"column":30}},{"start":{"line":214,"column":34},"end":{"line":214,"column":54}}]},"26":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":11},"end":{"line":220,"column":11}},{"start":{"line":220,"column":11},"end":{"line":220,"column":11}}]},"27":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":15},"end":{"line":220,"column":30}},{"start":{"line":220,"column":34},"end":{"line":220,"column":54}}]},"28":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":11},"end":{"line":226,"column":11}},{"start":{"line":226,"column":11},"end":{"line":226,"column":11}}]},"29":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":11},"end":{"line":231,"column":11}},{"start":{"line":231,"column":11},"end":{"line":231,"column":11}}]},"30":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":11},"end":{"line":236,"column":11}},{"start":{"line":236,"column":11},"end":{"line":236,"column":11}}]},"31":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":11},"end":{"line":241,"column":11}},{"start":{"line":241,"column":11},"end":{"line":241,"column":11}}]},"32":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":11},"end":{"line":246,"column":11}},{"start":{"line":246,"column":11},"end":{"line":246,"column":11}}]},"33":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":4},"end":{"line":262,"column":4}},{"start":{"line":262,"column":4},"end":{"line":262,"column":4}}]},"34":{"line":285,"type":"if","locations":[{"start":{"line":285,"column":4},"end":{"line":285,"column":4}},{"start":{"line":285,"column":4},"end":{"line":285,"column":4}}]},"35":{"line":300,"type":"if","locations":[{"start":{"line":300,"column":4},"end":{"line":300,"column":4}},{"start":{"line":300,"column":4},"end":{"line":300,"column":4}}]},"36":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":4},"end":{"line":361,"column":4}},{"start":{"line":361,"column":4},"end":{"line":361,"column":4}}]},"37":{"line":361,"type":"binary-expr","locations":[{"start":{"line":361,"column":8},"end":{"line":361,"column":21}},{"start":{"line":361,"column":25},"end":{"line":361,"column":41}}]},"38":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":11},"end":{"line":363,"column":11}},{"start":{"line":363,"column":11},"end":{"line":363,"column":11}}]},"39":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":15},"end":{"line":363,"column":28}},{"start":{"line":363,"column":32},"end":{"line":363,"column":48}}]},"40":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":4},"end":{"line":368,"column":4}},{"start":{"line":368,"column":4},"end":{"line":368,"column":4}}]},"41":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":8},"end":{"line":368,"column":51}},{"start":{"line":369,"column":8},"end":{"line":369,"column":51}}]},"42":{"line":371,"type":"if","locations":[{"start":{"line":371,"column":11},"end":{"line":371,"column":11}},{"start":{"line":371,"column":11},"end":{"line":371,"column":11}}]},"43":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":4},"end":{"line":427,"column":4}},{"start":{"line":427,"column":4},"end":{"line":427,"column":4}}]},"44":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":11},"end":{"line":429,"column":11}},{"start":{"line":429,"column":11},"end":{"line":429,"column":11}}]},"45":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":11},"end":{"line":431,"column":11}},{"start":{"line":431,"column":11},"end":{"line":431,"column":11}}]},"46":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":8},"end":{"line":447,"column":8}},{"start":{"line":447,"column":8},"end":{"line":447,"column":8}}]},"47":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":8},"end":{"line":458,"column":8}},{"start":{"line":458,"column":8},"end":{"line":458,"column":8}}]},"48":{"line":463,"type":"if","locations":[{"start":{"line":463,"column":8},"end":{"line":463,"column":8}},{"start":{"line":463,"column":8},"end":{"line":463,"column":8}}]},"49":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":4},"end":{"line":478,"column":4}},{"start":{"line":478,"column":4},"end":{"line":478,"column":4}}]},"50":{"line":478,"type":"binary-expr","locations":[{"start":{"line":478,"column":8},"end":{"line":478,"column":21}},{"start":{"line":478,"column":25},"end":{"line":478,"column":41}}]},"51":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":11},"end":{"line":480,"column":11}},{"start":{"line":480,"column":11},"end":{"line":480,"column":11}}]},"52":{"line":480,"type":"binary-expr","locations":[{"start":{"line":480,"column":15},"end":{"line":480,"column":28}},{"start":{"line":480,"column":32},"end":{"line":480,"column":48}}]},"53":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":4},"end":{"line":486,"column":4}},{"start":{"line":486,"column":4},"end":{"line":486,"column":4}}]},"54":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":11},"end":{"line":488,"column":11}},{"start":{"line":488,"column":11},"end":{"line":488,"column":11}}]},"55":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":4},"end":{"line":499,"column":4}},{"start":{"line":499,"column":4},"end":{"line":499,"column":4}}]},"56":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":11},"end":{"line":502,"column":11}},{"start":{"line":502,"column":11},"end":{"line":502,"column":11}}]},"57":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":11},"end":{"line":505,"column":11}},{"start":{"line":505,"column":11},"end":{"line":505,"column":11}}]}},"code":["/**"," * This file deals with creating delimiters of various sizes. The TeXbook"," * discusses these routines on page 441-442, in the \"Another subroutine sets box"," * x to a specified variable delimiter\" paragraph."," *"," * There are three main routines here. `makeSmallDelim` makes a delimiter in the"," * normal font, but in either text, script, or scriptscript style."," * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,"," * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of"," * smaller pieces that are stacked on top of one another."," *"," * The functions take a parameter `center`, which determines if the delimiter"," * should be centered around the axis."," *"," * Then, there are three exposed functions. `sizedDelim` makes a delimiter in"," * one of the given sizes. This is used for things like `\\bigl`."," * `customSizedDelim` makes a delimiter with a given total height+depth. It is"," * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate"," * delimiter which surrounds an expression of a given height an depth. It is"," * used in `\\left` and `\\right`."," */","","var ParseError = require(\"./ParseError\");","var Style = require(\"./Style\");","","var buildCommon = require(\"./buildCommon\");","var fontMetrics = require(\"./fontMetrics\");","var symbols = require(\"./symbols\");","var utils = require(\"./utils\");","","var makeSpan = buildCommon.makeSpan;","","/**"," * Get the metrics for a given symbol and font, after transformation (i.e."," * after following replacement from symbols.js)"," */","var getMetrics = function(symbol, font) {","    if (symbols.math[symbol] && symbols.math[symbol].replace) {","        return fontMetrics.getCharacterMetrics(","            symbols.math[symbol].replace, font);","    } else {","        return fontMetrics.getCharacterMetrics(","            symbol, font);","    }","};","","/**"," * Builds a symbol in the given font size (note size is an integer)"," */","var mathrmSize = function(value, size, mode, options) {","    return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\",","        mode, options);","};","","/**"," * Puts a delimiter span in a given style, and adds appropriate height, depth,"," * and maxFontSizes."," */","var styleWrap = function(delim, toStyle, options, classes) {","    classes = classes || [];","    var span = makeSpan(","        classes.concat([\"style-wrap\", options.style.reset(), toStyle.cls()]),","        [delim], options);","","    var multiplier = toStyle.sizeMultiplier / options.style.sizeMultiplier;","","    span.height *= multiplier;","    span.depth *= multiplier;","    span.maxFontSize = toStyle.sizeMultiplier;","","    return span;","};","","/**"," * Makes a small delimiter. This is a delimiter that comes in the Main-Regular"," * font, but is restyled to either be in textstyle, scriptstyle, or"," * scriptscriptstyle."," */","var makeSmallDelim = function(delim, style, center, options, mode, classes) {","    var text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode, options);","","    var span = styleWrap(text, style, options, classes);","","    if (center) {","        var shift =","            (1 - options.style.sizeMultiplier / style.sizeMultiplier) *","            options.style.metrics.axisHeight;","","        span.style.top = shift + \"em\";","        span.height -= shift;","        span.depth += shift;","    }","","    return span;","};","","/**"," * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,"," * Size3, or Size4 fonts. It is always rendered in textstyle."," */","var makeLargeDelim = function(delim, size, center, options, mode, classes) {","    var inner = mathrmSize(delim, size, mode, options);","","    var span = styleWrap(","        makeSpan([\"delimsizing\", \"size\" + size], [inner], options),","        Style.TEXT, options, classes);","","    if (center) {","        var shift = (1 - options.style.sizeMultiplier) *","            options.style.metrics.axisHeight;","","        span.style.top = shift + \"em\";","        span.height -= shift;","        span.depth += shift;","    }","","    return span;","};","","/**"," * Make an inner span with the given offset and in the given font. This is used"," * in `makeStackedDelim` to make the stacking pieces for the delimiter."," */","var makeInner = function(symbol, font, mode) {","    var sizeClass;","    // Apply the correct CSS class to choose the right font.","    if (font === \"Size1-Regular\") {","        sizeClass = \"delim-size1\";","    } else if (font === \"Size4-Regular\") {","        sizeClass = \"delim-size4\";","    }","","    var inner = makeSpan(","        [\"delimsizinginner\", sizeClass],","        [makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]);","","    // Since this will be passed into `makeVList` in the end, wrap the element","    // in the appropriate tag that VList uses.","    return {type: \"elem\", elem: inner};","};","","/**"," * Make a stacked delimiter out of a given delimiter, with the total height at"," * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook."," */","var makeStackedDelim = function(delim, heightTotal, center, options, mode,","                                classes) {","    // There are four parts, the top, an optional middle, a repeated part, and a","    // bottom.","    var top;","    var middle;","    var repeat;","    var bottom;","    top = repeat = bottom = delim;","    middle = null;","    // Also keep track of what font the delimiters are in","    var font = \"Size1-Regular\";","","    // We set the parts and font based on the symbol. Note that we use","    // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the","    // repeats of the arrows","    if (delim === \"\\\\uparrow\") {","        repeat = bottom = \"\\u23d0\";","    } else if (delim === \"\\\\Uparrow\") {","        repeat = bottom = \"\\u2016\";","    } else if (delim === \"\\\\downarrow\") {","        top = repeat = \"\\u23d0\";","    } else if (delim === \"\\\\Downarrow\") {","        top = repeat = \"\\u2016\";","    } else if (delim === \"\\\\updownarrow\") {","        top = \"\\\\uparrow\";","        repeat = \"\\u23d0\";","        bottom = \"\\\\downarrow\";","    } else if (delim === \"\\\\Updownarrow\") {","        top = \"\\\\Uparrow\";","        repeat = \"\\u2016\";","        bottom = \"\\\\Downarrow\";","    } else if (delim === \"[\" || delim === \"\\\\lbrack\") {","        top = \"\\u23a1\";","        repeat = \"\\u23a2\";","        bottom = \"\\u23a3\";","        font = \"Size4-Regular\";","    } else if (delim === \"]\" || delim === \"\\\\rbrack\") {","        top = \"\\u23a4\";","        repeat = \"\\u23a5\";","        bottom = \"\\u23a6\";","        font = \"Size4-Regular\";","    } else if (delim === \"\\\\lfloor\") {","        repeat = top = \"\\u23a2\";","        bottom = \"\\u23a3\";","        font = \"Size4-Regular\";","    } else if (delim === \"\\\\lceil\") {","        top = \"\\u23a1\";","        repeat = bottom = \"\\u23a2\";","        font = \"Size4-Regular\";","    } else if (delim === \"\\\\rfloor\") {","        repeat = top = \"\\u23a5\";","        bottom = \"\\u23a6\";","        font = \"Size4-Regular\";","    } else if (delim === \"\\\\rceil\") {","        top = \"\\u23a4\";","        repeat = bottom = \"\\u23a5\";","        font = \"Size4-Regular\";","    } else if (delim === \"(\") {","        top = \"\\u239b\";","        repeat = \"\\u239c\";","        bottom = \"\\u239d\";","        font = \"Size4-Regular\";","    } else if (delim === \")\") {","        top = \"\\u239e\";","        repeat = \"\\u239f\";","        bottom = \"\\u23a0\";","        font = \"Size4-Regular\";","    } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {","        top = \"\\u23a7\";","        middle = \"\\u23a8\";","        bottom = \"\\u23a9\";","        repeat = \"\\u23aa\";","        font = \"Size4-Regular\";","    } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {","        top = \"\\u23ab\";","        middle = \"\\u23ac\";","        bottom = \"\\u23ad\";","        repeat = \"\\u23aa\";","        font = \"Size4-Regular\";","    } else if (delim === \"\\\\lgroup\") {","        top = \"\\u23a7\";","        bottom = \"\\u23a9\";","        repeat = \"\\u23aa\";","        font = \"Size4-Regular\";","    } else if (delim === \"\\\\rgroup\") {","        top = \"\\u23ab\";","        bottom = \"\\u23ad\";","        repeat = \"\\u23aa\";","        font = \"Size4-Regular\";","    } else if (delim === \"\\\\lmoustache\") {","        top = \"\\u23a7\";","        bottom = \"\\u23ad\";","        repeat = \"\\u23aa\";","        font = \"Size4-Regular\";","    } else if (delim === \"\\\\rmoustache\") {","        top = \"\\u23ab\";","        bottom = \"\\u23a9\";","        repeat = \"\\u23aa\";","        font = \"Size4-Regular\";","    } else if (delim === \"\\\\surd\") {","        top = \"\\ue001\";","        bottom = \"\\u23b7\";","        repeat = \"\\ue000\";","        font = \"Size4-Regular\";","    }","","    // Get the metrics of the four sections","    var topMetrics = getMetrics(top, font);","    var topHeightTotal = topMetrics.height + topMetrics.depth;","    var repeatMetrics = getMetrics(repeat, font);","    var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;","    var bottomMetrics = getMetrics(bottom, font);","    var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;","    var middleHeightTotal = 0;","    var middleFactor = 1;","    if (middle !== null) {","        var middleMetrics = getMetrics(middle, font);","        middleHeightTotal = middleMetrics.height + middleMetrics.depth;","        middleFactor = 2; // repeat symmetrically above and below middle","    }","","    // Calcuate the minimal height that the delimiter can have.","    // It is at least the size of the top, bottom, and optional middle combined.","    var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal;","","    // Compute the number of copies of the repeat symbol we will need","    var repeatCount = Math.ceil(","        (heightTotal - minHeight) / (middleFactor * repeatHeightTotal));","","    // Compute the total height of the delimiter including all the symbols","    var realHeightTotal =","        minHeight + repeatCount * middleFactor * repeatHeightTotal;","","    // The center of the delimiter is placed at the center of the axis. Note","    // that in this context, \"center\" means that the delimiter should be","    // centered around the axis in the current style, while normally it is","    // centered around the axis in textstyle.","    var axisHeight = options.style.metrics.axisHeight;","    if (center) {","        axisHeight *= options.style.sizeMultiplier;","    }","    // Calculate the depth","    var depth = realHeightTotal / 2 - axisHeight;","","    // Now, we start building the pieces that will go into the vlist","","    // Keep a list of the inner pieces","    var inners = [];","","    // Add the bottom symbol","    inners.push(makeInner(bottom, font, mode));","","    var i;","    if (middle === null) {","        // Add that many symbols","        for (i = 0; i < repeatCount; i++) {","            inners.push(makeInner(repeat, font, mode));","        }","    } else {","        // When there is a middle bit, we need the middle part and two repeated","        // sections","        for (i = 0; i < repeatCount; i++) {","            inners.push(makeInner(repeat, font, mode));","        }","        inners.push(makeInner(middle, font, mode));","        for (i = 0; i < repeatCount; i++) {","            inners.push(makeInner(repeat, font, mode));","        }","    }","","    // Add the top symbol","    inners.push(makeInner(top, font, mode));","","    // Finally, build the vlist","    var inner = buildCommon.makeVList(inners, \"bottom\", depth, options);","","    return styleWrap(","        makeSpan([\"delimsizing\", \"mult\"], [inner], options),","        Style.TEXT, options, classes);","};","","// There are three kinds of delimiters, delimiters that stack when they become","// too large","var stackLargeDelimiters = [","    \"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\",","    \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\",","    \"\\\\lfloor\", \"\\\\rfloor\", \"\\\\lceil\", \"\\\\rceil\",","    \"\\\\surd\"","];","","// delimiters that always stack","var stackAlwaysDelimiters = [","    \"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\",","    \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\",","    \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\",","    \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\",","    \"\\\\lgroup\", \"\\\\rgroup\", \"\\\\lmoustache\", \"\\\\rmoustache\"","];","","// and delimiters that never stack","var stackNeverDelimiters = [","    \"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"","];","","// Metrics of the different sizes. Found by looking at TeX's output of","// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$","// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.","var sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];","","/**"," * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4."," */","var makeSizedDelim = function(delim, size, options, mode, classes) {","    // < and > turn into \\langle and \\rangle in delimiters","    if (delim === \"<\" || delim === \"\\\\lt\") {","        delim = \"\\\\langle\";","    } else if (delim === \">\" || delim === \"\\\\gt\") {","        delim = \"\\\\rangle\";","    }","","    // Sized delimiters are never centered.","    if (utils.contains(stackLargeDelimiters, delim) ||","        utils.contains(stackNeverDelimiters, delim)) {","        return makeLargeDelim(delim, size, false, options, mode, classes);","    } else if (utils.contains(stackAlwaysDelimiters, delim)) {","        return makeStackedDelim(","            delim, sizeToMaxHeight[size], false, options, mode, classes);","    } else {","        throw new ParseError(\"Illegal delimiter: '\" + delim + \"'\");","    }","};","","/**"," * There are three different sequences of delimiter sizes that the delimiters"," * follow depending on the kind of delimiter. This is used when creating custom"," * sized delimiters to decide whether to create a small, large, or stacked"," * delimiter."," *"," * In real TeX, these sequences aren't explicitly defined, but are instead"," * defined inside the font metrics. Since there are only three sequences that"," * are possible for the delimiters that TeX defines, it is easier to just encode"," * them explicitly here."," */","","// Delimiters that never stack try small delimiters and large delimiters only","var stackNeverDelimiterSequence = [","    {type: \"small\", style: Style.SCRIPTSCRIPT},","    {type: \"small\", style: Style.SCRIPT},","    {type: \"small\", style: Style.TEXT},","    {type: \"large\", size: 1},","    {type: \"large\", size: 2},","    {type: \"large\", size: 3},","    {type: \"large\", size: 4}","];","","// Delimiters that always stack try the small delimiters first, then stack","var stackAlwaysDelimiterSequence = [","    {type: \"small\", style: Style.SCRIPTSCRIPT},","    {type: \"small\", style: Style.SCRIPT},","    {type: \"small\", style: Style.TEXT},","    {type: \"stack\"}","];","","// Delimiters that stack when large try the small and then large delimiters, and","// stack afterwards","var stackLargeDelimiterSequence = [","    {type: \"small\", style: Style.SCRIPTSCRIPT},","    {type: \"small\", style: Style.SCRIPT},","    {type: \"small\", style: Style.TEXT},","    {type: \"large\", size: 1},","    {type: \"large\", size: 2},","    {type: \"large\", size: 3},","    {type: \"large\", size: 4},","    {type: \"stack\"}","];","","/**"," * Get the font used in a delimiter based on what kind of delimiter it is."," */","var delimTypeToFont = function(type) {","    if (type.type === \"small\") {","        return \"Main-Regular\";","    } else if (type.type === \"large\") {","        return \"Size\" + type.size + \"-Regular\";","    } else if (type.type === \"stack\") {","        return \"Size4-Regular\";","    }","};","","/**"," * Traverse a sequence of types of delimiters to decide what kind of delimiter"," * should be used to create a delimiter of the given height+depth."," */","var traverseSequence = function(delim, height, sequence, options) {","    // Here, we choose the index we should start at in the sequences. In smaller","    // sizes (which correspond to larger numbers in style.size) we start earlier","    // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts","    // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2","    var start = Math.min(2, 3 - options.style.size);","    for (var i = start; i < sequence.length; i++) {","        if (sequence[i].type === \"stack\") {","            // This is always the last delimiter, so we just break the loop now.","            break;","        }","","        var metrics = getMetrics(delim, delimTypeToFont(sequence[i]));","        var heightDepth = metrics.height + metrics.depth;","","        // Small delimiters are scaled down versions of the same font, so we","        // account for the style change size.","","        if (sequence[i].type === \"small\") {","            heightDepth *= sequence[i].style.sizeMultiplier;","        }","","        // Check if the delimiter at this size works for the given height.","        if (heightDepth > height) {","            return sequence[i];","        }","    }","","    // If we reached the end of the sequence, return the last sequence element.","    return sequence[sequence.length - 1];","};","","/**"," * Make a delimiter of a given height+depth, with optional centering. Here, we"," * traverse the sequences, and create a delimiter that the sequence tells us to."," */","var makeCustomSizedDelim = function(delim, height, center, options, mode,","                                    classes) {","    if (delim === \"<\" || delim === \"\\\\lt\") {","        delim = \"\\\\langle\";","    } else if (delim === \">\" || delim === \"\\\\gt\") {","        delim = \"\\\\rangle\";","    }","","    // Decide what sequence to use","    var sequence;","    if (utils.contains(stackNeverDelimiters, delim)) {","        sequence = stackNeverDelimiterSequence;","    } else if (utils.contains(stackLargeDelimiters, delim)) {","        sequence = stackLargeDelimiterSequence;","    } else {","        sequence = stackAlwaysDelimiterSequence;","    }","","    // Look through the sequence","    var delimType = traverseSequence(delim, height, sequence, options);","","    // Depending on the sequence element we decided on, call the appropriate","    // function.","    if (delimType.type === \"small\") {","        return makeSmallDelim(delim, delimType.style, center, options, mode,","                              classes);","    } else if (delimType.type === \"large\") {","        return makeLargeDelim(delim, delimType.size, center, options, mode,","                              classes);","    } else if (delimType.type === \"stack\") {","        return makeStackedDelim(delim, height, center, options, mode, classes);","    }","};","","/**"," * Make a delimiter for use with `\\left` and `\\right`, given a height and depth"," * of an expression that the delimiters surround."," */","var makeLeftRightDelim = function(delim, height, depth, options, mode,","                                  classes) {","    // We always center \\left/\\right delimiters, so the axis is always shifted","    var axisHeight =","        options.style.metrics.axisHeight * options.style.sizeMultiplier;","","    // Taken from TeX source, tex.web, function make_left_right","    var delimiterFactor = 901;","    var delimiterExtend = 5.0 / fontMetrics.metrics.ptPerEm;","","    var maxDistFromAxis = Math.max(","        height - axisHeight, depth + axisHeight);","","    var totalHeight = Math.max(","        // In real TeX, calculations are done using integral values which are","        // 65536 per pt, or 655360 per em. So, the division here truncates in","        // TeX but doesn't here, producing different results. If we wanted to","        // exactly match TeX's calculation, we could do","        //   Math.floor(655360 * maxDistFromAxis / 500) *","        //    delimiterFactor / 655360","        // (To see the difference, compare","        //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}","        // in TeX and KaTeX)","        maxDistFromAxis / 500 * delimiterFactor,","        2 * maxDistFromAxis - delimiterExtend);","","    // Finally, we defer to `makeCustomSizedDelim` with our calculated total","    // height","    return makeCustomSizedDelim(delim, totalHeight, true, options, mode,","                                classes);","};","","module.exports = {","    sizedDelim: makeSizedDelim,","    customSizedDelim: makeCustomSizedDelim,","    leftRightDelim: makeLeftRightDelim","};",""],"l":{"23":1,"24":1,"26":1,"27":1,"28":1,"29":1,"31":1,"37":1,"38":0,"39":0,"42":0,"50":1,"51":0,"59":1,"60":0,"61":0,"65":0,"67":0,"68":0,"69":0,"71":0,"79":1,"80":0,"82":0,"84":0,"85":0,"89":0,"90":0,"91":0,"94":0,"101":1,"102":0,"104":0,"108":0,"109":0,"112":0,"113":0,"114":0,"117":0,"124":1,"125":0,"127":0,"128":0,"129":0,"130":0,"133":0,"139":0,"146":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"157":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"270":0,"273":0,"277":0,"284":0,"285":0,"286":0,"289":0,"294":0,"297":0,"299":0,"300":0,"302":0,"303":0,"308":0,"309":0,"311":0,"312":0,"313":0,"318":0,"321":0,"323":0,"330":1,"338":1,"347":1,"354":1,"359":1,"361":0,"362":0,"363":0,"364":0,"368":0,"370":0,"371":0,"372":0,"375":0,"392":1,"403":1,"412":1,"426":1,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"440":1,"445":0,"446":0,"447":0,"449":0,"452":0,"453":0,"458":0,"459":0,"463":0,"464":0,"469":0,"476":1,"478":0,"479":0,"480":0,"481":0,"485":0,"486":0,"487":0,"488":0,"489":0,"491":0,"495":0,"499":0,"500":0,"502":0,"503":0,"505":0,"506":0,"514":1,"517":0,"521":0,"522":0,"524":0,"527":0,"542":0,"546":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/buildMathML.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/buildMathML.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":1,"51":0,"52":0,"53":1,"54":0,"55":0,"56":1,"57":0,"58":0,"59":1,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":1,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":1,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":1,"112":0,"113":0,"114":0,"115":1,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":1,"134":0,"135":0,"136":0,"137":1,"138":0,"139":0,"140":0,"141":0,"142":1,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":1,"172":0,"173":0,"174":1,"175":0,"176":0,"177":1,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":1,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":1,"195":0,"196":0,"197":0,"198":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":1,"206":0,"207":0,"208":0,"209":0,"210":0,"211":1,"212":0,"213":0,"214":1,"215":0,"216":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":0,"225":0,"226":1,"227":0,"228":0,"229":1,"230":0,"231":0,"232":1,"233":0,"234":0,"235":0,"236":0,"237":0,"238":1,"239":0,"240":0,"241":0,"242":0,"243":0,"244":1,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0,0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":15},"end":{"line":21,"column":36}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":17},"end":{"line":32,"column":42}}},"3":{"name":"(anonymous_3)","line":66,"loc":{"start":{"line":66,"column":21},"end":{"line":66,"column":46}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":21},"end":{"line":78,"column":46}}},"5":{"name":"(anonymous_5)","line":99,"loc":{"start":{"line":99,"column":17},"end":{"line":99,"column":33}}},"6":{"name":"(anonymous_6)","line":106,"loc":{"start":{"line":106,"column":17},"end":{"line":106,"column":33}}},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":18},"end":{"line":113,"column":34}}},"8":{"name":"(anonymous_8)","line":120,"loc":{"start":{"line":120,"column":19},"end":{"line":120,"column":35}}},"9":{"name":"(anonymous_9)","line":127,"loc":{"start":{"line":127,"column":19},"end":{"line":127,"column":35}}},"10":{"name":"(anonymous_10)","line":134,"loc":{"start":{"line":134,"column":19},"end":{"line":134,"column":35}}},"11":{"name":"(anonymous_11)","line":143,"loc":{"start":{"line":143,"column":22},"end":{"line":143,"column":47}}},"12":{"name":"(anonymous_12)","line":151,"loc":{"start":{"line":151,"column":18},"end":{"line":151,"column":43}}},"13":{"name":"(anonymous_13)","line":159,"loc":{"start":{"line":159,"column":19},"end":{"line":159,"column":44}}},"14":{"name":"(anonymous_14)","line":169,"loc":{"start":{"line":169,"column":20},"end":{"line":169,"column":45}}},"15":{"name":"(anonymous_15)","line":194,"loc":{"start":{"line":194,"column":21},"end":{"line":194,"column":46}}},"16":{"name":"(anonymous_16)","line":235,"loc":{"start":{"line":235,"column":19},"end":{"line":235,"column":44}}},"17":{"name":"(anonymous_17)","line":237,"loc":{"start":{"line":237,"column":39},"end":{"line":237,"column":53}}},"18":{"name":"(anonymous_18)","line":239,"loc":{"start":{"line":239,"column":31},"end":{"line":239,"column":46}}},"19":{"name":"(anonymous_19)","line":246,"loc":{"start":{"line":246,"column":18},"end":{"line":246,"column":43}}},"20":{"name":"(anonymous_20)","line":262,"loc":{"start":{"line":262,"column":23},"end":{"line":262,"column":48}}},"21":{"name":"(anonymous_21)","line":288,"loc":{"start":{"line":288,"column":20},"end":{"line":288,"column":45}}},"22":{"name":"(anonymous_22)","line":295,"loc":{"start":{"line":295,"column":20},"end":{"line":295,"column":45}}},"23":{"name":"(anonymous_23)","line":309,"loc":{"start":{"line":309,"column":21},"end":{"line":309,"column":37}}},"24":{"name":"(anonymous_24)","line":326,"loc":{"start":{"line":326,"column":16},"end":{"line":326,"column":41}}},"25":{"name":"(anonymous_25)","line":351,"loc":{"start":{"line":351,"column":17},"end":{"line":351,"column":42}}},"26":{"name":"(anonymous_26)","line":376,"loc":{"start":{"line":376,"column":19},"end":{"line":376,"column":35}}},"27":{"name":"(anonymous_27)","line":383,"loc":{"start":{"line":383,"column":18},"end":{"line":383,"column":43}}},"28":{"name":"(anonymous_28)","line":388,"loc":{"start":{"line":388,"column":25},"end":{"line":388,"column":41}}},"29":{"name":"(anonymous_29)","line":411,"loc":{"start":{"line":411,"column":21},"end":{"line":411,"column":46}}},"30":{"name":"(anonymous_30)","line":431,"loc":{"start":{"line":431,"column":20},"end":{"line":431,"column":45}}},"31":{"name":"(anonymous_31)","line":447,"loc":{"start":{"line":447,"column":22},"end":{"line":447,"column":47}}},"32":{"name":"(anonymous_32)","line":461,"loc":{"start":{"line":461,"column":23},"end":{"line":461,"column":48}}},"33":{"name":"(anonymous_33)","line":475,"loc":{"start":{"line":475,"column":18},"end":{"line":475,"column":34}}},"34":{"name":"(anonymous_34)","line":483,"loc":{"start":{"line":483,"column":18},"end":{"line":483,"column":34}}},"35":{"name":"(anonymous_35)","line":490,"loc":{"start":{"line":490,"column":18},"end":{"line":490,"column":43}}},"36":{"name":"(anonymous_36)","line":500,"loc":{"start":{"line":500,"column":18},"end":{"line":500,"column":43}}},"37":{"name":"(anonymous_37)","line":509,"loc":{"start":{"line":509,"column":21},"end":{"line":509,"column":46}}},"38":{"name":"(anonymous_38)","line":514,"loc":{"start":{"line":514,"column":20},"end":{"line":514,"column":45}}},"39":{"name":"(anonymous_39)","line":524,"loc":{"start":{"line":524,"column":22},"end":{"line":524,"column":52}}},"40":{"name":"(anonymous_40)","line":537,"loc":{"start":{"line":537,"column":17},"end":{"line":537,"column":42}}},"41":{"name":"(anonymous_41)","line":559,"loc":{"start":{"line":559,"column":18},"end":{"line":559,"column":57}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":43}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":41}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":41}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":35}},"6":{"start":{"line":12,"column":0},"end":{"line":12,"column":31}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":36}},"8":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"9":{"start":{"line":21,"column":0},"end":{"line":27,"column":2}},"10":{"start":{"line":22,"column":4},"end":{"line":24,"column":5}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":43}},"12":{"start":{"line":26,"column":4},"end":{"line":26,"column":41}},"13":{"start":{"line":32,"column":0},"end":{"line":58,"column":2}},"14":{"start":{"line":33,"column":4},"end":{"line":33,"column":28}},"15":{"start":{"line":34,"column":4},"end":{"line":36,"column":5}},"16":{"start":{"line":35,"column":8},"end":{"line":35,"column":20}},"17":{"start":{"line":38,"column":4},"end":{"line":38,"column":26}},"18":{"start":{"line":39,"column":4},"end":{"line":41,"column":5}},"19":{"start":{"line":40,"column":8},"end":{"line":40,"column":24}},"20":{"start":{"line":43,"column":4},"end":{"line":43,"column":28}},"21":{"start":{"line":44,"column":4},"end":{"line":46,"column":5}},"22":{"start":{"line":45,"column":8},"end":{"line":45,"column":20}},"23":{"start":{"line":48,"column":4},"end":{"line":50,"column":5}},"24":{"start":{"line":49,"column":8},"end":{"line":49,"column":45}},"25":{"start":{"line":52,"column":4},"end":{"line":52,"column":42}},"26":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"27":{"start":{"line":54,"column":8},"end":{"line":54,"column":45}},"28":{"start":{"line":57,"column":4},"end":{"line":57,"column":16}},"29":{"start":{"line":64,"column":0},"end":{"line":64,"column":20}},"30":{"start":{"line":66,"column":0},"end":{"line":76,"column":2}},"31":{"start":{"line":67,"column":4},"end":{"line":69,"column":45}},"32":{"start":{"line":71,"column":4},"end":{"line":71,"column":45}},"33":{"start":{"line":72,"column":4},"end":{"line":74,"column":5}},"34":{"start":{"line":73,"column":8},"end":{"line":73,"column":50}},"35":{"start":{"line":75,"column":4},"end":{"line":75,"column":16}},"36":{"start":{"line":78,"column":0},"end":{"line":97,"column":2}},"37":{"start":{"line":79,"column":4},"end":{"line":79,"column":49}},"38":{"start":{"line":81,"column":4},"end":{"line":81,"column":57}},"39":{"start":{"line":83,"column":4},"end":{"line":83,"column":13}},"40":{"start":{"line":84,"column":4},"end":{"line":94,"column":5}},"41":{"start":{"line":87,"column":8},"end":{"line":87,"column":53}},"42":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"43":{"start":{"line":89,"column":12},"end":{"line":89,"column":54}},"44":{"start":{"line":92,"column":8},"end":{"line":92,"column":53}},"45":{"start":{"line":93,"column":8},"end":{"line":93,"column":50}},"46":{"start":{"line":96,"column":4},"end":{"line":96,"column":16}},"47":{"start":{"line":99,"column":0},"end":{"line":104,"column":2}},"48":{"start":{"line":100,"column":4},"end":{"line":101,"column":51}},"49":{"start":{"line":103,"column":4},"end":{"line":103,"column":16}},"50":{"start":{"line":106,"column":0},"end":{"line":111,"column":2}},"51":{"start":{"line":107,"column":4},"end":{"line":108,"column":51}},"52":{"start":{"line":110,"column":4},"end":{"line":110,"column":16}},"53":{"start":{"line":113,"column":0},"end":{"line":118,"column":2}},"54":{"start":{"line":114,"column":4},"end":{"line":115,"column":51}},"55":{"start":{"line":117,"column":4},"end":{"line":117,"column":16}},"56":{"start":{"line":120,"column":0},"end":{"line":125,"column":2}},"57":{"start":{"line":121,"column":4},"end":{"line":122,"column":51}},"58":{"start":{"line":124,"column":4},"end":{"line":124,"column":16}},"59":{"start":{"line":127,"column":0},"end":{"line":132,"column":2}},"60":{"start":{"line":128,"column":4},"end":{"line":129,"column":51}},"61":{"start":{"line":131,"column":4},"end":{"line":131,"column":16}},"62":{"start":{"line":134,"column":0},"end":{"line":141,"column":2}},"63":{"start":{"line":135,"column":4},"end":{"line":136,"column":51}},"64":{"start":{"line":138,"column":4},"end":{"line":138,"column":43}},"65":{"start":{"line":140,"column":4},"end":{"line":140,"column":16}},"66":{"start":{"line":143,"column":0},"end":{"line":149,"column":2}},"67":{"start":{"line":144,"column":4},"end":{"line":144,"column":54}},"68":{"start":{"line":146,"column":4},"end":{"line":146,"column":54}},"69":{"start":{"line":148,"column":4},"end":{"line":148,"column":16}},"70":{"start":{"line":151,"column":0},"end":{"line":157,"column":2}},"71":{"start":{"line":152,"column":4},"end":{"line":152,"column":59}},"72":{"start":{"line":154,"column":4},"end":{"line":154,"column":55}},"73":{"start":{"line":156,"column":4},"end":{"line":156,"column":16}},"74":{"start":{"line":159,"column":0},"end":{"line":167,"column":2}},"75":{"start":{"line":160,"column":4},"end":{"line":160,"column":60}},"76":{"start":{"line":162,"column":4},"end":{"line":162,"column":56}},"77":{"start":{"line":164,"column":4},"end":{"line":164,"column":54}},"78":{"start":{"line":166,"column":4},"end":{"line":166,"column":16}},"79":{"start":{"line":169,"column":0},"end":{"line":192,"column":2}},"80":{"start":{"line":170,"column":4},"end":{"line":170,"column":59}},"81":{"start":{"line":172,"column":4},"end":{"line":174,"column":5}},"82":{"start":{"line":173,"column":8},"end":{"line":173,"column":60}},"83":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"84":{"start":{"line":177,"column":8},"end":{"line":177,"column":60}},"85":{"start":{"line":180,"column":4},"end":{"line":180,"column":17}},"86":{"start":{"line":181,"column":4},"end":{"line":187,"column":5}},"87":{"start":{"line":182,"column":8},"end":{"line":182,"column":26}},"88":{"start":{"line":183,"column":11},"end":{"line":187,"column":5}},"89":{"start":{"line":184,"column":8},"end":{"line":184,"column":26}},"90":{"start":{"line":186,"column":8},"end":{"line":186,"column":29}},"91":{"start":{"line":189,"column":4},"end":{"line":189,"column":59}},"92":{"start":{"line":191,"column":4},"end":{"line":191,"column":16}},"93":{"start":{"line":194,"column":0},"end":{"line":233,"column":2}},"94":{"start":{"line":195,"column":4},"end":{"line":198,"column":53}},"95":{"start":{"line":200,"column":4},"end":{"line":202,"column":5}},"96":{"start":{"line":201,"column":8},"end":{"line":201,"column":50}},"97":{"start":{"line":204,"column":4},"end":{"line":230,"column":5}},"98":{"start":{"line":205,"column":8},"end":{"line":205,"column":28}},"99":{"start":{"line":207,"column":8},"end":{"line":214,"column":9}},"100":{"start":{"line":208,"column":12},"end":{"line":209,"column":72}},"101":{"start":{"line":211,"column":12},"end":{"line":211,"column":49}},"102":{"start":{"line":213,"column":12},"end":{"line":213,"column":36}},"103":{"start":{"line":216,"column":8},"end":{"line":216,"column":30}},"104":{"start":{"line":218,"column":8},"end":{"line":225,"column":9}},"105":{"start":{"line":219,"column":12},"end":{"line":220,"column":73}},"106":{"start":{"line":222,"column":12},"end":{"line":222,"column":50}},"107":{"start":{"line":224,"column":12},"end":{"line":224,"column":37}},"108":{"start":{"line":227,"column":8},"end":{"line":227,"column":68}},"109":{"start":{"line":229,"column":8},"end":{"line":229,"column":25}},"110":{"start":{"line":232,"column":4},"end":{"line":232,"column":16}},"111":{"start":{"line":235,"column":0},"end":{"line":244,"column":2}},"112":{"start":{"line":236,"column":4},"end":{"line":243,"column":12}},"113":{"start":{"line":238,"column":12},"end":{"line":242,"column":20}},"114":{"start":{"line":240,"column":20},"end":{"line":241,"column":60}},"115":{"start":{"line":246,"column":0},"end":{"line":260,"column":2}},"116":{"start":{"line":247,"column":4},"end":{"line":247,"column":13}},"117":{"start":{"line":248,"column":4},"end":{"line":257,"column":5}},"118":{"start":{"line":249,"column":8},"end":{"line":253,"column":15}},"119":{"start":{"line":255,"column":8},"end":{"line":256,"column":62}},"120":{"start":{"line":259,"column":4},"end":{"line":259,"column":16}},"121":{"start":{"line":262,"column":0},"end":{"line":286,"column":2}},"122":{"start":{"line":263,"column":4},"end":{"line":263,"column":59}},"123":{"start":{"line":265,"column":4},"end":{"line":272,"column":5}},"124":{"start":{"line":266,"column":8},"end":{"line":267,"column":60}},"125":{"start":{"line":269,"column":8},"end":{"line":269,"column":47}},"126":{"start":{"line":271,"column":8},"end":{"line":271,"column":32}},"127":{"start":{"line":274,"column":4},"end":{"line":281,"column":5}},"128":{"start":{"line":275,"column":8},"end":{"line":276,"column":61}},"129":{"start":{"line":278,"column":8},"end":{"line":278,"column":48}},"130":{"start":{"line":280,"column":8},"end":{"line":280,"column":30}},"131":{"start":{"line":283,"column":4},"end":{"line":283,"column":59}},"132":{"start":{"line":285,"column":4},"end":{"line":285,"column":21}},"133":{"start":{"line":288,"column":0},"end":{"line":293,"column":2}},"134":{"start":{"line":289,"column":4},"end":{"line":290,"column":58}},"135":{"start":{"line":291,"column":4},"end":{"line":291,"column":45}},"136":{"start":{"line":292,"column":4},"end":{"line":292,"column":22}},"137":{"start":{"line":295,"column":0},"end":{"line":307,"column":2}},"138":{"start":{"line":296,"column":4},"end":{"line":297,"column":58}},"139":{"start":{"line":299,"column":4},"end":{"line":302,"column":25}},"140":{"start":{"line":304,"column":4},"end":{"line":304,"column":40}},"141":{"start":{"line":306,"column":4},"end":{"line":306,"column":16}},"142":{"start":{"line":309,"column":0},"end":{"line":324,"column":2}},"143":{"start":{"line":310,"column":4},"end":{"line":310,"column":13}},"144":{"start":{"line":312,"column":4},"end":{"line":321,"column":5}},"145":{"start":{"line":314,"column":8},"end":{"line":315,"column":58}},"146":{"start":{"line":317,"column":8},"end":{"line":317,"column":49}},"147":{"start":{"line":319,"column":8},"end":{"line":320,"column":69}},"148":{"start":{"line":323,"column":4},"end":{"line":323,"column":16}},"149":{"start":{"line":326,"column":0},"end":{"line":349,"column":2}},"150":{"start":{"line":327,"column":4},"end":{"line":327,"column":13}},"151":{"start":{"line":331,"column":4},"end":{"line":346,"column":5}},"152":{"start":{"line":333,"column":8},"end":{"line":334,"column":60}},"153":{"start":{"line":335,"column":11},"end":{"line":346,"column":5}},"154":{"start":{"line":337,"column":8},"end":{"line":338,"column":63}},"155":{"start":{"line":344,"column":8},"end":{"line":345,"column":72}},"156":{"start":{"line":348,"column":4},"end":{"line":348,"column":16}},"157":{"start":{"line":351,"column":0},"end":{"line":374,"column":2}},"158":{"start":{"line":352,"column":4},"end":{"line":352,"column":19}},"159":{"start":{"line":354,"column":4},"end":{"line":357,"column":5}},"160":{"start":{"line":355,"column":8},"end":{"line":356,"column":48}},"161":{"start":{"line":358,"column":4},"end":{"line":361,"column":5}},"162":{"start":{"line":359,"column":8},"end":{"line":360,"column":50}},"163":{"start":{"line":362,"column":4},"end":{"line":367,"column":5}},"164":{"start":{"line":363,"column":8},"end":{"line":363,"column":54}},"165":{"start":{"line":364,"column":8},"end":{"line":364,"column":50}},"166":{"start":{"line":365,"column":8},"end":{"line":365,"column":26}},"167":{"start":{"line":366,"column":8},"end":{"line":366,"column":74}},"168":{"start":{"line":368,"column":4},"end":{"line":371,"column":5}},"169":{"start":{"line":369,"column":8},"end":{"line":370,"column":48}},"170":{"start":{"line":373,"column":4},"end":{"line":373,"column":48}},"171":{"start":{"line":376,"column":0},"end":{"line":381,"column":2}},"172":{"start":{"line":377,"column":4},"end":{"line":378,"column":53}},"173":{"start":{"line":380,"column":4},"end":{"line":380,"column":16}},"174":{"start":{"line":383,"column":0},"end":{"line":386,"column":2}},"175":{"start":{"line":384,"column":4},"end":{"line":384,"column":32}},"176":{"start":{"line":385,"column":4},"end":{"line":385,"column":64}},"177":{"start":{"line":388,"column":0},"end":{"line":409,"column":2}},"178":{"start":{"line":389,"column":4},"end":{"line":389,"column":22}},"179":{"start":{"line":391,"column":4},"end":{"line":393,"column":5}},"180":{"start":{"line":392,"column":8},"end":{"line":392,"column":63}},"181":{"start":{"line":395,"column":4},"end":{"line":395,"column":55}},"182":{"start":{"line":397,"column":4},"end":{"line":406,"column":5}},"183":{"start":{"line":401,"column":8},"end":{"line":401,"column":43}},"184":{"start":{"line":405,"column":8},"end":{"line":405,"column":44}},"185":{"start":{"line":408,"column":4},"end":{"line":408,"column":16}},"186":{"start":{"line":411,"column":0},"end":{"line":429,"column":2}},"187":{"start":{"line":412,"column":4},"end":{"line":412,"column":60}},"188":{"start":{"line":414,"column":4},"end":{"line":414,"column":56}},"189":{"start":{"line":416,"column":4},"end":{"line":421,"column":6}},"190":{"start":{"line":423,"column":4},"end":{"line":423,"column":50}},"191":{"start":{"line":425,"column":4},"end":{"line":425,"column":46}},"192":{"start":{"line":426,"column":4},"end":{"line":426,"column":47}},"193":{"start":{"line":428,"column":4},"end":{"line":428,"column":16}},"194":{"start":{"line":431,"column":0},"end":{"line":445,"column":2}},"195":{"start":{"line":432,"column":4},"end":{"line":432,"column":60}},"196":{"start":{"line":434,"column":4},"end":{"line":434,"column":56}},"197":{"start":{"line":441,"column":4},"end":{"line":442,"column":75}},"198":{"start":{"line":444,"column":4},"end":{"line":444,"column":16}},"199":{"start":{"line":447,"column":0},"end":{"line":459,"column":2}},"200":{"start":{"line":448,"column":4},"end":{"line":449,"column":51}},"201":{"start":{"line":450,"column":4},"end":{"line":450,"column":46}},"202":{"start":{"line":452,"column":4},"end":{"line":455,"column":23}},"203":{"start":{"line":456,"column":4},"end":{"line":456,"column":40}},"204":{"start":{"line":458,"column":4},"end":{"line":458,"column":16}},"205":{"start":{"line":461,"column":0},"end":{"line":473,"column":2}},"206":{"start":{"line":462,"column":4},"end":{"line":463,"column":51}},"207":{"start":{"line":464,"column":4},"end":{"line":464,"column":46}},"208":{"start":{"line":466,"column":4},"end":{"line":469,"column":23}},"209":{"start":{"line":470,"column":4},"end":{"line":470,"column":45}},"210":{"start":{"line":472,"column":4},"end":{"line":472,"column":16}},"211":{"start":{"line":475,"column":0},"end":{"line":481,"column":2}},"212":{"start":{"line":478,"column":4},"end":{"line":478,"column":47}},"213":{"start":{"line":480,"column":4},"end":{"line":480,"column":16}},"214":{"start":{"line":483,"column":0},"end":{"line":488,"column":2}},"215":{"start":{"line":485,"column":4},"end":{"line":485,"column":47}},"216":{"start":{"line":487,"column":4},"end":{"line":487,"column":16}},"217":{"start":{"line":490,"column":0},"end":{"line":498,"column":2}},"218":{"start":{"line":491,"column":4},"end":{"line":492,"column":60}},"219":{"start":{"line":494,"column":4},"end":{"line":494,"column":43}},"220":{"start":{"line":495,"column":4},"end":{"line":495,"column":38}},"221":{"start":{"line":497,"column":4},"end":{"line":497,"column":16}},"222":{"start":{"line":500,"column":0},"end":{"line":507,"column":2}},"223":{"start":{"line":501,"column":4},"end":{"line":502,"column":60}},"224":{"start":{"line":504,"column":4},"end":{"line":504,"column":38}},"225":{"start":{"line":506,"column":4},"end":{"line":506,"column":16}},"226":{"start":{"line":509,"column":0},"end":{"line":512,"column":2}},"227":{"start":{"line":510,"column":4},"end":{"line":510,"column":60}},"228":{"start":{"line":511,"column":4},"end":{"line":511,"column":54}},"229":{"start":{"line":514,"column":0},"end":{"line":517,"column":2}},"230":{"start":{"line":515,"column":4},"end":{"line":515,"column":60}},"231":{"start":{"line":516,"column":4},"end":{"line":516,"column":52}},"232":{"start":{"line":524,"column":0},"end":{"line":531,"column":2}},"233":{"start":{"line":525,"column":4},"end":{"line":525,"column":20}},"234":{"start":{"line":526,"column":4},"end":{"line":529,"column":5}},"235":{"start":{"line":527,"column":8},"end":{"line":527,"column":34}},"236":{"start":{"line":528,"column":8},"end":{"line":528,"column":48}},"237":{"start":{"line":530,"column":4},"end":{"line":530,"column":18}},"238":{"start":{"line":537,"column":0},"end":{"line":549,"column":2}},"239":{"start":{"line":538,"column":4},"end":{"line":540,"column":5}},"240":{"start":{"line":539,"column":8},"end":{"line":539,"column":47}},"241":{"start":{"line":542,"column":4},"end":{"line":548,"column":5}},"242":{"start":{"line":544,"column":8},"end":{"line":544,"column":54}},"243":{"start":{"line":546,"column":8},"end":{"line":547,"column":63}},"244":{"start":{"line":559,"column":0},"end":{"line":579,"column":2}},"245":{"start":{"line":560,"column":4},"end":{"line":560,"column":52}},"246":{"start":{"line":564,"column":4},"end":{"line":564,"column":62}},"247":{"start":{"line":567,"column":4},"end":{"line":568,"column":64}},"248":{"start":{"line":570,"column":4},"end":{"line":570,"column":61}},"249":{"start":{"line":572,"column":4},"end":{"line":573,"column":44}},"250":{"start":{"line":575,"column":4},"end":{"line":575,"column":60}},"251":{"start":{"line":578,"column":4},"end":{"line":578,"column":46}},"252":{"start":{"line":581,"column":0},"end":{"line":581,"column":29}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":27}},{"start":{"line":22,"column":31},"end":{"line":22,"column":58}}]},"3":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"4":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"5":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"6":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":4},"end":{"line":48,"column":4}},{"start":{"line":48,"column":4},"end":{"line":48,"column":4}}]},"7":{"line":48,"type":"binary-expr","locations":[{"start":{"line":48,"column":8},"end":{"line":48,"column":28}},{"start":{"line":48,"column":32},"end":{"line":48,"column":60}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"9":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":4},"end":{"line":72,"column":4}},{"start":{"line":72,"column":4},"end":{"line":72,"column":4}}]},"10":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":18},"end":{"line":81,"column":44}},{"start":{"line":81,"column":48},"end":{"line":81,"column":56}}]},"11":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"12":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":88,"column":8}},{"start":{"line":88,"column":8},"end":{"line":88,"column":8}}]},"13":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":4},"end":{"line":172,"column":4}},{"start":{"line":172,"column":4},"end":{"line":172,"column":4}}]},"14":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":4}},{"start":{"line":176,"column":4},"end":{"line":176,"column":4}}]},"15":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"16":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":11},"end":{"line":183,"column":11}},{"start":{"line":183,"column":11},"end":{"line":183,"column":11}}]},"17":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":200,"column":4}},{"start":{"line":200,"column":4},"end":{"line":200,"column":4}}]},"18":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":204,"column":4}},{"start":{"line":204,"column":4},"end":{"line":204,"column":4}}]},"19":{"line":204,"type":"binary-expr","locations":[{"start":{"line":204,"column":8},"end":{"line":204,"column":37}},{"start":{"line":204,"column":41},"end":{"line":204,"column":71}}]},"20":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"21":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":8}},{"start":{"line":218,"column":8},"end":{"line":218,"column":8}}]},"22":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":4},"end":{"line":248,"column":4}},{"start":{"line":248,"column":4},"end":{"line":248,"column":4}}]},"23":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":4},"end":{"line":265,"column":4}},{"start":{"line":265,"column":4},"end":{"line":265,"column":4}}]},"24":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":4},"end":{"line":274,"column":4}},{"start":{"line":274,"column":4},"end":{"line":274,"column":4}}]},"25":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":4},"end":{"line":312,"column":4}},{"start":{"line":312,"column":4},"end":{"line":312,"column":4}}]},"26":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":8},"end":{"line":312,"column":29}},{"start":{"line":312,"column":33},"end":{"line":312,"column":58}},{"start":{"line":313,"column":8},"end":{"line":313,"column":27}},{"start":{"line":313,"column":31},"end":{"line":313,"column":50}}]},"27":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":4},"end":{"line":331,"column":4}},{"start":{"line":331,"column":4},"end":{"line":331,"column":4}}]},"28":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":11},"end":{"line":335,"column":11}},{"start":{"line":335,"column":11},"end":{"line":335,"column":11}}]},"29":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":4},"end":{"line":354,"column":4}},{"start":{"line":354,"column":4},"end":{"line":354,"column":4}}]},"30":{"line":354,"type":"binary-expr","locations":[{"start":{"line":354,"column":8},"end":{"line":354,"column":37}},{"start":{"line":354,"column":41},"end":{"line":354,"column":71}}]},"31":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":4},"end":{"line":358,"column":4}},{"start":{"line":358,"column":4},"end":{"line":358,"column":4}}]},"32":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":4},"end":{"line":362,"column":4}},{"start":{"line":362,"column":4},"end":{"line":362,"column":4}}]},"33":{"line":368,"type":"if","locations":[{"start":{"line":368,"column":4},"end":{"line":368,"column":4}},{"start":{"line":368,"column":4},"end":{"line":368,"column":4}}]},"34":{"line":368,"type":"binary-expr","locations":[{"start":{"line":368,"column":8},"end":{"line":368,"column":37}},{"start":{"line":368,"column":41},"end":{"line":368,"column":71}}]},"35":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":4},"end":{"line":391,"column":4}},{"start":{"line":391,"column":4},"end":{"line":391,"column":4}}]},"36":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":4},"end":{"line":397,"column":4}},{"start":{"line":397,"column":4},"end":{"line":397,"column":4}}]},"37":{"line":397,"type":"binary-expr","locations":[{"start":{"line":397,"column":8},"end":{"line":397,"column":38}},{"start":{"line":398,"column":8},"end":{"line":398,"column":39}}]},"38":{"line":538,"type":"if","locations":[{"start":{"line":538,"column":4},"end":{"line":538,"column":4}},{"start":{"line":538,"column":4},"end":{"line":538,"column":4}}]},"39":{"line":542,"type":"if","locations":[{"start":{"line":542,"column":4},"end":{"line":542,"column":4}},{"start":{"line":542,"column":4},"end":{"line":542,"column":4}}]}},"code":["/**"," * This file converts a parse tree into a cooresponding MathML tree. The main"," * entry point is the `buildMathML` function, which takes a parse tree from the"," * parser."," */","","var buildCommon = require(\"./buildCommon\");","var fontMetrics = require(\"./fontMetrics\");","var mathMLTree = require(\"./mathMLTree\");","var ParseError = require(\"./ParseError\");","var symbols = require(\"./symbols\");","var utils = require(\"./utils\");","","var makeSpan = buildCommon.makeSpan;","var fontMap = buildCommon.fontMap;","","/**"," * Takes a symbol and converts it into a MathML text node after performing"," * optional replacement from symbols.js."," */","var makeText = function(text, mode) {","    if (symbols[mode][text] && symbols[mode][text].replace) {","        text = symbols[mode][text].replace;","    }","","    return new mathMLTree.TextNode(text);","};","","/**"," * Returns the math variant as a string or null if none is required."," */","var getVariant = function(group, options) {","    var font = options.font;","    if (!font) {","        return null;","    }","","    var mode = group.mode;","    if (font === \"mathit\") {","        return \"italic\";","    }","","    var value = group.value;","    if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], value)) {","        return null;","    }","","    if (symbols[mode][value] && symbols[mode][value].replace) {","        value = symbols[mode][value].replace;","    }","","    var fontName = fontMap[font].fontName;","    if (fontMetrics.getCharacterMetrics(value, fontName)) {","        return fontMap[options.font].variant;","    }","","    return null;","};","","/**"," * Functions for handling the different types of groups found in the parse"," * tree. Each function should take a parse group and return a MathML node."," */","var groupTypes = {};","","groupTypes.mathord = function(group, options) {","    var node = new mathMLTree.MathNode(","        \"mi\",","        [makeText(group.value, group.mode)]);","","    var variant = getVariant(group, options);","    if (variant) {","        node.setAttribute(\"mathvariant\", variant);","    }","    return node;","};","","groupTypes.textord = function(group, options) {","    var text = makeText(group.value, group.mode);","","    var variant = getVariant(group, options) || \"normal\";","","    var node;","    if (/[0-9]/.test(group.value)) {","        // TODO(kevinb) merge adjacent <mn> nodes","        // do it as a post processing step","        node = new mathMLTree.MathNode(\"mn\", [text]);","        if (options.font) {","            node.setAttribute(\"mathvariant\", variant);","        }","    } else {","        node = new mathMLTree.MathNode(\"mi\", [text]);","        node.setAttribute(\"mathvariant\", variant);","    }","","    return node;","};","","groupTypes.bin = function(group) {","    var node = new mathMLTree.MathNode(","        \"mo\", [makeText(group.value, group.mode)]);","","    return node;","};","","groupTypes.rel = function(group) {","    var node = new mathMLTree.MathNode(","        \"mo\", [makeText(group.value, group.mode)]);","","    return node;","};","","groupTypes.open = function(group) {","    var node = new mathMLTree.MathNode(","        \"mo\", [makeText(group.value, group.mode)]);","","    return node;","};","","groupTypes.close = function(group) {","    var node = new mathMLTree.MathNode(","        \"mo\", [makeText(group.value, group.mode)]);","","    return node;","};","","groupTypes.inner = function(group) {","    var node = new mathMLTree.MathNode(","        \"mo\", [makeText(group.value, group.mode)]);","","    return node;","};","","groupTypes.punct = function(group) {","    var node = new mathMLTree.MathNode(","        \"mo\", [makeText(group.value, group.mode)]);","","    node.setAttribute(\"separator\", \"true\");","","    return node;","};","","groupTypes.ordgroup = function(group, options) {","    var inner = buildExpression(group.value, options);","","    var node = new mathMLTree.MathNode(\"mrow\", inner);","","    return node;","};","","groupTypes.text = function(group, options) {","    var inner = buildExpression(group.value.body, options);","","    var node = new mathMLTree.MathNode(\"mtext\", inner);","","    return node;","};","","groupTypes.color = function(group, options) {","    var inner = buildExpression(group.value.value, options);","","    var node = new mathMLTree.MathNode(\"mstyle\", inner);","","    node.setAttribute(\"mathcolor\", group.value.color);","","    return node;","};","","groupTypes.supsub = function(group, options) {","    var children = [buildGroup(group.value.base, options)];","","    if (group.value.sub) {","        children.push(buildGroup(group.value.sub, options));","    }","","    if (group.value.sup) {","        children.push(buildGroup(group.value.sup, options));","    }","","    var nodeType;","    if (!group.value.sub) {","        nodeType = \"msup\";","    } else if (!group.value.sup) {","        nodeType = \"msub\";","    } else {","        nodeType = \"msubsup\";","    }","","    var node = new mathMLTree.MathNode(nodeType, children);","","    return node;","};","","groupTypes.genfrac = function(group, options) {","    var node = new mathMLTree.MathNode(","        \"mfrac\",","        [buildGroup(group.value.numer, options),","            buildGroup(group.value.denom, options)]);","","    if (!group.value.hasBarLine) {","        node.setAttribute(\"linethickness\", \"0px\");","    }","","    if (group.value.leftDelim != null || group.value.rightDelim != null) {","        var withDelims = [];","","        if (group.value.leftDelim != null) {","            var leftOp = new mathMLTree.MathNode(","                \"mo\", [new mathMLTree.TextNode(group.value.leftDelim)]);","","            leftOp.setAttribute(\"fence\", \"true\");","","            withDelims.push(leftOp);","        }","","        withDelims.push(node);","","        if (group.value.rightDelim != null) {","            var rightOp = new mathMLTree.MathNode(","                \"mo\", [new mathMLTree.TextNode(group.value.rightDelim)]);","","            rightOp.setAttribute(\"fence\", \"true\");","","            withDelims.push(rightOp);","        }","","        var outerNode = new mathMLTree.MathNode(\"mrow\", withDelims);","","        return outerNode;","    }","","    return node;","};","","groupTypes.array = function(group, options) {","    return new mathMLTree.MathNode(","        \"mtable\", group.value.body.map(function(row) {","            return new mathMLTree.MathNode(","                \"mtr\", row.map(function(cell) {","                    return new mathMLTree.MathNode(","                        \"mtd\", [buildGroup(cell, options)]);","                }));","        }));","};","","groupTypes.sqrt = function(group, options) {","    var node;","    if (group.value.index) {","        node = new mathMLTree.MathNode(","            \"mroot\", [","                buildGroup(group.value.body, options),","                buildGroup(group.value.index, options)","            ]);","    } else {","        node = new mathMLTree.MathNode(","            \"msqrt\", [buildGroup(group.value.body, options)]);","    }","","    return node;","};","","groupTypes.leftright = function(group, options) {","    var inner = buildExpression(group.value.body, options);","","    if (group.value.left !== \".\") {","        var leftNode = new mathMLTree.MathNode(","            \"mo\", [makeText(group.value.left, group.mode)]);","","        leftNode.setAttribute(\"fence\", \"true\");","","        inner.unshift(leftNode);","    }","","    if (group.value.right !== \".\") {","        var rightNode = new mathMLTree.MathNode(","            \"mo\", [makeText(group.value.right, group.mode)]);","","        rightNode.setAttribute(\"fence\", \"true\");","","        inner.push(rightNode);","    }","","    var outerNode = new mathMLTree.MathNode(\"mrow\", inner);","","    return outerNode;","};","","groupTypes.middle = function(group, options) {","    var middleNode = new mathMLTree.MathNode(","        \"mo\", [makeText(group.value.middle, group.mode)]);","    middleNode.setAttribute(\"fence\", \"true\");","    return middleNode;","};","","groupTypes.accent = function(group, options) {","    var accentNode = new mathMLTree.MathNode(","        \"mo\", [makeText(group.value.accent, group.mode)]);","","    var node = new mathMLTree.MathNode(","        \"mover\",","        [buildGroup(group.value.base, options),","            accentNode]);","","    node.setAttribute(\"accent\", \"true\");","","    return node;","};","","groupTypes.spacing = function(group) {","    var node;","","    if (group.value === \"\\\\ \" || group.value === \"\\\\space\" ||","        group.value === \" \" || group.value === \"~\") {","        node = new mathMLTree.MathNode(","            \"mtext\", [new mathMLTree.TextNode(\"\\u00a0\")]);","    } else {","        node = new mathMLTree.MathNode(\"mspace\");","","        node.setAttribute(","            \"width\", buildCommon.spacingFunctions[group.value].size);","    }","","    return node;","};","","groupTypes.op = function(group, options) {","    var node;","","    // TODO(emily): handle big operators using the `largeop` attribute","","    if (group.value.symbol) {","        // This is a symbol. Just add the symbol.","        node = new mathMLTree.MathNode(","            \"mo\", [makeText(group.value.body, group.mode)]);","    } else if (group.value.value) {","        // This is an operator with children. Add them.","        node = new mathMLTree.MathNode(","            \"mo\", buildExpression(group.value.value, options));","    } else {","        // This is a text operator. Add all of the characters from the","        // operator's name.","        // TODO(emily): Add a space in the middle of some of these","        // operators, like \\limsup.","        node = new mathMLTree.MathNode(","            \"mi\", [new mathMLTree.TextNode(group.value.body.slice(1))]);","    }","","    return node;","};","","groupTypes.mod = function(group, options) {","    var inner = [];","","    if (group.value.modType === \"pod\" || group.value.modType === \"pmod\") {","        inner.push(new mathMLTree.MathNode(","            \"mo\", [makeText(\"(\", group.mode)]));","    }","    if (group.value.modType !== \"pod\") {","        inner.push(new mathMLTree.MathNode(","            \"mo\", [makeText(\"mod\", group.mode)]));","    }","    if (group.value.value) {","        var space = new mathMLTree.MathNode(\"mspace\");","        space.setAttribute(\"width\", \"0.333333em\");","        inner.push(space);","        inner = inner.concat(buildExpression(group.value.value, options));","    }","    if (group.value.modType === \"pod\" || group.value.modType === \"pmod\") {","        inner.push(new mathMLTree.MathNode(","            \"mo\", [makeText(\")\", group.mode)]));","    }","","    return new mathMLTree.MathNode(\"mo\", inner);","};","","groupTypes.katex = function(group) {","    var node = new mathMLTree.MathNode(","        \"mtext\", [new mathMLTree.TextNode(\"KaTeX\")]);","","    return node;","};","","groupTypes.font = function(group, options) {","    var font = group.value.font;","    return buildGroup(group.value.body, options.withFont(font));","};","","groupTypes.delimsizing = function(group) {","    var children = [];","","    if (group.value.value !== \".\") {","        children.push(makeText(group.value.value, group.mode));","    }","","    var node = new mathMLTree.MathNode(\"mo\", children);","","    if (group.value.mclass === \"mopen\" ||","        group.value.mclass === \"mclose\") {","        // Only some of the delimsizing functions act as fences, and they","        // return \"mopen\" or \"mclose\" mclass.","        node.setAttribute(\"fence\", \"true\");","    } else {","        // Explicitly disable fencing if it's not a fence, to override the","        // defaults.","        node.setAttribute(\"fence\", \"false\");","    }","","    return node;","};","","groupTypes.styling = function(group, options) {","    var inner = buildExpression(group.value.value, options);","","    var node = new mathMLTree.MathNode(\"mstyle\", inner);","","    var styleAttributes = {","        \"display\": [\"0\", \"true\"],","        \"text\": [\"0\", \"false\"],","        \"script\": [\"1\", \"false\"],","        \"scriptscript\": [\"2\", \"false\"]","    };","","    var attr = styleAttributes[group.value.style];","","    node.setAttribute(\"scriptlevel\", attr[0]);","    node.setAttribute(\"displaystyle\", attr[1]);","","    return node;","};","","groupTypes.sizing = function(group, options) {","    var inner = buildExpression(group.value.value, options);","","    var node = new mathMLTree.MathNode(\"mstyle\", inner);","","    // TODO(emily): This doesn't produce the correct size for nested size","    // changes, because we don't keep state of what style we're currently","    // in, so we can't reset the size to normal before changing it.  Now","    // that we're passing an options parameter we should be able to fix","    // this.","    node.setAttribute(","        \"mathsize\", buildCommon.sizingMultiplier[group.value.size] + \"em\");","","    return node;","};","","groupTypes.overline = function(group, options) {","    var operator = new mathMLTree.MathNode(","        \"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);","    operator.setAttribute(\"stretchy\", \"true\");","","    var node = new mathMLTree.MathNode(","        \"mover\",","        [buildGroup(group.value.body, options),","            operator]);","    node.setAttribute(\"accent\", \"true\");","","    return node;","};","","groupTypes.underline = function(group, options) {","    var operator = new mathMLTree.MathNode(","        \"mo\", [new mathMLTree.TextNode(\"\\u203e\")]);","    operator.setAttribute(\"stretchy\", \"true\");","","    var node = new mathMLTree.MathNode(","        \"munder\",","        [buildGroup(group.value.body, options),","            operator]);","    node.setAttribute(\"accentunder\", \"true\");","","    return node;","};","","groupTypes.rule = function(group) {","    // TODO(emily): Figure out if there's an actual way to draw black boxes","    // in MathML.","    var node = new mathMLTree.MathNode(\"mrow\");","","    return node;","};","","groupTypes.kern = function(group) {","    // TODO(kevin): Figure out if there's a way to add space in MathML","    var node = new mathMLTree.MathNode(\"mrow\");","","    return node;","};","","groupTypes.llap = function(group, options) {","    var node = new mathMLTree.MathNode(","        \"mpadded\", [buildGroup(group.value.body, options)]);","","    node.setAttribute(\"lspace\", \"-1width\");","    node.setAttribute(\"width\", \"0px\");","","    return node;","};","","groupTypes.rlap = function(group, options) {","    var node = new mathMLTree.MathNode(","        \"mpadded\", [buildGroup(group.value.body, options)]);","","    node.setAttribute(\"width\", \"0px\");","","    return node;","};","","groupTypes.phantom = function(group, options) {","    var inner = buildExpression(group.value.value, options);","    return new mathMLTree.MathNode(\"mphantom\", inner);","};","","groupTypes.mclass = function(group, options) {","    var inner = buildExpression(group.value.value, options);","    return new mathMLTree.MathNode(\"mstyle\", inner);","};","","/**"," * Takes a list of nodes, builds them, and returns a list of the generated"," * MathML nodes. A little simpler than the HTML version because we don't do any"," * previous-node handling."," */","var buildExpression = function(expression, options) {","    var groups = [];","    for (var i = 0; i < expression.length; i++) {","        var group = expression[i];","        groups.push(buildGroup(group, options));","    }","    return groups;","};","","/**"," * Takes a group from the parser and calls the appropriate groupTypes function"," * on it to produce a MathML node."," */","var buildGroup = function(group, options) {","    if (!group) {","        return new mathMLTree.MathNode(\"mrow\");","    }","","    if (groupTypes[group.type]) {","        // Call the groupTypes function","        return groupTypes[group.type](group, options);","    } else {","        throw new ParseError(","            \"Got group of unknown type: '\" + group.type + \"'\");","    }","};","","/**"," * Takes a full parse tree and settings and builds a MathML representation of"," * it. In particular, we put the elements from building the parse tree into a"," * <semantics> tag so we can also include that TeX source as an annotation."," *"," * Note that we actually return a domTree element with a `<math>` inside it so"," * we can do appropriate styling."," */","var buildMathML = function(tree, texExpression, options) {","    var expression = buildExpression(tree, options);","","    // Wrap up the expression in an mrow so it is presented in the semantics","    // tag correctly.","    var wrapper = new mathMLTree.MathNode(\"mrow\", expression);","","    // Build a TeX annotation of the source","    var annotation = new mathMLTree.MathNode(","        \"annotation\", [new mathMLTree.TextNode(texExpression)]);","","    annotation.setAttribute(\"encoding\", \"application/x-tex\");","","    var semantics = new mathMLTree.MathNode(","        \"semantics\", [wrapper, annotation]);","","    var math = new mathMLTree.MathNode(\"math\", [semantics]);","","    // You can't style <math> nodes, so we wrap the node in a span.","    return makeSpan([\"katex-mathml\"], [math]);","};","","module.exports = buildMathML;",""],"l":{"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"14":1,"15":1,"21":1,"22":0,"23":0,"26":0,"32":1,"33":0,"34":0,"35":0,"38":0,"39":0,"40":0,"43":0,"44":0,"45":0,"48":0,"49":0,"52":0,"53":0,"54":0,"57":0,"64":1,"66":1,"67":0,"71":0,"72":0,"73":0,"75":0,"78":1,"79":0,"81":0,"83":0,"84":0,"87":0,"88":0,"89":0,"92":0,"93":0,"96":0,"99":1,"100":0,"103":0,"106":1,"107":0,"110":0,"113":1,"114":0,"117":0,"120":1,"121":0,"124":0,"127":1,"128":0,"131":0,"134":1,"135":0,"138":0,"140":0,"143":1,"144":0,"146":0,"148":0,"151":1,"152":0,"154":0,"156":0,"159":1,"160":0,"162":0,"164":0,"166":0,"169":1,"170":0,"172":0,"173":0,"176":0,"177":0,"180":0,"181":0,"182":0,"183":0,"184":0,"186":0,"189":0,"191":0,"194":1,"195":0,"200":0,"201":0,"204":0,"205":0,"207":0,"208":0,"211":0,"213":0,"216":0,"218":0,"219":0,"222":0,"224":0,"227":0,"229":0,"232":0,"235":1,"236":0,"238":0,"240":0,"246":1,"247":0,"248":0,"249":0,"255":0,"259":0,"262":1,"263":0,"265":0,"266":0,"269":0,"271":0,"274":0,"275":0,"278":0,"280":0,"283":0,"285":0,"288":1,"289":0,"291":0,"292":0,"295":1,"296":0,"299":0,"304":0,"306":0,"309":1,"310":0,"312":0,"314":0,"317":0,"319":0,"323":0,"326":1,"327":0,"331":0,"333":0,"335":0,"337":0,"344":0,"348":0,"351":1,"352":0,"354":0,"355":0,"358":0,"359":0,"362":0,"363":0,"364":0,"365":0,"366":0,"368":0,"369":0,"373":0,"376":1,"377":0,"380":0,"383":1,"384":0,"385":0,"388":1,"389":0,"391":0,"392":0,"395":0,"397":0,"401":0,"405":0,"408":0,"411":1,"412":0,"414":0,"416":0,"423":0,"425":0,"426":0,"428":0,"431":1,"432":0,"434":0,"441":0,"444":0,"447":1,"448":0,"450":0,"452":0,"456":0,"458":0,"461":1,"462":0,"464":0,"466":0,"470":0,"472":0,"475":1,"478":0,"480":0,"483":1,"485":0,"487":0,"490":1,"491":0,"494":0,"495":0,"497":0,"500":1,"501":0,"504":0,"506":0,"509":1,"510":0,"511":0,"514":1,"515":0,"516":0,"524":1,"525":0,"526":0,"527":0,"528":0,"530":0,"537":1,"538":0,"539":0,"542":0,"544":0,"546":0,"559":1,"560":0,"564":0,"567":0,"570":0,"572":0,"575":0,"578":0,"581":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/mathMLTree.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/mathMLTree.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"MathNode","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":34}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":34},"end":{"line":28,"column":56}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":28},"end":{"line":35,"column":39}}},"4":{"name":"(anonymous_4)","line":55,"loc":{"start":{"line":55,"column":30},"end":{"line":55,"column":41}}},"5":{"name":"TextNode","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":24}}},"6":{"name":"(anonymous_6)","line":88,"loc":{"start":{"line":88,"column":28},"end":{"line":88,"column":39}}},"7":{"name":"(anonymous_7)","line":95,"loc":{"start":{"line":95,"column":30},"end":{"line":95,"column":41}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":11,"column":31}},"2":{"start":{"line":18,"column":0},"end":{"line":22,"column":1}},"3":{"start":{"line":19,"column":4},"end":{"line":19,"column":21}},"4":{"start":{"line":20,"column":4},"end":{"line":20,"column":25}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":35}},"6":{"start":{"line":28,"column":0},"end":{"line":30,"column":2}},"7":{"start":{"line":29,"column":4},"end":{"line":29,"column":34}},"8":{"start":{"line":35,"column":0},"end":{"line":50,"column":2}},"9":{"start":{"line":36,"column":4},"end":{"line":37,"column":57}},"10":{"start":{"line":39,"column":4},"end":{"line":43,"column":5}},"11":{"start":{"line":40,"column":8},"end":{"line":42,"column":9}},"12":{"start":{"line":41,"column":12},"end":{"line":41,"column":59}},"13":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"14":{"start":{"line":46,"column":8},"end":{"line":46,"column":52}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":16}},"16":{"start":{"line":55,"column":0},"end":{"line":76,"column":2}},"17":{"start":{"line":56,"column":4},"end":{"line":56,"column":33}},"18":{"start":{"line":59,"column":4},"end":{"line":65,"column":5}},"19":{"start":{"line":60,"column":8},"end":{"line":64,"column":9}},"20":{"start":{"line":61,"column":12},"end":{"line":61,"column":41}},"21":{"start":{"line":62,"column":12},"end":{"line":62,"column":58}},"22":{"start":{"line":63,"column":12},"end":{"line":63,"column":27}},"23":{"start":{"line":67,"column":4},"end":{"line":67,"column":18}},"24":{"start":{"line":69,"column":4},"end":{"line":71,"column":5}},"25":{"start":{"line":70,"column":8},"end":{"line":70,"column":46}},"26":{"start":{"line":73,"column":4},"end":{"line":73,"column":37}},"27":{"start":{"line":75,"column":4},"end":{"line":75,"column":18}},"28":{"start":{"line":81,"column":0},"end":{"line":83,"column":1}},"29":{"start":{"line":82,"column":4},"end":{"line":82,"column":21}},"30":{"start":{"line":88,"column":0},"end":{"line":90,"column":2}},"31":{"start":{"line":89,"column":4},"end":{"line":89,"column":46}},"32":{"start":{"line":95,"column":0},"end":{"line":97,"column":2}},"33":{"start":{"line":96,"column":4},"end":{"line":96,"column":35}},"34":{"start":{"line":99,"column":0},"end":{"line":102,"column":2}}},"branchMap":{"1":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":20},"end":{"line":21,"column":28}},{"start":{"line":21,"column":32},"end":{"line":21,"column":34}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]},"3":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":8}},{"start":{"line":60,"column":8},"end":{"line":60,"column":8}}]}},"code":["/**"," * These objects store data about MathML nodes. This is the MathML equivalent"," * of the types in domTree.js. Since MathML handles its own rendering, and"," * since we're mainly using MathML to improve accessibility, we don't manage"," * any of the styling state that the plain DOM nodes do."," *"," * The `toNode` and `toMarkup` functions work simlarly to how they do in"," * domTree.js, creating namespaced DOM nodes and HTML text markup respectively."," */","","var utils = require(\"./utils\");","","/**"," * This node represents a general purpose MathML node of any type. The"," * constructor requires the type of node to create (for example, `\"mo\"` or"," * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags)."," */","function MathNode(type, children) {","    this.type = type;","    this.attributes = {};","    this.children = children || [];","}","","/**"," * Sets an attribute on a MathML node. MathML depends on attributes to convey a"," * semantic content, so this is used heavily."," */","MathNode.prototype.setAttribute = function(name, value) {","    this.attributes[name] = value;","};","","/**"," * Converts the math node into a MathML-namespaced DOM element."," */","MathNode.prototype.toNode = function() {","    var node = document.createElementNS(","        \"http://www.w3.org/1998/Math/MathML\", this.type);","","    for (var attr in this.attributes) {","        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {","            node.setAttribute(attr, this.attributes[attr]);","        }","    }","","    for (var i = 0; i < this.children.length; i++) {","        node.appendChild(this.children[i].toNode());","    }","","    return node;","};","","/**"," * Converts the math node into an HTML markup string."," */","MathNode.prototype.toMarkup = function() {","    var markup = \"<\" + this.type;","","    // Add the attributes","    for (var attr in this.attributes) {","        if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {","            markup += \" \" + attr + \"=\\\"\";","            markup += utils.escape(this.attributes[attr]);","            markup += \"\\\"\";","        }","    }","","    markup += \">\";","","    for (var i = 0; i < this.children.length; i++) {","        markup += this.children[i].toMarkup();","    }","","    markup += \"</\" + this.type + \">\";","","    return markup;","};","","/**"," * This node represents a piece of text."," */","function TextNode(text) {","    this.text = text;","}","","/**"," * Converts the text node into a DOM text node."," */","TextNode.prototype.toNode = function() {","    return document.createTextNode(this.text);","};","","/**"," * Converts the text node into HTML markup (which is just the text itself)."," */","TextNode.prototype.toMarkup = function() {","    return utils.escape(this.text);","};","","module.exports = {","    MathNode: MathNode,","    TextNode: TextNode","};",""],"l":{"11":1,"18":1,"19":0,"20":0,"21":0,"28":1,"29":0,"35":1,"36":0,"39":0,"40":0,"41":0,"45":0,"46":0,"49":0,"55":1,"56":0,"59":0,"60":0,"61":0,"62":0,"63":0,"67":0,"69":0,"70":0,"73":0,"75":0,"81":1,"82":0,"88":1,"89":0,"95":1,"96":0,"99":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/Options.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/Options.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":1,"24":0,"25":1,"26":0,"27":1,"28":0,"29":1,"30":0,"31":1,"32":1,"33":0,"34":0,"35":0,"36":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"Options","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":23}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":27},"end":{"line":41,"column":47}}},"3":{"name":"(anonymous_3)","line":64,"loc":{"start":{"line":64,"column":30},"end":{"line":64,"column":46}}},"4":{"name":"(anonymous_4)","line":73,"loc":{"start":{"line":73,"column":29},"end":{"line":73,"column":44}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":30},"end":{"line":82,"column":46}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":32},"end":{"line":91,"column":43}}},"7":{"name":"(anonymous_7)","line":100,"loc":{"start":{"line":100,"column":29},"end":{"line":100,"column":44}}},"8":{"name":"(anonymous_8)","line":110,"loc":{"start":{"line":110,"column":26},"end":{"line":110,"column":37}}},"9":{"name":"(anonymous_9)","line":181,"loc":{"start":{"line":181,"column":29},"end":{"line":181,"column":40}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":35,"column":1}},"2":{"start":{"line":18,"column":4},"end":{"line":18,"column":28}},"3":{"start":{"line":19,"column":4},"end":{"line":19,"column":28}},"4":{"start":{"line":20,"column":4},"end":{"line":20,"column":26}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":32}},"6":{"start":{"line":22,"column":4},"end":{"line":22,"column":26}},"7":{"start":{"line":24,"column":4},"end":{"line":28,"column":5}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":38}},"9":{"start":{"line":27,"column":8},"end":{"line":27,"column":44}},"10":{"start":{"line":30,"column":4},"end":{"line":34,"column":5}},"11":{"start":{"line":31,"column":8},"end":{"line":31,"column":36}},"12":{"start":{"line":33,"column":8},"end":{"line":33,"column":42}},"13":{"start":{"line":41,"column":0},"end":{"line":59,"column":2}},"14":{"start":{"line":42,"column":4},"end":{"line":50,"column":6}},"15":{"start":{"line":52,"column":4},"end":{"line":56,"column":5}},"16":{"start":{"line":53,"column":8},"end":{"line":55,"column":9}},"17":{"start":{"line":54,"column":12},"end":{"line":54,"column":39}},"18":{"start":{"line":58,"column":4},"end":{"line":58,"column":29}},"19":{"start":{"line":64,"column":0},"end":{"line":68,"column":2}},"20":{"start":{"line":65,"column":4},"end":{"line":67,"column":7}},"21":{"start":{"line":73,"column":0},"end":{"line":77,"column":2}},"22":{"start":{"line":74,"column":4},"end":{"line":76,"column":7}},"23":{"start":{"line":82,"column":0},"end":{"line":86,"column":2}},"24":{"start":{"line":83,"column":4},"end":{"line":85,"column":7}},"25":{"start":{"line":91,"column":0},"end":{"line":95,"column":2}},"26":{"start":{"line":92,"column":4},"end":{"line":94,"column":7}},"27":{"start":{"line":100,"column":0},"end":{"line":104,"column":2}},"28":{"start":{"line":101,"column":4},"end":{"line":103,"column":7}},"29":{"start":{"line":110,"column":0},"end":{"line":112,"column":2}},"30":{"start":{"line":111,"column":4},"end":{"line":111,"column":27}},"31":{"start":{"line":118,"column":0},"end":{"line":175,"column":2}},"32":{"start":{"line":181,"column":0},"end":{"line":187,"column":2}},"33":{"start":{"line":182,"column":4},"end":{"line":186,"column":5}},"34":{"start":{"line":183,"column":8},"end":{"line":183,"column":29}},"35":{"start":{"line":185,"column":8},"end":{"line":185,"column":50}},"36":{"start":{"line":189,"column":0},"end":{"line":189,"column":25}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":4},"end":{"line":24,"column":4}},{"start":{"line":24,"column":4},"end":{"line":24,"column":4}}]},"2":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"3":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":53,"column":8}},{"start":{"line":53,"column":8},"end":{"line":53,"column":8}}]},"4":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":14},"end":{"line":102,"column":18}},{"start":{"line":102,"column":22},"end":{"line":102,"column":31}}]},"5":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":182,"column":4}},{"start":{"line":182,"column":4},"end":{"line":182,"column":4}}]},"6":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":15},"end":{"line":185,"column":35}},{"start":{"line":185,"column":39},"end":{"line":185,"column":49}}]}},"code":["/**"," * This file contains information about the options that the Parser carries"," * around with it while parsing. Data is held in an `Options` object, and when"," * recursing, a new `Options` object can be created with the `.with*` and"," * `.reset` functions."," */","","/**"," * This is the main options class. It contains the style, size, color, and font"," * of the current parse level. It also contains the style and size of the parent"," * parse level, so size changes can be handled efficiently."," *"," * Each of the `.with*` and `.reset` functions passes its current style and size"," * as the parentStyle and parentSize of the new options class, so parent"," * handling is taken care of automatically."," */","function Options(data) {","    this.style = data.style;","    this.color = data.color;","    this.size = data.size;","    this.phantom = data.phantom;","    this.font = data.font;","","    if (data.parentStyle === undefined) {","        this.parentStyle = data.style;","    } else {","        this.parentStyle = data.parentStyle;","    }","","    if (data.parentSize === undefined) {","        this.parentSize = data.size;","    } else {","        this.parentSize = data.parentSize;","    }","}","","/**"," * Returns a new options object with the same properties as \"this\".  Properties"," * from \"extension\" will be copied to the new options object."," */","Options.prototype.extend = function(extension) {","    var data = {","        style: this.style,","        size: this.size,","        color: this.color,","        parentStyle: this.style,","        parentSize: this.size,","        phantom: this.phantom,","        font: this.font","    };","","    for (var key in extension) {","        if (extension.hasOwnProperty(key)) {","            data[key] = extension[key];","        }","    }","","    return new Options(data);","};","","/**"," * Create a new options object with the given style."," */","Options.prototype.withStyle = function(style) {","    return this.extend({","        style: style","    });","};","","/**"," * Create a new options object with the given size."," */","Options.prototype.withSize = function(size) {","    return this.extend({","        size: size","    });","};","","/**"," * Create a new options object with the given color."," */","Options.prototype.withColor = function(color) {","    return this.extend({","        color: color","    });","};","","/**"," * Create a new options object with \"phantom\" set to true."," */","Options.prototype.withPhantom = function() {","    return this.extend({","        phantom: true","    });","};","","/**"," * Create a new options objects with the give font."," */","Options.prototype.withFont = function(font) {","    return this.extend({","        font: font || this.font","    });","};","","/**"," * Create a new options object with the same style, size, and color. This is"," * used so that parent style and size changes are handled correctly."," */","Options.prototype.reset = function() {","    return this.extend({});","};","","/**"," * A map of color names to CSS colors."," * TODO(emily): Remove this when we have real macros"," */","var colorMap = {","    \"katex-blue\": \"#6495ed\",","    \"katex-orange\": \"#ffa500\",","    \"katex-pink\": \"#ff00af\",","    \"katex-red\": \"#df0030\",","    \"katex-green\": \"#28ae7b\",","    \"katex-gray\": \"gray\",","    \"katex-purple\": \"#9d38bd\",","    \"katex-blueA\": \"#ccfaff\",","    \"katex-blueB\": \"#80f6ff\",","    \"katex-blueC\": \"#63d9ea\",","    \"katex-blueD\": \"#11accd\",","    \"katex-blueE\": \"#0c7f99\",","    \"katex-tealA\": \"#94fff5\",","    \"katex-tealB\": \"#26edd5\",","    \"katex-tealC\": \"#01d1c1\",","    \"katex-tealD\": \"#01a995\",","    \"katex-tealE\": \"#208170\",","    \"katex-greenA\": \"#b6ffb0\",","    \"katex-greenB\": \"#8af281\",","    \"katex-greenC\": \"#74cf70\",","    \"katex-greenD\": \"#1fab54\",","    \"katex-greenE\": \"#0d923f\",","    \"katex-goldA\": \"#ffd0a9\",","    \"katex-goldB\": \"#ffbb71\",","    \"katex-goldC\": \"#ff9c39\",","    \"katex-goldD\": \"#e07d10\",","    \"katex-goldE\": \"#a75a05\",","    \"katex-redA\": \"#fca9a9\",","    \"katex-redB\": \"#ff8482\",","    \"katex-redC\": \"#f9685d\",","    \"katex-redD\": \"#e84d39\",","    \"katex-redE\": \"#bc2612\",","    \"katex-maroonA\": \"#ffbde0\",","    \"katex-maroonB\": \"#ff92c6\",","    \"katex-maroonC\": \"#ed5fa6\",","    \"katex-maroonD\": \"#ca337c\",","    \"katex-maroonE\": \"#9e034e\",","    \"katex-purpleA\": \"#ddd7ff\",","    \"katex-purpleB\": \"#c6b9fc\",","    \"katex-purpleC\": \"#aa87ff\",","    \"katex-purpleD\": \"#7854ab\",","    \"katex-purpleE\": \"#543b78\",","    \"katex-mintA\": \"#f5f9e8\",","    \"katex-mintB\": \"#edf2df\",","    \"katex-mintC\": \"#e0e5cc\",","    \"katex-grayA\": \"#f6f7f7\",","    \"katex-grayB\": \"#f0f1f2\",","    \"katex-grayC\": \"#e3e5e6\",","    \"katex-grayD\": \"#d6d8da\",","    \"katex-grayE\": \"#babec2\",","    \"katex-grayF\": \"#888d93\",","    \"katex-grayG\": \"#626569\",","    \"katex-grayH\": \"#3b3e40\",","    \"katex-grayI\": \"#21242c\",","    \"katex-kaBlue\": \"#314453\",","    \"katex-kaGreen\": \"#71B307\"","};","","/**"," * Gets the CSS color of the current options object, accounting for the"," * `colorMap`."," */","Options.prototype.getColor = function() {","    if (this.phantom) {","        return \"transparent\";","    } else {","        return colorMap[this.color] || this.color;","    }","};","","module.exports = Options;",""],"l":{"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"24":0,"25":0,"27":0,"30":0,"31":0,"33":0,"41":1,"42":0,"52":0,"53":0,"54":0,"58":0,"64":1,"65":0,"73":1,"74":0,"82":1,"83":0,"91":1,"92":0,"100":1,"101":0,"110":1,"111":0,"118":1,"181":1,"182":0,"183":0,"185":0,"189":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/parseTree.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/parseTree.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":16},"end":{"line":11,"column":44}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":33}},"2":{"start":{"line":11,"column":0},"end":{"line":18,"column":2}},"3":{"start":{"line":12,"column":4},"end":{"line":14,"column":5}},"4":{"start":{"line":13,"column":8},"end":{"line":13,"column":76}},"5":{"start":{"line":15,"column":4},"end":{"line":15,"column":47}},"6":{"start":{"line":17,"column":4},"end":{"line":17,"column":26}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":27}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":4},"end":{"line":12,"column":4}},{"start":{"line":12,"column":4},"end":{"line":12,"column":4}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":10},"end":{"line":12,"column":37}},{"start":{"line":12,"column":41},"end":{"line":12,"column":66}}]}},"code":["/**"," * Provides a single function for parsing an expression using a Parser"," * TODO(emily): Remove this"," */","","var Parser = require(\"./Parser\");","","/**"," * Parses an expression using a Parser, then returns the parsed result."," */","var parseTree = function(toParse, settings) {","    if (!(typeof toParse === 'string' || toParse instanceof String)) {","        throw new TypeError('KaTeX can only parse string typed expression');","    }","    var parser = new Parser(toParse, settings);","","    return parser.parse();","};","","module.exports = parseTree;",""],"l":{"6":1,"11":1,"12":0,"13":0,"15":0,"17":0,"20":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/Parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/Parser.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":1,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":1,"143":1,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":1,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":0,"198":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":1,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":1,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":1,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":1,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":1,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":1,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":1,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":1,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":1,"344":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"fnMap":{"1":{"name":"Parser","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":33}}},"2":{"name":"ParseFuncOrArgument","line":65,"loc":{"start":{"line":65,"column":0},"end":{"line":65,"column":56}}},"3":{"name":"(anonymous_3)","line":79,"loc":{"start":{"line":79,"column":26},"end":{"line":79,"column":50}}},"4":{"name":"(anonymous_4)","line":95,"loc":{"start":{"line":95,"column":27},"end":{"line":95,"column":38}}},"5":{"name":"(anonymous_5)","line":99,"loc":{"start":{"line":99,"column":30},"end":{"line":99,"column":48}}},"6":{"name":"(anonymous_6)","line":110,"loc":{"start":{"line":110,"column":25},"end":{"line":110,"column":36}}},"7":{"name":"(anonymous_7)","line":121,"loc":{"start":{"line":121,"column":30},"end":{"line":121,"column":41}}},"8":{"name":"(anonymous_8)","line":144,"loc":{"start":{"line":144,"column":35},"end":{"line":144,"column":76}}},"9":{"name":"(anonymous_9)","line":183,"loc":{"start":{"line":183,"column":36},"end":{"line":183,"column":51}}},"10":{"name":"(anonymous_10)","line":233,"loc":{"start":{"line":233,"column":38},"end":{"line":233,"column":53}}},"11":{"name":"(anonymous_11)","line":268,"loc":{"start":{"line":268,"column":40},"end":{"line":268,"column":51}}},"12":{"name":"(anonymous_12)","line":302,"loc":{"start":{"line":302,"column":29},"end":{"line":302,"column":40}}},"13":{"name":"(anonymous_13)","line":400,"loc":{"start":{"line":400,"column":38},"end":{"line":400,"column":49}}},"14":{"name":"(anonymous_14)","line":488,"loc":{"start":{"line":488,"column":33},"end":{"line":488,"column":53}}},"15":{"name":"(anonymous_15)","line":518,"loc":{"start":{"line":518,"column":32},"end":{"line":518,"column":71}}},"16":{"name":"(anonymous_16)","line":535,"loc":{"start":{"line":535,"column":34},"end":{"line":535,"column":59}}},"17":{"name":"(anonymous_17)","line":607,"loc":{"start":{"line":607,"column":36},"end":{"line":607,"column":66}}},"18":{"name":"(anonymous_18)","line":643,"loc":{"start":{"line":643,"column":36},"end":{"line":643,"column":65}}},"19":{"name":"(anonymous_19)","line":676,"loc":{"start":{"line":676,"column":35},"end":{"line":676,"column":61}}},"20":{"name":"(anonymous_20)","line":700,"loc":{"start":{"line":700,"column":35},"end":{"line":700,"column":54}}},"21":{"name":"(anonymous_21)","line":717,"loc":{"start":{"line":717,"column":34},"end":{"line":717,"column":53}}},"22":{"name":"(anonymous_22)","line":755,"loc":{"start":{"line":755,"column":30},"end":{"line":755,"column":49}}},"23":{"name":"(anonymous_23)","line":788,"loc":{"start":{"line":788,"column":33},"end":{"line":788,"column":49}}},"24":{"name":"(anonymous_24)","line":819,"loc":{"start":{"line":819,"column":31},"end":{"line":819,"column":42}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":39}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":45}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":47}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":35}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":52}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":39}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":41}},"9":{"start":{"line":49,"column":0},"end":{"line":57,"column":1}},"10":{"start":{"line":52,"column":4},"end":{"line":52,"column":60}},"11":{"start":{"line":54,"column":4},"end":{"line":54,"column":29}},"12":{"start":{"line":56,"column":4},"end":{"line":56,"column":28}},"13":{"start":{"line":59,"column":0},"end":{"line":59,"column":36}},"14":{"start":{"line":65,"column":0},"end":{"line":70,"column":1}},"15":{"start":{"line":66,"column":4},"end":{"line":66,"column":25}},"16":{"start":{"line":68,"column":4},"end":{"line":68,"column":33}},"17":{"start":{"line":69,"column":4},"end":{"line":69,"column":23}},"18":{"start":{"line":79,"column":0},"end":{"line":89,"column":2}},"19":{"start":{"line":80,"column":4},"end":{"line":85,"column":5}},"20":{"start":{"line":81,"column":8},"end":{"line":84,"column":10}},"21":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"22":{"start":{"line":87,"column":8},"end":{"line":87,"column":23}},"23":{"start":{"line":95,"column":0},"end":{"line":97,"column":2}},"24":{"start":{"line":96,"column":4},"end":{"line":96,"column":59}},"25":{"start":{"line":99,"column":0},"end":{"line":103,"column":2}},"26":{"start":{"line":100,"column":4},"end":{"line":100,"column":38}},"27":{"start":{"line":101,"column":4},"end":{"line":101,"column":24}},"28":{"start":{"line":102,"column":4},"end":{"line":102,"column":19}},"29":{"start":{"line":110,"column":0},"end":{"line":116,"column":2}},"30":{"start":{"line":112,"column":4},"end":{"line":112,"column":23}},"31":{"start":{"line":113,"column":4},"end":{"line":113,"column":19}},"32":{"start":{"line":114,"column":4},"end":{"line":114,"column":34}},"33":{"start":{"line":115,"column":4},"end":{"line":115,"column":17}},"34":{"start":{"line":121,"column":0},"end":{"line":127,"column":2}},"35":{"start":{"line":123,"column":4},"end":{"line":123,"column":49}},"36":{"start":{"line":125,"column":4},"end":{"line":125,"column":30}},"37":{"start":{"line":126,"column":4},"end":{"line":126,"column":22}},"38":{"start":{"line":129,"column":0},"end":{"line":129,"column":69}},"39":{"start":{"line":144,"column":0},"end":{"line":172,"column":2}},"40":{"start":{"line":145,"column":4},"end":{"line":145,"column":18}},"41":{"start":{"line":148,"column":4},"end":{"line":170,"column":5}},"42":{"start":{"line":149,"column":8},"end":{"line":149,"column":33}},"43":{"start":{"line":150,"column":8},"end":{"line":152,"column":9}},"44":{"start":{"line":151,"column":12},"end":{"line":151,"column":18}},"45":{"start":{"line":153,"column":8},"end":{"line":155,"column":9}},"46":{"start":{"line":154,"column":12},"end":{"line":154,"column":18}},"47":{"start":{"line":156,"column":8},"end":{"line":158,"column":9}},"48":{"start":{"line":157,"column":12},"end":{"line":157,"column":18}},"49":{"start":{"line":159,"column":8},"end":{"line":159,"column":36}},"50":{"start":{"line":160,"column":8},"end":{"line":168,"column":9}},"51":{"start":{"line":161,"column":12},"end":{"line":165,"column":13}},"52":{"start":{"line":162,"column":16},"end":{"line":162,"column":60}},"53":{"start":{"line":163,"column":16},"end":{"line":163,"column":37}},"54":{"start":{"line":164,"column":16},"end":{"line":164,"column":25}},"55":{"start":{"line":167,"column":12},"end":{"line":167,"column":18}},"56":{"start":{"line":169,"column":8},"end":{"line":169,"column":24}},"57":{"start":{"line":171,"column":4},"end":{"line":171,"column":39}},"58":{"start":{"line":183,"column":0},"end":{"line":225,"column":2}},"59":{"start":{"line":184,"column":4},"end":{"line":184,"column":23}},"60":{"start":{"line":185,"column":4},"end":{"line":185,"column":17}},"61":{"start":{"line":187,"column":4},"end":{"line":198,"column":5}},"62":{"start":{"line":188,"column":8},"end":{"line":188,"column":27}},"63":{"start":{"line":189,"column":8},"end":{"line":197,"column":9}},"64":{"start":{"line":190,"column":12},"end":{"line":194,"column":13}},"65":{"start":{"line":191,"column":16},"end":{"line":193,"column":38}},"66":{"start":{"line":195,"column":12},"end":{"line":195,"column":26}},"67":{"start":{"line":196,"column":12},"end":{"line":196,"column":46}},"68":{"start":{"line":200,"column":4},"end":{"line":224,"column":5}},"69":{"start":{"line":201,"column":8},"end":{"line":201,"column":22}},"70":{"start":{"line":202,"column":8},"end":{"line":202,"column":22}},"71":{"start":{"line":204,"column":8},"end":{"line":204,"column":49}},"72":{"start":{"line":205,"column":8},"end":{"line":205,"column":50}},"73":{"start":{"line":207,"column":8},"end":{"line":211,"column":9}},"74":{"start":{"line":208,"column":12},"end":{"line":208,"column":37}},"75":{"start":{"line":210,"column":12},"end":{"line":210,"column":72}},"76":{"start":{"line":213,"column":8},"end":{"line":217,"column":9}},"77":{"start":{"line":214,"column":12},"end":{"line":214,"column":37}},"78":{"start":{"line":216,"column":12},"end":{"line":216,"column":72}},"79":{"start":{"line":219,"column":8},"end":{"line":220,"column":52}},"80":{"start":{"line":221,"column":8},"end":{"line":221,"column":61}},"81":{"start":{"line":223,"column":8},"end":{"line":223,"column":20}},"82":{"start":{"line":228,"column":0},"end":{"line":228,"column":26}},"83":{"start":{"line":233,"column":0},"end":{"line":262,"column":2}},"84":{"start":{"line":234,"column":4},"end":{"line":234,"column":37}},"85":{"start":{"line":235,"column":4},"end":{"line":235,"column":34}},"86":{"start":{"line":236,"column":4},"end":{"line":236,"column":19}},"87":{"start":{"line":237,"column":4},"end":{"line":237,"column":34}},"88":{"start":{"line":239,"column":4},"end":{"line":261,"column":5}},"89":{"start":{"line":240,"column":8},"end":{"line":247,"column":9}},"90":{"start":{"line":241,"column":12},"end":{"line":241,"column":47}},"91":{"start":{"line":243,"column":12},"end":{"line":246,"column":14}},"92":{"start":{"line":248,"column":11},"end":{"line":261,"column":5}},"93":{"start":{"line":251,"column":8},"end":{"line":251,"column":64}},"94":{"start":{"line":252,"column":8},"end":{"line":258,"column":9}},"95":{"start":{"line":253,"column":12},"end":{"line":253,"column":45}},"96":{"start":{"line":255,"column":12},"end":{"line":257,"column":47}},"97":{"start":{"line":260,"column":8},"end":{"line":260,"column":28}},"98":{"start":{"line":268,"column":0},"end":{"line":295,"column":2}},"99":{"start":{"line":269,"column":4},"end":{"line":269,"column":35}},"100":{"start":{"line":270,"column":4},"end":{"line":270,"column":26}},"101":{"start":{"line":272,"column":4},"end":{"line":274,"column":5}},"102":{"start":{"line":273,"column":8},"end":{"line":273,"column":69}},"103":{"start":{"line":276,"column":4},"end":{"line":282,"column":19}},"104":{"start":{"line":284,"column":4},"end":{"line":291,"column":19}},"105":{"start":{"line":293,"column":4},"end":{"line":293,"column":19}},"106":{"start":{"line":294,"column":4},"end":{"line":294,"column":21}},"107":{"start":{"line":302,"column":0},"end":{"line":376,"column":2}},"108":{"start":{"line":305,"column":4},"end":{"line":305,"column":41}},"109":{"start":{"line":308,"column":4},"end":{"line":310,"column":5}},"110":{"start":{"line":309,"column":8},"end":{"line":309,"column":20}},"111":{"start":{"line":314,"column":4},"end":{"line":314,"column":20}},"112":{"start":{"line":315,"column":4},"end":{"line":315,"column":18}},"113":{"start":{"line":316,"column":4},"end":{"line":363,"column":5}},"114":{"start":{"line":318,"column":8},"end":{"line":318,"column":33}},"115":{"start":{"line":320,"column":8},"end":{"line":362,"column":9}},"116":{"start":{"line":322,"column":12},"end":{"line":330,"column":13}},"117":{"start":{"line":323,"column":16},"end":{"line":325,"column":25}},"118":{"start":{"line":327,"column":16},"end":{"line":327,"column":53}},"119":{"start":{"line":328,"column":16},"end":{"line":328,"column":43}},"120":{"start":{"line":329,"column":16},"end":{"line":329,"column":53}},"121":{"start":{"line":331,"column":12},"end":{"line":331,"column":27}},"122":{"start":{"line":332,"column":15},"end":{"line":362,"column":9}},"123":{"start":{"line":334,"column":12},"end":{"line":336,"column":13}},"124":{"start":{"line":335,"column":16},"end":{"line":335,"column":64}},"125":{"start":{"line":337,"column":12},"end":{"line":337,"column":65}},"126":{"start":{"line":338,"column":15},"end":{"line":362,"column":9}},"127":{"start":{"line":340,"column":12},"end":{"line":342,"column":13}},"128":{"start":{"line":341,"column":16},"end":{"line":341,"column":62}},"129":{"start":{"line":343,"column":12},"end":{"line":343,"column":61}},"130":{"start":{"line":344,"column":15},"end":{"line":362,"column":9}},"131":{"start":{"line":346,"column":12},"end":{"line":346,"column":71}},"132":{"start":{"line":349,"column":12},"end":{"line":349,"column":33}},"133":{"start":{"line":350,"column":12},"end":{"line":350,"column":27}},"134":{"start":{"line":352,"column":12},"end":{"line":356,"column":13}},"135":{"start":{"line":354,"column":16},"end":{"line":354,"column":35}},"136":{"start":{"line":355,"column":16},"end":{"line":355,"column":31}},"137":{"start":{"line":358,"column":12},"end":{"line":358,"column":71}},"138":{"start":{"line":361,"column":12},"end":{"line":361,"column":18}},"139":{"start":{"line":365,"column":4},"end":{"line":375,"column":5}},"140":{"start":{"line":367,"column":8},"end":{"line":371,"column":22}},"141":{"start":{"line":374,"column":8},"end":{"line":374,"column":20}},"142":{"start":{"line":379,"column":0},"end":{"line":382,"column":2}},"143":{"start":{"line":385,"column":0},"end":{"line":387,"column":2}},"144":{"start":{"line":400,"column":0},"end":{"line":478,"column":2}},"145":{"start":{"line":401,"column":4},"end":{"line":401,"column":35}},"146":{"start":{"line":403,"column":4},"end":{"line":406,"column":5}},"147":{"start":{"line":405,"column":8},"end":{"line":405,"column":36}},"148":{"start":{"line":408,"column":4},"end":{"line":408,"column":28}},"149":{"start":{"line":409,"column":4},"end":{"line":409,"column":13}},"150":{"start":{"line":411,"column":4},"end":{"line":477,"column":5}},"151":{"start":{"line":414,"column":8},"end":{"line":414,"column":45}},"152":{"start":{"line":416,"column":8},"end":{"line":416,"column":30}},"153":{"start":{"line":417,"column":8},"end":{"line":417,"column":43}},"154":{"start":{"line":418,"column":8},"end":{"line":418,"column":30}},"155":{"start":{"line":420,"column":8},"end":{"line":420,"column":38}},"156":{"start":{"line":421,"column":8},"end":{"line":421,"column":41}},"157":{"start":{"line":422,"column":8},"end":{"line":426,"column":22}},"158":{"start":{"line":427,"column":11},"end":{"line":477,"column":5}},"159":{"start":{"line":429,"column":8},"end":{"line":429,"column":46}},"160":{"start":{"line":430,"column":8},"end":{"line":430,"column":39}},"161":{"start":{"line":431,"column":8},"end":{"line":434,"column":9}},"162":{"start":{"line":432,"column":12},"end":{"line":433,"column":74}},"163":{"start":{"line":437,"column":8},"end":{"line":437,"column":40}},"164":{"start":{"line":438,"column":8},"end":{"line":438,"column":72}},"165":{"start":{"line":439,"column":8},"end":{"line":444,"column":10}},"166":{"start":{"line":445,"column":8},"end":{"line":445,"column":48}},"167":{"start":{"line":446,"column":8},"end":{"line":446,"column":36}},"168":{"start":{"line":447,"column":8},"end":{"line":447,"column":42}},"169":{"start":{"line":448,"column":8},"end":{"line":448,"column":39}},"170":{"start":{"line":449,"column":8},"end":{"line":454,"column":9}},"171":{"start":{"line":450,"column":12},"end":{"line":453,"column":30}},"172":{"start":{"line":455,"column":8},"end":{"line":455,"column":39}},"173":{"start":{"line":456,"column":8},"end":{"line":456,"column":22}},"174":{"start":{"line":457,"column":11},"end":{"line":477,"column":5}},"175":{"start":{"line":459,"column":8},"end":{"line":459,"column":43}},"176":{"start":{"line":460,"column":8},"end":{"line":464,"column":22}},"177":{"start":{"line":465,"column":11},"end":{"line":477,"column":5}},"178":{"start":{"line":467,"column":8},"end":{"line":467,"column":42}},"179":{"start":{"line":468,"column":8},"end":{"line":473,"column":22}},"180":{"start":{"line":476,"column":8},"end":{"line":476,"column":41}},"181":{"start":{"line":488,"column":0},"end":{"line":513,"column":2}},"182":{"start":{"line":489,"column":4},"end":{"line":491,"column":5}},"183":{"start":{"line":490,"column":8},"end":{"line":490,"column":38}},"184":{"start":{"line":493,"column":4},"end":{"line":512,"column":5}},"185":{"start":{"line":494,"column":8},"end":{"line":509,"column":9}},"186":{"start":{"line":495,"column":12},"end":{"line":495,"column":40}},"187":{"start":{"line":496,"column":12},"end":{"line":496,"column":43}},"188":{"start":{"line":497,"column":12},"end":{"line":501,"column":13}},"189":{"start":{"line":498,"column":16},"end":{"line":500,"column":37}},"190":{"start":{"line":503,"column":12},"end":{"line":503,"column":59}},"191":{"start":{"line":504,"column":12},"end":{"line":504,"column":40}},"192":{"start":{"line":505,"column":12},"end":{"line":505,"column":74}},"193":{"start":{"line":506,"column":12},"end":{"line":506,"column":65}},"194":{"start":{"line":508,"column":12},"end":{"line":508,"column":36}},"195":{"start":{"line":511,"column":8},"end":{"line":511,"column":20}},"196":{"start":{"line":518,"column":0},"end":{"line":526,"column":2}},"197":{"start":{"line":519,"column":4},"end":{"line":524,"column":6}},"198":{"start":{"line":525,"column":4},"end":{"line":525,"column":50}},"199":{"start":{"line":535,"column":0},"end":{"line":599,"column":2}},"200":{"start":{"line":536,"column":4},"end":{"line":536,"column":64}},"201":{"start":{"line":537,"column":4},"end":{"line":539,"column":5}},"202":{"start":{"line":538,"column":8},"end":{"line":538,"column":28}},"203":{"start":{"line":541,"column":4},"end":{"line":541,"column":45}},"204":{"start":{"line":542,"column":4},"end":{"line":542,"column":31}},"205":{"start":{"line":543,"column":4},"end":{"line":543,"column":18}},"206":{"start":{"line":545,"column":4},"end":{"line":594,"column":5}},"207":{"start":{"line":546,"column":8},"end":{"line":546,"column":39}},"208":{"start":{"line":547,"column":8},"end":{"line":547,"column":64}},"209":{"start":{"line":548,"column":8},"end":{"line":548,"column":16}},"210":{"start":{"line":549,"column":8},"end":{"line":577,"column":9}},"211":{"start":{"line":550,"column":12},"end":{"line":554,"column":13}},"212":{"start":{"line":551,"column":16},"end":{"line":551,"column":59}},"213":{"start":{"line":553,"column":16},"end":{"line":553,"column":44}},"214":{"start":{"line":555,"column":12},"end":{"line":559,"column":13}},"215":{"start":{"line":556,"column":16},"end":{"line":556,"column":32}},"216":{"start":{"line":557,"column":16},"end":{"line":557,"column":41}},"217":{"start":{"line":558,"column":16},"end":{"line":558,"column":25}},"218":{"start":{"line":561,"column":12},"end":{"line":565,"column":13}},"219":{"start":{"line":562,"column":16},"end":{"line":562,"column":53}},"220":{"start":{"line":564,"column":16},"end":{"line":564,"column":40}},"221":{"start":{"line":566,"column":12},"end":{"line":576,"column":13}},"222":{"start":{"line":567,"column":16},"end":{"line":575,"column":17}},"223":{"start":{"line":569,"column":20},"end":{"line":571,"column":31}},"224":{"start":{"line":573,"column":20},"end":{"line":574,"column":74}},"225":{"start":{"line":578,"column":8},"end":{"line":578,"column":20}},"226":{"start":{"line":579,"column":8},"end":{"line":591,"column":9}},"227":{"start":{"line":580,"column":12},"end":{"line":581,"column":49}},"228":{"start":{"line":582,"column":12},"end":{"line":588,"column":13}},"229":{"start":{"line":583,"column":16},"end":{"line":583,"column":50}},"230":{"start":{"line":585,"column":16},"end":{"line":587,"column":61}},"231":{"start":{"line":590,"column":12},"end":{"line":590,"column":33}},"232":{"start":{"line":592,"column":8},"end":{"line":592,"column":27}},"233":{"start":{"line":593,"column":8},"end":{"line":593,"column":33}},"234":{"start":{"line":596,"column":4},"end":{"line":596,"column":25}},"235":{"start":{"line":598,"column":4},"end":{"line":598,"column":16}},"236":{"start":{"line":607,"column":0},"end":{"line":634,"column":2}},"237":{"start":{"line":608,"column":4},"end":{"line":608,"column":30}},"238":{"start":{"line":610,"column":4},"end":{"line":612,"column":5}},"239":{"start":{"line":611,"column":8},"end":{"line":611,"column":30}},"240":{"start":{"line":614,"column":4},"end":{"line":616,"column":5}},"241":{"start":{"line":615,"column":8},"end":{"line":615,"column":46}},"242":{"start":{"line":617,"column":4},"end":{"line":619,"column":5}},"243":{"start":{"line":618,"column":8},"end":{"line":618,"column":45}},"244":{"start":{"line":621,"column":4},"end":{"line":621,"column":31}},"245":{"start":{"line":622,"column":4},"end":{"line":628,"column":5}},"246":{"start":{"line":625,"column":8},"end":{"line":627,"column":9}},"247":{"start":{"line":626,"column":12},"end":{"line":626,"column":27}},"248":{"start":{"line":631,"column":4},"end":{"line":631,"column":40}},"249":{"start":{"line":632,"column":4},"end":{"line":632,"column":31}},"250":{"start":{"line":633,"column":4},"end":{"line":633,"column":15}},"251":{"start":{"line":643,"column":0},"end":{"line":666,"column":2}},"252":{"start":{"line":644,"column":4},"end":{"line":646,"column":5}},"253":{"start":{"line":645,"column":8},"end":{"line":645,"column":20}},"254":{"start":{"line":647,"column":4},"end":{"line":647,"column":30}},"255":{"start":{"line":648,"column":4},"end":{"line":648,"column":23}},"256":{"start":{"line":649,"column":4},"end":{"line":649,"column":38}},"257":{"start":{"line":650,"column":4},"end":{"line":650,"column":17}},"258":{"start":{"line":651,"column":4},"end":{"line":651,"column":36}},"259":{"start":{"line":652,"column":4},"end":{"line":652,"column":31}},"260":{"start":{"line":653,"column":4},"end":{"line":662,"column":5}},"261":{"start":{"line":654,"column":8},"end":{"line":658,"column":9}},"262":{"start":{"line":655,"column":12},"end":{"line":657,"column":55}},"263":{"start":{"line":659,"column":8},"end":{"line":659,"column":35}},"264":{"start":{"line":660,"column":8},"end":{"line":660,"column":30}},"265":{"start":{"line":661,"column":8},"end":{"line":661,"column":23}},"266":{"start":{"line":663,"column":4},"end":{"line":663,"column":26}},"267":{"start":{"line":664,"column":4},"end":{"line":664,"column":38}},"268":{"start":{"line":665,"column":4},"end":{"line":665,"column":44}},"269":{"start":{"line":676,"column":0},"end":{"line":695,"column":2}},"270":{"start":{"line":677,"column":4},"end":{"line":677,"column":30}},"271":{"start":{"line":678,"column":4},"end":{"line":678,"column":23}},"272":{"start":{"line":679,"column":4},"end":{"line":679,"column":36}},"273":{"start":{"line":680,"column":4},"end":{"line":680,"column":31}},"274":{"start":{"line":681,"column":4},"end":{"line":681,"column":17}},"275":{"start":{"line":682,"column":4},"end":{"line":687,"column":5}},"276":{"start":{"line":684,"column":8},"end":{"line":684,"column":35}},"277":{"start":{"line":685,"column":8},"end":{"line":685,"column":30}},"278":{"start":{"line":686,"column":8},"end":{"line":686,"column":23}},"279":{"start":{"line":688,"column":4},"end":{"line":692,"column":5}},"280":{"start":{"line":689,"column":8},"end":{"line":691,"column":24}},"281":{"start":{"line":693,"column":4},"end":{"line":693,"column":26}},"282":{"start":{"line":694,"column":4},"end":{"line":694,"column":44}},"283":{"start":{"line":700,"column":0},"end":{"line":712,"column":2}},"284":{"start":{"line":701,"column":4},"end":{"line":701,"column":55}},"285":{"start":{"line":702,"column":4},"end":{"line":704,"column":5}},"286":{"start":{"line":703,"column":8},"end":{"line":703,"column":20}},"287":{"start":{"line":705,"column":4},"end":{"line":705,"column":58}},"288":{"start":{"line":706,"column":4},"end":{"line":708,"column":5}},"289":{"start":{"line":707,"column":8},"end":{"line":707,"column":71}},"290":{"start":{"line":709,"column":4},"end":{"line":711,"column":15}},"291":{"start":{"line":717,"column":0},"end":{"line":742,"column":2}},"292":{"start":{"line":718,"column":4},"end":{"line":718,"column":12}},"293":{"start":{"line":719,"column":4},"end":{"line":724,"column":5}},"294":{"start":{"line":720,"column":8},"end":{"line":721,"column":69}},"295":{"start":{"line":723,"column":8},"end":{"line":723,"column":54}},"296":{"start":{"line":725,"column":4},"end":{"line":727,"column":5}},"297":{"start":{"line":726,"column":8},"end":{"line":726,"column":20}},"298":{"start":{"line":728,"column":4},"end":{"line":728,"column":78}},"299":{"start":{"line":729,"column":4},"end":{"line":731,"column":5}},"300":{"start":{"line":730,"column":8},"end":{"line":730,"column":70}},"301":{"start":{"line":732,"column":4},"end":{"line":735,"column":6}},"302":{"start":{"line":736,"column":4},"end":{"line":738,"column":5}},"303":{"start":{"line":737,"column":8},"end":{"line":737,"column":71}},"304":{"start":{"line":739,"column":4},"end":{"line":741,"column":15}},"305":{"start":{"line":755,"column":0},"end":{"line":776,"column":2}},"306":{"start":{"line":756,"column":4},"end":{"line":756,"column":36}},"307":{"start":{"line":758,"column":4},"end":{"line":775,"column":5}},"308":{"start":{"line":760,"column":8},"end":{"line":760,"column":23}},"309":{"start":{"line":761,"column":8},"end":{"line":761,"column":76}},"310":{"start":{"line":762,"column":8},"end":{"line":762,"column":39}},"311":{"start":{"line":764,"column":8},"end":{"line":764,"column":42}},"312":{"start":{"line":765,"column":8},"end":{"line":767,"column":9}},"313":{"start":{"line":766,"column":12},"end":{"line":766,"column":43}},"314":{"start":{"line":768,"column":8},"end":{"line":771,"column":19}},"315":{"start":{"line":774,"column":8},"end":{"line":774,"column":52}},"316":{"start":{"line":788,"column":0},"end":{"line":811,"column":2}},"317":{"start":{"line":789,"column":4},"end":{"line":789,"column":10}},"318":{"start":{"line":790,"column":4},"end":{"line":790,"column":29}},"319":{"start":{"line":791,"column":4},"end":{"line":810,"column":5}},"320":{"start":{"line":792,"column":8},"end":{"line":792,"column":25}},"321":{"start":{"line":793,"column":8},"end":{"line":793,"column":24}},"322":{"start":{"line":794,"column":8},"end":{"line":804,"column":9}},"323":{"start":{"line":795,"column":12},"end":{"line":803,"column":13}},"324":{"start":{"line":796,"column":16},"end":{"line":797,"column":64}},"325":{"start":{"line":798,"column":16},"end":{"line":798,"column":23}},"326":{"start":{"line":800,"column":16},"end":{"line":801,"column":63}},"327":{"start":{"line":802,"column":16},"end":{"line":802,"column":23}},"328":{"start":{"line":805,"column":8},"end":{"line":809,"column":9}},"329":{"start":{"line":806,"column":12},"end":{"line":807,"column":60}},"330":{"start":{"line":808,"column":12},"end":{"line":808,"column":19}},"331":{"start":{"line":819,"column":0},"end":{"line":845,"column":2}},"332":{"start":{"line":820,"column":4},"end":{"line":820,"column":33}},"333":{"start":{"line":822,"column":4},"end":{"line":844,"column":5}},"334":{"start":{"line":823,"column":8},"end":{"line":823,"column":23}},"335":{"start":{"line":826,"column":8},"end":{"line":828,"column":27}},"336":{"start":{"line":829,"column":11},"end":{"line":844,"column":5}},"337":{"start":{"line":830,"column":8},"end":{"line":830,"column":23}},"338":{"start":{"line":833,"column":8},"end":{"line":836,"column":28}},"339":{"start":{"line":837,"column":11},"end":{"line":844,"column":5}},"340":{"start":{"line":838,"column":8},"end":{"line":838,"column":23}},"341":{"start":{"line":839,"column":8},"end":{"line":841,"column":28}},"342":{"start":{"line":843,"column":8},"end":{"line":843,"column":20}},"343":{"start":{"line":847,"column":0},"end":{"line":847,"column":39}},"344":{"start":{"line":849,"column":0},"end":{"line":849,"column":24}}},"branchMap":{"1":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"2":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"3":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":8}},{"start":{"line":150,"column":8},"end":{"line":150,"column":8}}]},"4":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":8},"end":{"line":153,"column":8}},{"start":{"line":153,"column":8},"end":{"line":153,"column":8}}]},"5":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":12},"end":{"line":153,"column":28}},{"start":{"line":153,"column":32},"end":{"line":153,"column":61}}]},"6":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":8}},{"start":{"line":156,"column":8},"end":{"line":156,"column":8}}]},"7":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":12},"end":{"line":156,"column":24}},{"start":{"line":156,"column":28},"end":{"line":156,"column":47}},{"start":{"line":156,"column":51},"end":{"line":156,"column":76}}]},"8":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":160,"column":8}},{"start":{"line":160,"column":8},"end":{"line":160,"column":8}}]},"9":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":12}},{"start":{"line":161,"column":12},"end":{"line":161,"column":12}}]},"10":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":16},"end":{"line":161,"column":43}},{"start":{"line":161,"column":47},"end":{"line":161,"column":67}}]},"11":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":8},"end":{"line":189,"column":8}},{"start":{"line":189,"column":8},"end":{"line":189,"column":8}}]},"12":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":12},"end":{"line":190,"column":12}},{"start":{"line":190,"column":12},"end":{"line":190,"column":12}}]},"13":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":4},"end":{"line":200,"column":4}},{"start":{"line":200,"column":4},"end":{"line":200,"column":4}}]},"14":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"15":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":12},"end":{"line":207,"column":34}},{"start":{"line":207,"column":38},"end":{"line":207,"column":70}}]},"16":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":213,"column":8}},{"start":{"line":213,"column":8},"end":{"line":213,"column":8}}]},"17":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":12},"end":{"line":213,"column":34}},{"start":{"line":213,"column":38},"end":{"line":213,"column":70}}]},"18":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":4},"end":{"line":239,"column":4}},{"start":{"line":239,"column":4},"end":{"line":239,"column":4}}]},"19":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":8},"end":{"line":240,"column":8}},{"start":{"line":240,"column":8},"end":{"line":240,"column":8}}]},"20":{"line":240,"type":"binary-expr","locations":[{"start":{"line":240,"column":12},"end":{"line":240,"column":39}},{"start":{"line":240,"column":43},"end":{"line":240,"column":74}}]},"21":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":11},"end":{"line":248,"column":11}},{"start":{"line":248,"column":11},"end":{"line":248,"column":11}}]},"22":{"line":252,"type":"if","locations":[{"start":{"line":252,"column":8},"end":{"line":252,"column":8}},{"start":{"line":252,"column":8},"end":{"line":252,"column":8}}]},"23":{"line":308,"type":"if","locations":[{"start":{"line":308,"column":4},"end":{"line":308,"column":4}},{"start":{"line":308,"column":4},"end":{"line":308,"column":4}}]},"24":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":8},"end":{"line":320,"column":8}},{"start":{"line":320,"column":8},"end":{"line":320,"column":8}}]},"25":{"line":320,"type":"binary-expr","locations":[{"start":{"line":320,"column":12},"end":{"line":320,"column":35}},{"start":{"line":320,"column":39},"end":{"line":320,"column":64}}]},"26":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":12},"end":{"line":322,"column":12}},{"start":{"line":322,"column":12},"end":{"line":322,"column":12}}]},"27":{"line":322,"type":"binary-expr","locations":[{"start":{"line":322,"column":16},"end":{"line":322,"column":21}},{"start":{"line":322,"column":25},"end":{"line":322,"column":43}}]},"28":{"line":332,"type":"if","locations":[{"start":{"line":332,"column":15},"end":{"line":332,"column":15}},{"start":{"line":332,"column":15},"end":{"line":332,"column":15}}]},"29":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":12},"end":{"line":334,"column":12}},{"start":{"line":334,"column":12},"end":{"line":334,"column":12}}]},"30":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":15},"end":{"line":338,"column":15}},{"start":{"line":338,"column":15},"end":{"line":338,"column":15}}]},"31":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":12},"end":{"line":340,"column":12}},{"start":{"line":340,"column":12},"end":{"line":340,"column":12}}]},"32":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":15},"end":{"line":344,"column":15}},{"start":{"line":344,"column":15},"end":{"line":344,"column":15}}]},"33":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":4},"end":{"line":365,"column":4}},{"start":{"line":365,"column":4},"end":{"line":365,"column":4}}]},"34":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":8},"end":{"line":365,"column":19}},{"start":{"line":365,"column":23},"end":{"line":365,"column":32}}]},"35":{"line":403,"type":"if","locations":[{"start":{"line":403,"column":4},"end":{"line":403,"column":4}},{"start":{"line":403,"column":4},"end":{"line":403,"column":4}}]},"36":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":4},"end":{"line":411,"column":4}},{"start":{"line":411,"column":4},"end":{"line":411,"column":4}}]},"37":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":11},"end":{"line":427,"column":11}},{"start":{"line":427,"column":11},"end":{"line":427,"column":11}}]},"38":{"line":431,"type":"if","locations":[{"start":{"line":431,"column":8},"end":{"line":431,"column":8}},{"start":{"line":431,"column":8},"end":{"line":431,"column":8}}]},"39":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":8},"end":{"line":449,"column":8}},{"start":{"line":449,"column":8},"end":{"line":449,"column":8}}]},"40":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":11},"end":{"line":457,"column":11}},{"start":{"line":457,"column":11},"end":{"line":457,"column":11}}]},"41":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":11},"end":{"line":465,"column":11}},{"start":{"line":465,"column":11},"end":{"line":465,"column":11}}]},"42":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":4},"end":{"line":489,"column":4}},{"start":{"line":489,"column":4},"end":{"line":489,"column":4}}]},"43":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":4},"end":{"line":493,"column":4}},{"start":{"line":493,"column":4},"end":{"line":493,"column":4}}]},"44":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":8},"end":{"line":494,"column":8}},{"start":{"line":494,"column":8},"end":{"line":494,"column":8}}]},"45":{"line":497,"type":"if","locations":[{"start":{"line":497,"column":12},"end":{"line":497,"column":12}},{"start":{"line":497,"column":12},"end":{"line":497,"column":12}}]},"46":{"line":497,"type":"binary-expr","locations":[{"start":{"line":497,"column":16},"end":{"line":497,"column":36}},{"start":{"line":497,"column":40},"end":{"line":497,"column":63}}]},"47":{"line":537,"type":"if","locations":[{"start":{"line":537,"column":4},"end":{"line":537,"column":4}},{"start":{"line":537,"column":4},"end":{"line":537,"column":4}}]},"48":{"line":547,"type":"binary-expr","locations":[{"start":{"line":547,"column":22},"end":{"line":547,"column":39}},{"start":{"line":547,"column":43},"end":{"line":547,"column":63}}]},"49":{"line":549,"type":"if","locations":[{"start":{"line":549,"column":8},"end":{"line":549,"column":8}},{"start":{"line":549,"column":8},"end":{"line":549,"column":8}}]},"50":{"line":550,"type":"if","locations":[{"start":{"line":550,"column":12},"end":{"line":550,"column":12}},{"start":{"line":550,"column":12},"end":{"line":550,"column":12}}]},"51":{"line":555,"type":"if","locations":[{"start":{"line":555,"column":12},"end":{"line":555,"column":12}},{"start":{"line":555,"column":12},"end":{"line":555,"column":12}}]},"52":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":12},"end":{"line":561,"column":12}},{"start":{"line":561,"column":12},"end":{"line":561,"column":12}}]},"53":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":12},"end":{"line":566,"column":12}},{"start":{"line":566,"column":12},"end":{"line":566,"column":12}}]},"54":{"line":567,"type":"if","locations":[{"start":{"line":567,"column":16},"end":{"line":567,"column":16}},{"start":{"line":567,"column":16},"end":{"line":567,"column":16}}]},"55":{"line":567,"type":"binary-expr","locations":[{"start":{"line":567,"column":20},"end":{"line":567,"column":47}},{"start":{"line":568,"column":20},"end":{"line":568,"column":51}}]},"56":{"line":579,"type":"if","locations":[{"start":{"line":579,"column":8},"end":{"line":579,"column":8}},{"start":{"line":579,"column":8},"end":{"line":579,"column":8}}]},"57":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":12},"end":{"line":582,"column":12}},{"start":{"line":582,"column":12},"end":{"line":582,"column":12}}]},"58":{"line":610,"type":"if","locations":[{"start":{"line":610,"column":4},"end":{"line":610,"column":4}},{"start":{"line":610,"column":4},"end":{"line":610,"column":4}}]},"59":{"line":614,"type":"if","locations":[{"start":{"line":614,"column":4},"end":{"line":614,"column":4}},{"start":{"line":614,"column":4},"end":{"line":614,"column":4}}]},"60":{"line":617,"type":"if","locations":[{"start":{"line":617,"column":4},"end":{"line":617,"column":4}},{"start":{"line":617,"column":4},"end":{"line":617,"column":4}}]},"61":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":4},"end":{"line":622,"column":4}},{"start":{"line":622,"column":4},"end":{"line":622,"column":4}}]},"62":{"line":644,"type":"if","locations":[{"start":{"line":644,"column":4},"end":{"line":644,"column":4}},{"start":{"line":644,"column":4},"end":{"line":644,"column":4}}]},"63":{"line":644,"type":"binary-expr","locations":[{"start":{"line":644,"column":8},"end":{"line":644,"column":16}},{"start":{"line":644,"column":20},"end":{"line":644,"column":47}}]},"64":{"line":649,"type":"cond-expr","locations":[{"start":{"line":649,"column":27},"end":{"line":649,"column":30}},{"start":{"line":649,"column":33},"end":{"line":649,"column":36}}]},"65":{"line":653,"type":"cond-expr","locations":[{"start":{"line":653,"column":47},"end":{"line":653,"column":50}},{"start":{"line":653,"column":53},"end":{"line":653,"column":56}}]},"66":{"line":654,"type":"if","locations":[{"start":{"line":654,"column":8},"end":{"line":654,"column":8}},{"start":{"line":654,"column":8},"end":{"line":654,"column":8}}]},"67":{"line":664,"type":"cond-expr","locations":[{"start":{"line":664,"column":27},"end":{"line":664,"column":30}},{"start":{"line":664,"column":33},"end":{"line":664,"column":36}}]},"68":{"line":682,"type":"binary-expr","locations":[{"start":{"line":682,"column":11},"end":{"line":682,"column":40}},{"start":{"line":683,"column":14},"end":{"line":683,"column":51}}]},"69":{"line":688,"type":"if","locations":[{"start":{"line":688,"column":4},"end":{"line":688,"column":4}},{"start":{"line":688,"column":4},"end":{"line":688,"column":4}}]},"70":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":4},"end":{"line":702,"column":4}},{"start":{"line":702,"column":4},"end":{"line":702,"column":4}}]},"71":{"line":706,"type":"if","locations":[{"start":{"line":706,"column":4},"end":{"line":706,"column":4}},{"start":{"line":706,"column":4},"end":{"line":706,"column":4}}]},"72":{"line":719,"type":"if","locations":[{"start":{"line":719,"column":4},"end":{"line":719,"column":4}},{"start":{"line":719,"column":4},"end":{"line":719,"column":4}}]},"73":{"line":719,"type":"binary-expr","locations":[{"start":{"line":719,"column":8},"end":{"line":719,"column":17}},{"start":{"line":719,"column":21},"end":{"line":719,"column":48}}]},"74":{"line":725,"type":"if","locations":[{"start":{"line":725,"column":4},"end":{"line":725,"column":4}},{"start":{"line":725,"column":4},"end":{"line":725,"column":4}}]},"75":{"line":729,"type":"if","locations":[{"start":{"line":729,"column":4},"end":{"line":729,"column":4}},{"start":{"line":729,"column":4},"end":{"line":729,"column":4}}]},"76":{"line":736,"type":"if","locations":[{"start":{"line":736,"column":4},"end":{"line":736,"column":4}},{"start":{"line":736,"column":4},"end":{"line":736,"column":4}}]},"77":{"line":736,"type":"binary-expr","locations":[{"start":{"line":736,"column":8},"end":{"line":736,"column":26}},{"start":{"line":736,"column":30},"end":{"line":736,"column":48}},{"start":{"line":736,"column":52},"end":{"line":736,"column":70}}]},"78":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":4},"end":{"line":758,"column":4}},{"start":{"line":758,"column":4},"end":{"line":758,"column":4}}]},"79":{"line":758,"type":"cond-expr","locations":[{"start":{"line":758,"column":44},"end":{"line":758,"column":47}},{"start":{"line":758,"column":50},"end":{"line":758,"column":53}}]},"80":{"line":761,"type":"cond-expr","locations":[{"start":{"line":761,"column":64},"end":{"line":761,"column":67}},{"start":{"line":761,"column":70},"end":{"line":761,"column":74}}]},"81":{"line":764,"type":"cond-expr","locations":[{"start":{"line":764,"column":31},"end":{"line":764,"column":34}},{"start":{"line":764,"column":37},"end":{"line":764,"column":40}}]},"82":{"line":765,"type":"if","locations":[{"start":{"line":765,"column":8},"end":{"line":765,"column":8}},{"start":{"line":765,"column":8},"end":{"line":765,"column":8}}]},"83":{"line":774,"type":"cond-expr","locations":[{"start":{"line":774,"column":26},"end":{"line":774,"column":30}},{"start":{"line":774,"column":33},"end":{"line":774,"column":51}}]},"84":{"line":794,"type":"if","locations":[{"start":{"line":794,"column":8},"end":{"line":794,"column":8}},{"start":{"line":794,"column":8},"end":{"line":794,"column":8}}]},"85":{"line":794,"type":"binary-expr","locations":[{"start":{"line":794,"column":12},"end":{"line":794,"column":21}},{"start":{"line":794,"column":25},"end":{"line":794,"column":51}}]},"86":{"line":795,"type":"if","locations":[{"start":{"line":795,"column":12},"end":{"line":795,"column":12}},{"start":{"line":795,"column":12},"end":{"line":795,"column":12}}]},"87":{"line":795,"type":"binary-expr","locations":[{"start":{"line":795,"column":16},"end":{"line":795,"column":25}},{"start":{"line":795,"column":29},"end":{"line":795,"column":55}}]},"88":{"line":805,"type":"if","locations":[{"start":{"line":805,"column":8},"end":{"line":805,"column":8}},{"start":{"line":805,"column":8},"end":{"line":805,"column":8}}]},"89":{"line":805,"type":"binary-expr","locations":[{"start":{"line":805,"column":13},"end":{"line":805,"column":22}},{"start":{"line":805,"column":26},"end":{"line":805,"column":35}},{"start":{"line":805,"column":40},"end":{"line":805,"column":64}}]},"90":{"line":822,"type":"if","locations":[{"start":{"line":822,"column":4},"end":{"line":822,"column":4}},{"start":{"line":822,"column":4},"end":{"line":822,"column":4}}]},"91":{"line":829,"type":"if","locations":[{"start":{"line":829,"column":11},"end":{"line":829,"column":11}},{"start":{"line":829,"column":11},"end":{"line":829,"column":11}}]},"92":{"line":837,"type":"if","locations":[{"start":{"line":837,"column":11},"end":{"line":837,"column":11}},{"start":{"line":837,"column":11},"end":{"line":837,"column":11}}]},"93":{"line":837,"type":"binary-expr","locations":[{"start":{"line":837,"column":15},"end":{"line":837,"column":35}},{"start":{"line":837,"column":39},"end":{"line":837,"column":66}}]}},"code":["/* eslint no-constant-condition:0 */","var functions = require(\"./functions\");","var environments = require(\"./environments\");","var MacroExpander = require(\"./MacroExpander\");","var symbols = require(\"./symbols\");","var utils = require(\"./utils\");","var cjkRegex = require(\"./unicodeRegexes\").cjkRegex;","","var parseData = require(\"./parseData\");","var ParseError = require(\"./ParseError\");","","/**"," * This file contains the parser used to parse out a TeX expression from the"," * input. Since TeX isn't context-free, standard parsers don't work particularly"," * well."," *"," * The strategy of this parser is as such:"," *"," * The main functions (the `.parse...` ones) take a position in the current"," * parse string to parse tokens from. The lexer (found in Lexer.js, stored at"," * this.lexer) also supports pulling out tokens at arbitrary places. When"," * individual tokens are needed at a position, the lexer is called to pull out a"," * token, which is then used."," *"," * The parser has a property called \"mode\" indicating the mode that"," * the parser is currently in. Currently it has to be one of \"math\" or"," * \"text\", which denotes whether the current environment is a math-y"," * one or a text-y one (e.g. inside \\text). Currently, this serves to"," * limit the functions which can be used in text mode."," *"," * The main functions then return an object which contains the useful data that"," * was parsed at its given point, and a new position at the end of the parsed"," * data. The main functions can call each other and continue the parsing by"," * using the returned position as a new starting point."," *"," * There are also extra `.handle...` functions, which pull out some reused"," * functionality into self-contained functions."," *"," * The earlier functions return ParseNodes."," * The later functions (which are called deeper in the parse) sometimes return"," * ParseFuncOrArgument, which contain a ParseNode as well as some data about"," * whether the parsed object is a function which is missing some arguments, or a"," * standalone object which can be used as an argument to another function."," */","","/**"," * Main Parser class"," */","function Parser(input, settings) {","    // Create a new macro expander (gullet) and (indirectly via that) also a","    // new lexer (mouth) for this parser (stomach, in the language of TeX)","    this.gullet = new MacroExpander(input, settings.macros);","    // Store the settings for use in parsing","    this.settings = settings;","    // Count leftright depth (for \\middle errors)","    this.leftrightDepth = 0;","}","","var ParseNode = parseData.ParseNode;","","/**"," * An initial function (without its arguments), or an argument to a function."," * The `result` argument should be a ParseNode."," */","function ParseFuncOrArgument(result, isFunction, token) {","    this.result = result;","    // Is this a function (i.e. is it something defined in functions.js)?","    this.isFunction = isFunction;","    this.token = token;","}","","/**"," * Checks a result to make sure it has the right type, and throws an"," * appropriate error otherwise."," *"," * @param {boolean=} consume whether to consume the expected token,"," *                           defaults to true"," */","Parser.prototype.expect = function(text, consume) {","    if (this.nextToken.text !== text) {","        throw new ParseError(","            \"Expected '\" + text + \"', got '\" + this.nextToken.text + \"'\",","            this.nextToken","        );","    }","    if (consume !== false) {","        this.consume();","    }","};","","/**"," * Considers the current look ahead token as consumed,"," * and fetches the one after that as the new look ahead."," */","Parser.prototype.consume = function() {","    this.nextToken = this.gullet.get(this.mode === \"math\");","};","","Parser.prototype.switchMode = function(newMode) {","    this.gullet.unget(this.nextToken);","    this.mode = newMode;","    this.consume();","};","","/**"," * Main parsing function, which parses an entire input."," *"," * @return {?Array.<ParseNode>}"," */","Parser.prototype.parse = function() {","    // Try to parse the input","    this.mode = \"math\";","    this.consume();","    var parse = this.parseInput();","    return parse;","};","","/**"," * Parses an entire input tree."," */","Parser.prototype.parseInput = function() {","    // Parse an expression","    var expression = this.parseExpression(false);","    // If we succeeded, make sure there's an EOF at the end","    this.expect(\"EOF\", false);","    return expression;","};","","var endOfExpression = [\"}\", \"\\\\end\", \"\\\\right\", \"&\", \"\\\\\\\\\", \"\\\\cr\"];","","/**"," * Parses an \"expression\", which is a list of atoms."," *"," * @param {boolean} breakOnInfix  Should the parsing stop when we hit infix"," *                  nodes? This happens when functions have higher precendence"," *                  than infix nodes in implicit parses."," *"," * @param {?string} breakOnTokenText  The text of the token that the expression"," *                  should end with, or `null` if something else should end the"," *                  expression."," *"," * @return {ParseNode}"," */","Parser.prototype.parseExpression = function(breakOnInfix, breakOnTokenText) {","    var body = [];","    // Keep adding atoms to the body until we can't parse any more atoms (either","    // we reached the end, a }, or a \\right)","    while (true) {","        var lex = this.nextToken;","        if (endOfExpression.indexOf(lex.text) !== -1) {","            break;","        }","        if (breakOnTokenText && lex.text === breakOnTokenText) {","            break;","        }","        if (breakOnInfix && functions[lex.text] && functions[lex.text].infix) {","            break;","        }","        var atom = this.parseAtom();","        if (!atom) {","            if (!this.settings.throwOnError && lex.text[0] === \"\\\\\") {","                var errorNode = this.handleUnsupportedCmd();","                body.push(errorNode);","                continue;","            }","","            break;","        }","        body.push(atom);","    }","    return this.handleInfixNodes(body);","};","","/**"," * Rewrites infix operators such as \\over with corresponding commands such"," * as \\frac."," *"," * There can only be one infix operator per group.  If there's more than one"," * then the expression is ambiguous.  This can be resolved by adding {}."," *"," * @returns {Array}"," */","Parser.prototype.handleInfixNodes = function(body) {","    var overIndex = -1;","    var funcName;","","    for (var i = 0; i < body.length; i++) {","        var node = body[i];","        if (node.type === \"infix\") {","            if (overIndex !== -1) {","                throw new ParseError(","                    \"only one infix operator per group\",","                    node.value.token);","            }","            overIndex = i;","            funcName = node.value.replaceWith;","        }","    }","","    if (overIndex !== -1) {","        var numerNode;","        var denomNode;","","        var numerBody = body.slice(0, overIndex);","        var denomBody = body.slice(overIndex + 1);","","        if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {","            numerNode = numerBody[0];","        } else {","            numerNode = new ParseNode(\"ordgroup\", numerBody, this.mode);","        }","","        if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {","            denomNode = denomBody[0];","        } else {","            denomNode = new ParseNode(\"ordgroup\", denomBody, this.mode);","        }","","        var value = this.callFunction(","            funcName, [numerNode, denomNode], null);","        return [new ParseNode(value.type, value, this.mode)];","    } else {","        return body;","    }","};","","// The greediness of a superscript or subscript","var SUPSUB_GREEDINESS = 1;","","/**"," * Handle a subscript or superscript with nice errors."," */","Parser.prototype.handleSupSubscript = function(name) {","    var symbolToken = this.nextToken;","    var symbol = symbolToken.text;","    this.consume();","    var group = this.parseGroup();","","    if (!group) {","        if (!this.settings.throwOnError && this.nextToken.text[0] === \"\\\\\") {","            return this.handleUnsupportedCmd();","        } else {","            throw new ParseError(","                \"Expected group after '\" + symbol + \"'\",","                symbolToken","            );","        }","    } else if (group.isFunction) {","        // ^ and _ have a greediness, so handle interactions with functions'","        // greediness","        var funcGreediness = functions[group.result].greediness;","        if (funcGreediness > SUPSUB_GREEDINESS) {","            return this.parseFunction(group);","        } else {","            throw new ParseError(","                \"Got function '\" + group.result + \"' with no arguments \" +","                    \"as \" + name, symbolToken);","        }","    } else {","        return group.result;","    }","};","","/**"," * Converts the textual input of an unsupported command into a text node"," * contained within a color node whose color is determined by errorColor"," */","Parser.prototype.handleUnsupportedCmd = function() {","    var text = this.nextToken.text;","    var textordArray = [];","","    for (var i = 0; i < text.length; i++) {","        textordArray.push(new ParseNode(\"textord\", text[i], \"text\"));","    }","","    var textNode = new ParseNode(","        \"text\",","        {","            body: textordArray,","            type: \"text\"","        },","        this.mode);","","    var colorNode = new ParseNode(","        \"color\",","        {","            color: this.settings.errorColor,","            value: [textNode],","            type: \"color\"","        },","        this.mode);","","    this.consume();","    return colorNode;","};","","/**"," * Parses a group with optional super/subscripts."," *"," * @return {?ParseNode}"," */","Parser.prototype.parseAtom = function() {","    // The body of an atom is an implicit group, so that things like","    // \\left(x\\right)^2 work correctly.","    var base = this.parseImplicitGroup();","","    // In text mode, we don't have superscripts or subscripts","    if (this.mode === \"text\") {","        return base;","    }","","    // Note that base may be empty (i.e. null) at this point.","","    var superscript;","    var subscript;","    while (true) {","        // Lex the first token","        var lex = this.nextToken;","","        if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {","            // We got a limit control","            if (!base || base.type !== \"op\") {","                throw new ParseError(","                    \"Limit controls must follow a math operator\",","                    lex);","            } else {","                var limits = lex.text === \"\\\\limits\";","                base.value.limits = limits;","                base.value.alwaysHandleSupSub = true;","            }","            this.consume();","        } else if (lex.text === \"^\") {","            // We got a superscript start","            if (superscript) {","                throw new ParseError(\"Double superscript\", lex);","            }","            superscript = this.handleSupSubscript(\"superscript\");","        } else if (lex.text === \"_\") {","            // We got a subscript start","            if (subscript) {","                throw new ParseError(\"Double subscript\", lex);","            }","            subscript = this.handleSupSubscript(\"subscript\");","        } else if (lex.text === \"'\") {","            // We got a prime","            var prime = new ParseNode(\"textord\", \"\\\\prime\", this.mode);","","            // Many primes can be grouped together, so we handle this here","            var primes = [prime];","            this.consume();","            // Keep lexing tokens until we get something that's not a prime","            while (this.nextToken.text === \"'\") {","                // For each one, add another prime to the list","                primes.push(prime);","                this.consume();","            }","            // Put them into an ordgroup as the superscript","            superscript = new ParseNode(\"ordgroup\", primes, this.mode);","        } else {","            // If it wasn't ^, _, or ', stop parsing super/subscripts","            break;","        }","    }","","    if (superscript || subscript) {","        // If we got either a superscript or subscript, create a supsub","        return new ParseNode(\"supsub\", {","            base: base,","            sup: superscript,","            sub: subscript","        }, this.mode);","    } else {","        // Otherwise return the original body","        return base;","    }","};","","// A list of the size-changing functions, for use in parseImplicitGroup","var sizeFuncs = [","    \"\\\\tiny\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\",","    \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"","];","","// A list of the style-changing functions, for use in parseImplicitGroup","var styleFuncs = [","    \"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"","];","","/**"," * Parses an implicit group, which is a group that starts at the end of a"," * specified, and ends right before a higher explicit group ends, or at EOL. It"," * is used for functions that appear to affect the current style, like \\Large or"," * \\textrm, where instead of keeping a style we just pretend that there is an"," * implicit grouping after it until the end of the group. E.g."," *   small text {\\Large large text} small text again"," * It is also used for \\left and \\right to get the correct grouping."," *"," * @return {?ParseNode}"," */","Parser.prototype.parseImplicitGroup = function() {","    var start = this.parseSymbol();","","    if (start == null) {","        // If we didn't get anything we handle, fall back to parseFunction","        return this.parseFunction();","    }","","    var func = start.result;","    var body;","","    if (func === \"\\\\left\") {","        // If we see a left:","        // Parse the entire left function (including the delimiter)","        var left = this.parseFunction(start);","        // Parse out the implicit body","        ++this.leftrightDepth;","        body = this.parseExpression(false);","        --this.leftrightDepth;","        // Check the next token","        this.expect(\"\\\\right\", false);","        var right = this.parseFunction();","        return new ParseNode(\"leftright\", {","            body: body,","            left: left.value.value,","            right: right.value.value","        }, this.mode);","    } else if (func === \"\\\\begin\") {","        // begin...end is similar to left...right","        var begin = this.parseFunction(start);","        var envName = begin.value.name;","        if (!environments.hasOwnProperty(envName)) {","            throw new ParseError(","                \"No such environment: \" + envName, begin.value.nameGroup);","        }","        // Build the environment object. Arguments and other information will","        // be made available to the begin and end methods using properties.","        var env = environments[envName];","        var args = this.parseArguments(\"\\\\begin{\" + envName + \"}\", env);","        var context = {","            mode: this.mode,","            envName: envName,","            parser: this,","            positions: args.pop()","        };","        var result = env.handler(context, args);","        this.expect(\"\\\\end\", false);","        var endNameToken = this.nextToken;","        var end = this.parseFunction();","        if (end.value.name !== envName) {","            throw new ParseError(","                \"Mismatch: \\\\begin{\" + envName + \"} matched \" +","                \"by \\\\end{\" + end.value.name + \"}\",","                endNameToken);","        }","        result.position = end.position;","        return result;","    } else if (utils.contains(sizeFuncs, func)) {","        // If we see a sizing function, parse out the implict body","        body = this.parseExpression(false);","        return new ParseNode(\"sizing\", {","            // Figure out what size to use based on the list of functions above","            size: \"size\" + (utils.indexOf(sizeFuncs, func) + 1),","            value: body","        }, this.mode);","    } else if (utils.contains(styleFuncs, func)) {","        // If we see a styling function, parse out the implict body","        body = this.parseExpression(true);","        return new ParseNode(\"styling\", {","            // Figure out what style to use by pulling out the style from","            // the function name","            style: func.slice(1, func.length - 5),","            value: body","        }, this.mode);","    } else {","        // Defer to parseFunction if it's not a function we handle","        return this.parseFunction(start);","    }","};","","/**"," * Parses an entire function, including its base and all of its arguments."," * The base might either have been parsed already, in which case"," * it is provided as an argument, or it's the next group in the input."," *"," * @param {ParseFuncOrArgument=} baseGroup optional as described above"," * @return {?ParseNode}"," */","Parser.prototype.parseFunction = function(baseGroup) {","    if (!baseGroup) {","        baseGroup = this.parseGroup();","    }","","    if (baseGroup) {","        if (baseGroup.isFunction) {","            var func = baseGroup.result;","            var funcData = functions[func];","            if (this.mode === \"text\" && !funcData.allowedInText) {","                throw new ParseError(","                    \"Can't use function '\" + func + \"' in text mode\",","                    baseGroup.token);","            }","","            var args = this.parseArguments(func, funcData);","            var token = baseGroup.token;","            var result = this.callFunction(func, args, args.pop(), token);","            return new ParseNode(result.type, result, this.mode);","        } else {","            return baseGroup.result;","        }","    } else {","        return null;","    }","};","","/**"," * Call a function handler with a suitable context and arguments."," */","Parser.prototype.callFunction = function(name, args, positions, token) {","    var context = {","        funcName: name,","        parser: this,","        positions: positions,","        token: token","    };","    return functions[name].handler(context, args);","};","","/**"," * Parses the arguments of a function or environment"," *"," * @param {string} func  \"\\name\" or \"\\begin{name}\""," * @param {{numArgs:number,numOptionalArgs:number|undefined}} funcData"," * @return the array of arguments, with the list of positions as last element"," */","Parser.prototype.parseArguments = function(func, funcData) {","    var totalArgs = funcData.numArgs + funcData.numOptionalArgs;","    if (totalArgs === 0) {","        return [[this.pos]];","    }","","    var baseGreediness = funcData.greediness;","    var positions = [this.pos];","    var args = [];","","    for (var i = 0; i < totalArgs; i++) {","        var nextToken = this.nextToken;","        var argType = funcData.argTypes && funcData.argTypes[i];","        var arg;","        if (i < funcData.numOptionalArgs) {","            if (argType) {","                arg = this.parseGroupOfType(argType, true);","            } else {","                arg = this.parseGroup(true);","            }","            if (!arg) {","                args.push(null);","                positions.push(this.pos);","                continue;","            }","        } else {","            if (argType) {","                arg = this.parseGroupOfType(argType);","            } else {","                arg = this.parseGroup();","            }","            if (!arg) {","                if (!this.settings.throwOnError &&","                    this.nextToken.text[0] === \"\\\\\") {","                    arg = new ParseFuncOrArgument(","                        this.handleUnsupportedCmd(this.nextToken.text),","                        false);","                } else {","                    throw new ParseError(","                        \"Expected group after '\" + func + \"'\", nextToken);","                }","            }","        }","        var argNode;","        if (arg.isFunction) {","            var argGreediness =","                functions[arg.result].greediness;","            if (argGreediness > baseGreediness) {","                argNode = this.parseFunction(arg);","            } else {","                throw new ParseError(","                    \"Got function '\" + arg.result + \"' as \" +","                    \"argument to '\" + func + \"'\", nextToken);","            }","        } else {","            argNode = arg.result;","        }","        args.push(argNode);","        positions.push(this.pos);","    }","","    args.push(positions);","","    return args;","};","","","/**"," * Parses a group when the mode is changing."," *"," * @return {?ParseFuncOrArgument}"," */","Parser.prototype.parseGroupOfType = function(innerMode, optional) {","    var outerMode = this.mode;","    // Handle `original` argTypes","    if (innerMode === \"original\") {","        innerMode = outerMode;","    }","","    if (innerMode === \"color\") {","        return this.parseColorGroup(optional);","    }","    if (innerMode === \"size\") {","        return this.parseSizeGroup(optional);","    }","","    this.switchMode(innerMode);","    if (innerMode === \"text\") {","        // text mode is special because it should ignore the whitespace before","        // it","        while (this.nextToken.text === \" \") {","            this.consume();","        }","    }","    // By the time we get here, innerMode is one of \"text\" or \"math\".","    // We switch the mode of the parser, recurse, then restore the old mode.","    var res = this.parseGroup(optional);","    this.switchMode(outerMode);","    return res;","};","","/**"," * Parses a group, essentially returning the string formed by the"," * brace-enclosed tokens plus some position information."," *"," * @param {string} modeName  Used to describe the mode in error messages"," * @param {boolean=} optional  Whether the group is optional or required"," */","Parser.prototype.parseStringGroup = function(modeName, optional) {","    if (optional && this.nextToken.text !== \"[\") {","        return null;","    }","    var outerMode = this.mode;","    this.mode = \"text\";","    this.expect(optional ? \"[\" : \"{\");","    var str = \"\";","    var firstToken = this.nextToken;","    var lastToken = firstToken;","    while (this.nextToken.text !== (optional ? \"]\" : \"}\")) {","        if (this.nextToken.text === \"EOF\") {","            throw new ParseError(","                \"Unexpected end of input in \" + modeName,","                firstToken.range(this.nextToken, str));","        }","        lastToken = this.nextToken;","        str += lastToken.text;","        this.consume();","    }","    this.mode = outerMode;","    this.expect(optional ? \"]\" : \"}\");","    return firstToken.range(lastToken, str);","};","","/**"," * Parses a regex-delimited group: the largest sequence of tokens"," * whose concatenated strings match `regex`. Returns the string"," * formed by the tokens plus some position information."," *"," * @param {RegExp} regex"," * @param {string} modeName  Used to describe the mode in error messages"," */","Parser.prototype.parseRegexGroup = function(regex, modeName) {","    var outerMode = this.mode;","    this.mode = \"text\";","    var firstToken = this.nextToken;","    var lastToken = firstToken;","    var str = \"\";","    while (this.nextToken.text !== \"EOF\"","           && regex.test(str + this.nextToken.text)) {","        lastToken = this.nextToken;","        str += lastToken.text;","        this.consume();","    }","    if (str === \"\") {","        throw new ParseError(","            \"Invalid \" + modeName + \": '\" + firstToken.text + \"'\",","            firstToken);","    }","    this.mode = outerMode;","    return firstToken.range(lastToken, str);","};","","/**"," * Parses a color description."," */","Parser.prototype.parseColorGroup = function(optional) {","    var res = this.parseStringGroup(\"color\", optional);","    if (!res) {","        return null;","    }","    var match = (/^(#[a-z0-9]+|[a-z]+)$/i).exec(res.text);","    if (!match) {","        throw new ParseError(\"Invalid color: '\" + res.text + \"'\", res);","    }","    return new ParseFuncOrArgument(","        new ParseNode(\"color\", match[0], this.mode),","        false);","};","","/**"," * Parses a size specification, consisting of magnitude and unit."," */","Parser.prototype.parseSizeGroup = function(optional) {","    var res;","    if (!optional && this.nextToken.text !== \"{\") {","        res = this.parseRegexGroup(","            /^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2}$/, \"size\");","    } else {","        res = this.parseStringGroup(\"size\", optional);","    }","    if (!res) {","        return null;","    }","    var match = (/([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/).exec(res.text);","    if (!match) {","        throw new ParseError(\"Invalid size: '\" + res.text + \"'\", res);","    }","    var data = {","        number: +(match[1] + match[2]), // sign + magnitude, cast to number","        unit: match[3]","    };","    if (data.unit !== \"em\" && data.unit !== \"ex\" && data.unit !== \"mu\") {","        throw new ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);","    }","    return new ParseFuncOrArgument(","        new ParseNode(\"color\", data, this.mode),","        false);","};","","/**"," * If the argument is false or absent, this parses an ordinary group,"," * which is either a single nucleus (like \"x\") or an expression"," * in braces (like \"{x+y}\")."," * If the argument is true, it parses either a bracket-delimited expression"," * (like \"[x+y]\") or returns null to indicate the absence of a"," * bracket-enclosed group."," *"," * @param {boolean=} optional  Whether the group is optional or required"," * @return {?ParseFuncOrArgument}"," */","Parser.prototype.parseGroup = function(optional) {","    var firstToken = this.nextToken;","    // Try to parse an open brace","    if (this.nextToken.text === (optional ? \"[\" : \"{\")) {","        // If we get a brace, parse an expression","        this.consume();","        var expression = this.parseExpression(false, optional ? \"]\" : null);","        var lastToken = this.nextToken;","        // Make sure we get a close brace","        this.expect(optional ? \"]\" : \"}\");","        if (this.mode === \"text\") {","            this.formLigatures(expression);","        }","        return new ParseFuncOrArgument(","            new ParseNode(\"ordgroup\", expression, this.mode,","                          firstToken, lastToken),","            false);","    } else {","        // Otherwise, just return a nucleus, or nothing for an optional group","        return optional ? null : this.parseSymbol();","    }","};","","/**"," * Form ligature-like combinations of characters for text mode."," * This includes inputs like \"--\", \"---\", \"``\" and \"''\"."," * The result will simply replace multiple textord nodes with a single"," * character in each value by a single textord node having multiple"," * characters in its value.  The representation is still ASCII source."," *"," * @param {Array.<ParseNode>} group  the nodes of this group,"," *                                   list will be moified in place"," */","Parser.prototype.formLigatures = function(group) {","    var i;","    var n = group.length - 1;","    for (i = 0; i < n; ++i) {","        var a = group[i];","        var v = a.value;","        if (v === \"-\" && group[i + 1].value === \"-\") {","            if (i + 1 < n && group[i + 2].value === \"-\") {","                group.splice(i, 3, new ParseNode(","                    \"textord\", \"---\", \"text\", a, group[i + 2]));","                n -= 2;","            } else {","                group.splice(i, 2, new ParseNode(","                    \"textord\", \"--\", \"text\", a, group[i + 1]));","                n -= 1;","            }","        }","        if ((v === \"'\" || v === \"`\") && group[i + 1].value === v) {","            group.splice(i, 2, new ParseNode(","                \"textord\", v + v, \"text\", a, group[i + 1]));","            n -= 1;","        }","    }","};","","/**"," * Parse a single symbol out of the string. Here, we handle both the functions"," * we have defined, as well as the single character symbols"," *"," * @return {?ParseFuncOrArgument}"," */","Parser.prototype.parseSymbol = function() {","    var nucleus = this.nextToken;","","    if (functions[nucleus.text]) {","        this.consume();","        // If there exists a function with this name, we return the function and","        // say that it is a function.","        return new ParseFuncOrArgument(","            nucleus.text,","            true, nucleus);","    } else if (symbols[this.mode][nucleus.text]) {","        this.consume();","        // Otherwise if this is a no-argument function, find the type it","        // corresponds to in the symbols map","        return new ParseFuncOrArgument(","            new ParseNode(symbols[this.mode][nucleus.text].group,","                          nucleus.text, this.mode, nucleus),","            false, nucleus);","    } else if (this.mode === \"text\" && cjkRegex.test(nucleus.text)) {","        this.consume();","        return new ParseFuncOrArgument(","            new ParseNode(\"textord\", nucleus.text, this.mode, nucleus),","            false, nucleus);","    } else {","        return null;","    }","};","","Parser.prototype.ParseNode = ParseNode;","","module.exports = Parser;",""],"l":{"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"9":1,"10":1,"49":1,"52":0,"54":0,"56":0,"59":1,"65":1,"66":0,"68":0,"69":0,"79":1,"80":0,"81":0,"86":0,"87":0,"95":1,"96":0,"99":1,"100":0,"101":0,"102":0,"110":1,"112":0,"113":0,"114":0,"115":0,"121":1,"123":0,"125":0,"126":0,"129":1,"144":1,"145":0,"148":0,"149":0,"150":0,"151":0,"153":0,"154":0,"156":0,"157":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"167":0,"169":0,"171":0,"183":1,"184":0,"185":0,"187":0,"188":0,"189":0,"190":0,"191":0,"195":0,"196":0,"200":0,"201":0,"202":0,"204":0,"205":0,"207":0,"208":0,"210":0,"213":0,"214":0,"216":0,"219":0,"221":0,"223":0,"228":1,"233":1,"234":0,"235":0,"236":0,"237":0,"239":0,"240":0,"241":0,"243":0,"248":0,"251":0,"252":0,"253":0,"255":0,"260":0,"268":1,"269":0,"270":0,"272":0,"273":0,"276":0,"284":0,"293":0,"294":0,"302":1,"305":0,"308":0,"309":0,"314":0,"315":0,"316":0,"318":0,"320":0,"322":0,"323":0,"327":0,"328":0,"329":0,"331":0,"332":0,"334":0,"335":0,"337":0,"338":0,"340":0,"341":0,"343":0,"344":0,"346":0,"349":0,"350":0,"352":0,"354":0,"355":0,"358":0,"361":0,"365":0,"367":0,"374":0,"379":1,"385":1,"400":1,"401":0,"403":0,"405":0,"408":0,"409":0,"411":0,"414":0,"416":0,"417":0,"418":0,"420":0,"421":0,"422":0,"427":0,"429":0,"430":0,"431":0,"432":0,"437":0,"438":0,"439":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"455":0,"456":0,"457":0,"459":0,"460":0,"465":0,"467":0,"468":0,"476":0,"488":1,"489":0,"490":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"503":0,"504":0,"505":0,"506":0,"508":0,"511":0,"518":1,"519":0,"525":0,"535":1,"536":0,"537":0,"538":0,"541":0,"542":0,"543":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"553":0,"555":0,"556":0,"557":0,"558":0,"561":0,"562":0,"564":0,"566":0,"567":0,"569":0,"573":0,"578":0,"579":0,"580":0,"582":0,"583":0,"585":0,"590":0,"592":0,"593":0,"596":0,"598":0,"607":1,"608":0,"610":0,"611":0,"614":0,"615":0,"617":0,"618":0,"621":0,"622":0,"625":0,"626":0,"631":0,"632":0,"633":0,"643":1,"644":0,"645":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"659":0,"660":0,"661":0,"663":0,"664":0,"665":0,"676":1,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"684":0,"685":0,"686":0,"688":0,"689":0,"693":0,"694":0,"700":1,"701":0,"702":0,"703":0,"705":0,"706":0,"707":0,"709":0,"717":1,"718":0,"719":0,"720":0,"723":0,"725":0,"726":0,"728":0,"729":0,"730":0,"732":0,"736":0,"737":0,"739":0,"755":1,"756":0,"758":0,"760":0,"761":0,"762":0,"764":0,"765":0,"766":0,"768":0,"774":0,"788":1,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"798":0,"800":0,"802":0,"805":0,"806":0,"808":0,"819":1,"820":0,"822":0,"823":0,"826":0,"829":0,"830":0,"833":0,"837":0,"838":0,"839":0,"843":0,"847":1,"849":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/functions.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/functions.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":31,"7":11,"8":31,"9":2,"10":31,"11":31,"12":206,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":1,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":1,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":1,"43":0,"44":1,"45":0,"46":0,"47":1,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":1,"59":0,"60":0,"61":1,"62":1,"63":1,"64":1,"65":0,"66":0,"67":1,"68":0,"69":1,"70":0,"71":1,"72":0,"73":1,"74":0,"75":1,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":1,"105":0,"106":0,"107":0,"108":1,"109":0,"110":0,"111":1,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":1,"120":1,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":1,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0},"b":{"1":[11,20],"2":[2,29],"3":[26,5],"4":[31,28],"5":[0,0],"6":[0,0],"7":[0,0,0,0,0,0,0,0],"8":[0,0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0]},"f":{"1":31,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"defineFunction","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":47}}},"2":{"name":"(anonymous_2)","line":107,"loc":{"start":{"line":107,"column":18},"end":{"line":107,"column":32}}},"3":{"name":"(anonymous_3)","line":119,"loc":{"start":{"line":119,"column":3},"end":{"line":119,"column":27}}},"4":{"name":"(anonymous_4)","line":144,"loc":{"start":{"line":144,"column":3},"end":{"line":144,"column":27}}},"5":{"name":"(anonymous_5)","line":159,"loc":{"start":{"line":159,"column":3},"end":{"line":159,"column":27}}},"6":{"name":"(anonymous_6)","line":172,"loc":{"start":{"line":172,"column":3},"end":{"line":172,"column":27}}},"7":{"name":"(anonymous_7)","line":183,"loc":{"start":{"line":183,"column":3},"end":{"line":183,"column":27}}},"8":{"name":"(anonymous_8)","line":196,"loc":{"start":{"line":196,"column":3},"end":{"line":196,"column":27}}},"9":{"name":"(anonymous_9)","line":213,"loc":{"start":{"line":213,"column":3},"end":{"line":213,"column":27}}},"10":{"name":"(anonymous_10)","line":223,"loc":{"start":{"line":223,"column":3},"end":{"line":223,"column":21}}},"11":{"name":"(anonymous_11)","line":231,"loc":{"start":{"line":231,"column":3},"end":{"line":231,"column":27}}},"12":{"name":"(anonymous_12)","line":245,"loc":{"start":{"line":245,"column":3},"end":{"line":245,"column":27}}},"13":{"name":"(anonymous_13)","line":257,"loc":{"start":{"line":257,"column":3},"end":{"line":257,"column":27}}},"14":{"name":"(anonymous_14)","line":285,"loc":{"start":{"line":285,"column":3},"end":{"line":285,"column":27}}},"15":{"name":"(anonymous_15)","line":295,"loc":{"start":{"line":295,"column":3},"end":{"line":295,"column":27}}},"16":{"name":"(anonymous_16)","line":364,"loc":{"start":{"line":364,"column":3},"end":{"line":364,"column":27}}},"17":{"name":"(anonymous_17)","line":385,"loc":{"start":{"line":385,"column":3},"end":{"line":385,"column":21}}},"18":{"name":"(anonymous_18)","line":400,"loc":{"start":{"line":400,"column":3},"end":{"line":400,"column":21}}},"19":{"name":"(anonymous_19)","line":414,"loc":{"start":{"line":414,"column":3},"end":{"line":414,"column":21}}},"20":{"name":"(anonymous_20)","line":430,"loc":{"start":{"line":430,"column":3},"end":{"line":430,"column":21}}},"21":{"name":"(anonymous_21)","line":442,"loc":{"start":{"line":442,"column":3},"end":{"line":442,"column":27}}},"22":{"name":"(anonymous_22)","line":460,"loc":{"start":{"line":460,"column":3},"end":{"line":460,"column":27}}},"23":{"name":"(anonymous_23)","line":514,"loc":{"start":{"line":514,"column":3},"end":{"line":514,"column":27}}},"24":{"name":"(anonymous_24)","line":523,"loc":{"start":{"line":523,"column":21},"end":{"line":523,"column":46}}},"25":{"name":"(anonymous_25)","line":540,"loc":{"start":{"line":540,"column":3},"end":{"line":540,"column":27}}},"26":{"name":"(anonymous_26)","line":555,"loc":{"start":{"line":555,"column":3},"end":{"line":555,"column":27}}},"27":{"name":"(anonymous_27)","line":568,"loc":{"start":{"line":568,"column":3},"end":{"line":568,"column":27}}},"28":{"name":"(anonymous_28)","line":606,"loc":{"start":{"line":606,"column":3},"end":{"line":606,"column":27}}},"29":{"name":"(anonymous_29)","line":627,"loc":{"start":{"line":627,"column":3},"end":{"line":627,"column":27}}},"30":{"name":"(anonymous_30)","line":640,"loc":{"start":{"line":640,"column":3},"end":{"line":640,"column":21}}},"31":{"name":"(anonymous_31)","line":667,"loc":{"start":{"line":667,"column":3},"end":{"line":667,"column":27}}},"32":{"name":"(anonymous_32)","line":679,"loc":{"start":{"line":679,"column":3},"end":{"line":679,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":31}},"2":{"start":{"line":2,"column":0},"end":{"line":2,"column":41}},"3":{"start":{"line":3,"column":0},"end":{"line":3,"column":39}},"4":{"start":{"line":4,"column":0},"end":{"line":4,"column":36}},"5":{"start":{"line":83,"column":0},"end":{"line":103,"column":1}},"6":{"start":{"line":84,"column":4},"end":{"line":86,"column":5}},"7":{"start":{"line":85,"column":8},"end":{"line":85,"column":24}},"8":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"9":{"start":{"line":88,"column":8},"end":{"line":88,"column":35}},"10":{"start":{"line":91,"column":4},"end":{"line":99,"column":6}},"11":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"12":{"start":{"line":101,"column":8},"end":{"line":101,"column":40}},"13":{"start":{"line":107,"column":0},"end":{"line":113,"column":2}},"14":{"start":{"line":108,"column":4},"end":{"line":112,"column":5}},"15":{"start":{"line":109,"column":8},"end":{"line":109,"column":25}},"16":{"start":{"line":111,"column":8},"end":{"line":111,"column":21}},"17":{"start":{"line":116,"column":0},"end":{"line":127,"column":3}},"18":{"start":{"line":120,"column":4},"end":{"line":120,"column":24}},"19":{"start":{"line":121,"column":4},"end":{"line":121,"column":23}},"20":{"start":{"line":122,"column":4},"end":{"line":126,"column":6}},"21":{"start":{"line":130,"column":0},"end":{"line":134,"column":2}},"22":{"start":{"line":136,"column":0},"end":{"line":151,"column":3}},"23":{"start":{"line":145,"column":4},"end":{"line":145,"column":23}},"24":{"start":{"line":146,"column":4},"end":{"line":150,"column":6}},"25":{"start":{"line":154,"column":0},"end":{"line":167,"column":3}},"26":{"start":{"line":160,"column":4},"end":{"line":160,"column":24}},"27":{"start":{"line":161,"column":4},"end":{"line":161,"column":23}},"28":{"start":{"line":162,"column":4},"end":{"line":166,"column":6}},"29":{"start":{"line":170,"column":0},"end":{"line":178,"column":3}},"30":{"start":{"line":173,"column":4},"end":{"line":173,"column":23}},"31":{"start":{"line":174,"column":4},"end":{"line":177,"column":6}},"32":{"start":{"line":181,"column":0},"end":{"line":189,"column":3}},"33":{"start":{"line":184,"column":4},"end":{"line":184,"column":23}},"34":{"start":{"line":185,"column":4},"end":{"line":188,"column":6}},"35":{"start":{"line":192,"column":0},"end":{"line":206,"column":3}},"36":{"start":{"line":197,"column":4},"end":{"line":197,"column":24}},"37":{"start":{"line":198,"column":4},"end":{"line":198,"column":24}},"38":{"start":{"line":199,"column":4},"end":{"line":199,"column":25}},"39":{"start":{"line":200,"column":4},"end":{"line":205,"column":6}},"40":{"start":{"line":210,"column":0},"end":{"line":218,"column":3}},"41":{"start":{"line":214,"column":4},"end":{"line":217,"column":6}},"42":{"start":{"line":221,"column":0},"end":{"line":227,"column":3}},"43":{"start":{"line":224,"column":4},"end":{"line":226,"column":6}},"44":{"start":{"line":229,"column":0},"end":{"line":237,"column":3}},"45":{"start":{"line":232,"column":4},"end":{"line":232,"column":23}},"46":{"start":{"line":233,"column":4},"end":{"line":236,"column":6}},"47":{"start":{"line":240,"column":0},"end":{"line":252,"column":3}},"48":{"start":{"line":246,"column":4},"end":{"line":246,"column":23}},"49":{"start":{"line":247,"column":4},"end":{"line":251,"column":6}},"50":{"start":{"line":255,"column":0},"end":{"line":280,"column":3}},"51":{"start":{"line":258,"column":4},"end":{"line":258,"column":22}},"52":{"start":{"line":259,"column":4},"end":{"line":259,"column":25}},"53":{"start":{"line":261,"column":4},"end":{"line":267,"column":20}},"54":{"start":{"line":269,"column":4},"end":{"line":273,"column":17}},"55":{"start":{"line":275,"column":4},"end":{"line":279,"column":6}},"56":{"start":{"line":283,"column":0},"end":{"line":291,"column":3}},"57":{"start":{"line":286,"column":4},"end":{"line":290,"column":6}},"58":{"start":{"line":293,"column":0},"end":{"line":302,"column":3}},"59":{"start":{"line":296,"column":4},"end":{"line":296,"column":23}},"60":{"start":{"line":297,"column":4},"end":{"line":301,"column":6}},"61":{"start":{"line":305,"column":0},"end":{"line":322,"column":2}},"62":{"start":{"line":324,"column":0},"end":{"line":337,"column":2}},"63":{"start":{"line":339,"column":0},"end":{"line":343,"column":2}},"64":{"start":{"line":346,"column":0},"end":{"line":371,"column":3}},"65":{"start":{"line":365,"column":4},"end":{"line":365,"column":23}},"66":{"start":{"line":366,"column":4},"end":{"line":370,"column":6}},"67":{"start":{"line":378,"column":0},"end":{"line":392,"column":3}},"68":{"start":{"line":386,"column":4},"end":{"line":391,"column":6}},"69":{"start":{"line":395,"column":0},"end":{"line":407,"column":3}},"70":{"start":{"line":401,"column":4},"end":{"line":406,"column":6}},"71":{"start":{"line":410,"column":0},"end":{"line":421,"column":3}},"72":{"start":{"line":415,"column":4},"end":{"line":420,"column":6}},"73":{"start":{"line":424,"column":0},"end":{"line":437,"column":3}},"74":{"start":{"line":431,"column":4},"end":{"line":436,"column":6}},"75":{"start":{"line":440,"column":0},"end":{"line":450,"column":3}},"76":{"start":{"line":443,"column":4},"end":{"line":443,"column":23}},"77":{"start":{"line":444,"column":4},"end":{"line":449,"column":6}},"78":{"start":{"line":453,"column":0},"end":{"line":508,"column":3}},"79":{"start":{"line":461,"column":4},"end":{"line":461,"column":24}},"80":{"start":{"line":462,"column":4},"end":{"line":462,"column":24}},"81":{"start":{"line":463,"column":4},"end":{"line":463,"column":19}},"82":{"start":{"line":464,"column":4},"end":{"line":464,"column":25}},"83":{"start":{"line":465,"column":4},"end":{"line":465,"column":26}},"84":{"start":{"line":466,"column":4},"end":{"line":466,"column":22}},"85":{"start":{"line":468,"column":4},"end":{"line":486,"column":5}},"86":{"start":{"line":472,"column":12},"end":{"line":472,"column":30}},"87":{"start":{"line":473,"column":12},"end":{"line":473,"column":18}},"88":{"start":{"line":475,"column":12},"end":{"line":475,"column":31}},"89":{"start":{"line":476,"column":12},"end":{"line":476,"column":18}},"90":{"start":{"line":480,"column":12},"end":{"line":480,"column":31}},"91":{"start":{"line":481,"column":12},"end":{"line":481,"column":28}},"92":{"start":{"line":482,"column":12},"end":{"line":482,"column":29}},"93":{"start":{"line":483,"column":12},"end":{"line":483,"column":18}},"94":{"start":{"line":485,"column":12},"end":{"line":485,"column":60}},"95":{"start":{"line":488,"column":4},"end":{"line":497,"column":5}},"96":{"start":{"line":491,"column":12},"end":{"line":491,"column":29}},"97":{"start":{"line":492,"column":12},"end":{"line":492,"column":18}},"98":{"start":{"line":495,"column":12},"end":{"line":495,"column":26}},"99":{"start":{"line":496,"column":12},"end":{"line":496,"column":18}},"100":{"start":{"line":499,"column":4},"end":{"line":507,"column":6}},"101":{"start":{"line":511,"column":0},"end":{"line":520,"column":3}},"102":{"start":{"line":515,"column":4},"end":{"line":515,"column":23}},"103":{"start":{"line":516,"column":4},"end":{"line":519,"column":6}},"104":{"start":{"line":523,"column":0},"end":{"line":531,"column":2}},"105":{"start":{"line":524,"column":4},"end":{"line":530,"column":5}},"106":{"start":{"line":525,"column":8},"end":{"line":525,"column":21}},"107":{"start":{"line":527,"column":8},"end":{"line":529,"column":43}},"108":{"start":{"line":533,"column":0},"end":{"line":549,"column":3}},"109":{"start":{"line":541,"column":4},"end":{"line":541,"column":49}},"110":{"start":{"line":543,"column":4},"end":{"line":548,"column":6}},"111":{"start":{"line":551,"column":0},"end":{"line":564,"column":3}},"112":{"start":{"line":556,"column":4},"end":{"line":556,"column":49}},"113":{"start":{"line":560,"column":4},"end":{"line":563,"column":6}},"114":{"start":{"line":566,"column":0},"end":{"line":578,"column":3}},"115":{"start":{"line":569,"column":4},"end":{"line":569,"column":49}},"116":{"start":{"line":570,"column":4},"end":{"line":572,"column":5}},"117":{"start":{"line":571,"column":8},"end":{"line":571,"column":73}},"118":{"start":{"line":574,"column":4},"end":{"line":577,"column":6}},"119":{"start":{"line":581,"column":0},"end":{"line":584,"column":12}},"120":{"start":{"line":588,"column":0},"end":{"line":591,"column":12}},"121":{"start":{"line":593,"column":0},"end":{"line":617,"column":3}},"122":{"start":{"line":607,"column":4},"end":{"line":607,"column":23}},"123":{"start":{"line":608,"column":4},"end":{"line":608,"column":32}},"124":{"start":{"line":609,"column":4},"end":{"line":611,"column":5}},"125":{"start":{"line":610,"column":8},"end":{"line":610,"column":33}},"126":{"start":{"line":612,"column":4},"end":{"line":616,"column":6}},"127":{"start":{"line":620,"column":0},"end":{"line":634,"column":3}},"128":{"start":{"line":628,"column":4},"end":{"line":628,"column":23}},"129":{"start":{"line":629,"column":4},"end":{"line":633,"column":6}},"130":{"start":{"line":637,"column":0},"end":{"line":660,"column":3}},"131":{"start":{"line":641,"column":4},"end":{"line":641,"column":20}},"132":{"start":{"line":642,"column":4},"end":{"line":654,"column":5}},"133":{"start":{"line":644,"column":12},"end":{"line":644,"column":35}},"134":{"start":{"line":645,"column":12},"end":{"line":645,"column":18}},"135":{"start":{"line":647,"column":12},"end":{"line":647,"column":36}},"136":{"start":{"line":648,"column":12},"end":{"line":648,"column":18}},"137":{"start":{"line":650,"column":12},"end":{"line":650,"column":41}},"138":{"start":{"line":651,"column":12},"end":{"line":651,"column":18}},"139":{"start":{"line":653,"column":12},"end":{"line":653,"column":66}},"140":{"start":{"line":655,"column":4},"end":{"line":659,"column":6}},"141":{"start":{"line":663,"column":0},"end":{"line":673,"column":3}},"142":{"start":{"line":668,"column":4},"end":{"line":668,"column":23}},"143":{"start":{"line":669,"column":4},"end":{"line":672,"column":6}},"144":{"start":{"line":676,"column":0},"end":{"line":693,"column":3}},"145":{"start":{"line":680,"column":4},"end":{"line":680,"column":28}},"146":{"start":{"line":681,"column":4},"end":{"line":683,"column":5}},"147":{"start":{"line":682,"column":8},"end":{"line":682,"column":68}},"148":{"start":{"line":684,"column":4},"end":{"line":684,"column":18}},"149":{"start":{"line":685,"column":4},"end":{"line":687,"column":5}},"150":{"start":{"line":686,"column":8},"end":{"line":686,"column":41}},"151":{"start":{"line":688,"column":4},"end":{"line":692,"column":6}}},"branchMap":{"1":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":4},"end":{"line":84,"column":4}},{"start":{"line":84,"column":4},"end":{"line":84,"column":4}}]},"2":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"3":{"line":94,"type":"cond-expr","locations":[{"start":{"line":94,"column":55},"end":{"line":94,"column":56}},{"start":{"line":94,"column":59},"end":{"line":94,"column":75}}]},"4":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":25},"end":{"line":96,"column":46}},{"start":{"line":96,"column":50},"end":{"line":96,"column":51}}]},"5":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"6":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":15},"end":{"line":202,"column":20}},{"start":{"line":202,"column":24},"end":{"line":202,"column":35}}]},"7":{"line":468,"type":"switch","locations":[{"start":{"line":469,"column":8},"end":{"line":469,"column":23}},{"start":{"line":470,"column":8},"end":{"line":470,"column":22}},{"start":{"line":471,"column":8},"end":{"line":473,"column":18}},{"start":{"line":474,"column":8},"end":{"line":476,"column":18}},{"start":{"line":477,"column":8},"end":{"line":477,"column":24}},{"start":{"line":478,"column":8},"end":{"line":478,"column":23}},{"start":{"line":479,"column":8},"end":{"line":483,"column":18}},{"start":{"line":484,"column":8},"end":{"line":485,"column":60}}]},"8":{"line":488,"type":"switch","locations":[{"start":{"line":489,"column":8},"end":{"line":489,"column":23}},{"start":{"line":490,"column":8},"end":{"line":492,"column":18}},{"start":{"line":493,"column":8},"end":{"line":493,"column":23}},{"start":{"line":494,"column":8},"end":{"line":496,"column":18}}]},"9":{"line":524,"type":"if","locations":[{"start":{"line":524,"column":4},"end":{"line":524,"column":4}},{"start":{"line":524,"column":4},"end":{"line":524,"column":4}}]},"10":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":4},"end":{"line":570,"column":4}},{"start":{"line":570,"column":4},"end":{"line":570,"column":4}}]},"11":{"line":609,"type":"if","locations":[{"start":{"line":609,"column":4},"end":{"line":609,"column":4}},{"start":{"line":609,"column":4},"end":{"line":609,"column":4}}]},"12":{"line":642,"type":"switch","locations":[{"start":{"line":643,"column":8},"end":{"line":645,"column":18}},{"start":{"line":646,"column":8},"end":{"line":648,"column":18}},{"start":{"line":649,"column":8},"end":{"line":651,"column":18}},{"start":{"line":652,"column":8},"end":{"line":653,"column":66}}]},"13":{"line":681,"type":"if","locations":[{"start":{"line":681,"column":4},"end":{"line":681,"column":4}},{"start":{"line":681,"column":4},"end":{"line":681,"column":4}}]}},"code":["var utils = require(\"./utils\");","var ParseError = require(\"./ParseError\");","var parseData = require(\"./parseData\");","var ParseNode = parseData.ParseNode;","","/* This file contains a list of functions that we parse, identified by"," * the calls to defineFunction."," *"," * The first argument to defineFunction is a single name or a list of names."," * All functions named in such a list will share a single implementation."," *"," * Each declared function can have associated properties, which"," * include the following:"," *"," *  - numArgs: The number of arguments the function takes."," *             If this is the only property, it can be passed as a number"," *             instead of an element of a properties object."," *  - argTypes: (optional) An array corresponding to each argument of the"," *              function, giving the type of argument that should be parsed. Its"," *              length should be equal to `numArgs + numOptionalArgs`. Valid"," *              types:"," *               - \"size\": A size-like thing, such as \"1em\" or \"5ex\""," *               - \"color\": An html color, like \"#abc\" or \"blue\""," *               - \"original\": The same type as the environment that the"," *                             function being parsed is in (e.g. used for the"," *                             bodies of functions like \\color where the first"," *                             argument is special and the second argument is"," *                             parsed normally)"," *              Other possible types (probably shouldn't be used)"," *               - \"text\": Text-like (e.g. \\text)"," *               - \"math\": Normal math"," *              If undefined, this will be treated as an appropriate length"," *              array of \"original\" strings"," *  - greediness: (optional) The greediness of the function to use ungrouped"," *                arguments."," *"," *                E.g. if you have an expression"," *                  \\sqrt \\frac 1 2"," *                since \\frac has greediness=2 vs \\sqrt's greediness=1, \\frac"," *                will use the two arguments '1' and '2' as its two arguments,"," *                then that whole function will be used as the argument to"," *                \\sqrt. On the other hand, the expressions"," *                  \\frac \\frac 1 2 3"," *                and"," *                  \\frac \\sqrt 1 2"," *                will fail because \\frac and \\frac have equal greediness"," *                and \\sqrt has a lower greediness than \\frac respectively. To"," *                make these parse, we would have to change them to:"," *                  \\frac {\\frac 1 2} 3"," *                and"," *                  \\frac {\\sqrt 1} 2"," *"," *                The default value is `1`"," *  - allowedInText: (optional) Whether or not the function is allowed inside"," *                   text mode (default false)"," *  - numOptionalArgs: (optional) The number of optional arguments the function"," *                     should parse. If the optional arguments aren't found,"," *                     `null` will be passed to the handler in their place."," *                     (default 0)"," *  - infix: (optional) Must be true if the function is an infix operator."," *"," * The last argument is that implementation, the handler for the function(s)."," * It is called to handle these functions and their arguments."," * It receives two arguments:"," *  - context contains information and references provided by the parser"," *  - args is an array of arguments obtained from TeX input"," * The context contains the following properties:"," *  - funcName: the text (i.e. name) of the function, including \\"," *  - parser: the parser object"," *  - lexer: the lexer object"," *  - positions: the positions in the overall string of the function"," *               and the arguments."," * The latter three should only be used to produce error messages."," *"," * The function should return an object with the following keys:"," *  - type: The type of element that this is. This is then used in"," *          buildHTML/buildMathML to determine which function"," *          should be called to build this node into a DOM node"," * Any other data can be added to the object, which will be passed"," * in to the function in buildHTML/buildMathML as `group.value`."," */","","function defineFunction(names, props, handler) {","    if (typeof names === \"string\") {","        names = [names];","    }","    if (typeof props === \"number\") {","        props = { numArgs: props };","    }","    // Set default values of functions","    var data = {","        numArgs: props.numArgs,","        argTypes: props.argTypes,","        greediness: (props.greediness === undefined) ? 1 : props.greediness,","        allowedInText: !!props.allowedInText,","        numOptionalArgs: props.numOptionalArgs || 0,","        infix: !!props.infix,","        handler: handler","    };","    for (var i = 0; i < names.length; ++i) {","        module.exports[names[i]] = data;","    }","}","","// Since the corresponding buildHTML/buildMathML function expects a","// list of elements, we normalize for different kinds of arguments","var ordargument = function(arg) {","    if (arg.type === \"ordgroup\") {","        return arg.value;","    } else {","        return [arg];","    }","};","","// A normal square root","defineFunction(\"\\\\sqrt\", {","    numArgs: 1,","    numOptionalArgs: 1","}, function(context, args) {","    var index = args[0];","    var body = args[1];","    return {","        type: \"sqrt\",","        body: body,","        index: index","    };","});","","// Non-mathy text, possibly in a font","var textFunctionStyles = {","    \"\\\\text\": undefined, \"\\\\textrm\": \"mathrm\", \"\\\\textsf\": \"mathsf\",","    \"\\\\texttt\": \"mathtt\", \"\\\\textnormal\": \"mathrm\", \"\\\\textbf\": \"mathbf\",","    \"\\\\textit\": \"textit\"","};","","defineFunction([","    \"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\",","    \"\\\\textbf\", \"\\\\textit\"","], {","    numArgs: 1,","    argTypes: [\"text\"],","    greediness: 2,","    allowedInText: true","}, function(context, args) {","    var body = args[0];","    return {","        type: \"text\",","        body: ordargument(body),","        style: textFunctionStyles[context.funcName]","    };","});","","// A two-argument custom color","defineFunction(\"\\\\color\", {","    numArgs: 2,","    allowedInText: true,","    greediness: 3,","    argTypes: [\"color\", \"original\"]","}, function(context, args) {","    var color = args[0];","    var body = args[1];","    return {","        type: \"color\",","        color: color.value,","        value: ordargument(body)","    };","});","","// An overline","defineFunction(\"\\\\overline\", {","    numArgs: 1","}, function(context, args) {","    var body = args[0];","    return {","        type: \"overline\",","        body: body","    };","});","","// An underline","defineFunction(\"\\\\underline\", {","    numArgs: 1","}, function(context, args) {","    var body = args[0];","    return {","        type: \"underline\",","        body: body","    };","});","","// A box of the width and height","defineFunction(\"\\\\rule\", {","    numArgs: 2,","    numOptionalArgs: 1,","    argTypes: [\"size\", \"size\", \"size\"]","}, function(context, args) {","    var shift = args[0];","    var width = args[1];","    var height = args[2];","    return {","        type: \"rule\",","        shift: shift && shift.value,","        width: width.value,","        height: height.value","    };","});","","// TODO: In TeX, \\mkern only accepts mu-units, and \\kern does not accept","// mu-units. In current KaTeX we relax this; both commands accept any unit.","defineFunction([\"\\\\kern\", \"\\\\mkern\"], {","    numArgs: 1,","    argTypes: [\"size\"]","}, function(context, args) {","    return {","        type: \"kern\",","        dimension: args[0].value","    };","});","","// A KaTeX logo","defineFunction(\"\\\\KaTeX\", {","    numArgs: 0","}, function(context) {","    return {","        type: \"katex\"","    };","});","","defineFunction(\"\\\\phantom\", {","    numArgs: 1","}, function(context, args) {","    var body = args[0];","    return {","        type: \"phantom\",","        value: ordargument(body)","    };","});","","// Math class commands except \\mathop","defineFunction([","    \"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\",","    \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"","], {","    numArgs: 1","}, function(context, args) {","    var body = args[0];","    return {","        type: \"mclass\",","        mclass: \"m\" + context.funcName.substr(5),","        value: ordargument(body)","    };","});","","// Build a relation by placing one symbol on top of another","defineFunction(\"\\\\stackrel\", {","    numArgs: 2","}, function(context, args) {","    var top = args[0];","    var bottom = args[1];","","    var bottomop = new ParseNode(\"op\", {","        type: \"op\",","        limits: true,","        alwaysHandleSupSub: true,","        symbol: false,","        value: ordargument(bottom)","    }, bottom.mode);","","    var supsub = new ParseNode(\"supsub\", {","        base: bottomop,","        sup: top,","        sub: null","    }, top.mode);","","    return {","        type: \"mclass\",","        mclass: \"mrel\",","        value: [supsub]","    };","});","","// \\mod-type functions","defineFunction(\"\\\\bmod\", {","    numArgs: 0","}, function(context, args) {","    return {","        type: \"mod\",","        modType: \"bmod\",","        value: null","    };","});","","defineFunction([\"\\\\pod\", \"\\\\pmod\", \"\\\\mod\"], {","    numArgs: 1","}, function(context, args) {","    var body = args[0];","    return {","        type: \"mod\",","        modType: context.funcName.substr(1),","        value: ordargument(body)","    };","});","","// Extra data needed for the delimiter handler down below","var delimiterSizes = {","    \"\\\\bigl\" : {mclass: \"mopen\",    size: 1},","    \"\\\\Bigl\" : {mclass: \"mopen\",    size: 2},","    \"\\\\biggl\": {mclass: \"mopen\",    size: 3},","    \"\\\\Biggl\": {mclass: \"mopen\",    size: 4},","    \"\\\\bigr\" : {mclass: \"mclose\",   size: 1},","    \"\\\\Bigr\" : {mclass: \"mclose\",   size: 2},","    \"\\\\biggr\": {mclass: \"mclose\",   size: 3},","    \"\\\\Biggr\": {mclass: \"mclose\",   size: 4},","    \"\\\\bigm\" : {mclass: \"mrel\",     size: 1},","    \"\\\\Bigm\" : {mclass: \"mrel\",     size: 2},","    \"\\\\biggm\": {mclass: \"mrel\",     size: 3},","    \"\\\\Biggm\": {mclass: \"mrel\",     size: 4},","    \"\\\\big\"  : {mclass: \"mord\",     size: 1},","    \"\\\\Big\"  : {mclass: \"mord\",     size: 2},","    \"\\\\bigg\" : {mclass: \"mord\",     size: 3},","    \"\\\\Bigg\" : {mclass: \"mord\",     size: 4}","};","","var delimiters = [","    \"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\",","    \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\",","    \"\\\\lfloor\", \"\\\\rfloor\", \"\\\\lceil\", \"\\\\rceil\",","    \"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"\\\\lt\", \"\\\\gt\",","    \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\",","    \"\\\\lgroup\", \"\\\\rgroup\", \"\\\\lmoustache\", \"\\\\rmoustache\",","    \"/\", \"\\\\backslash\",","    \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\",","    \"\\\\uparrow\", \"\\\\Uparrow\",","    \"\\\\downarrow\", \"\\\\Downarrow\",","    \"\\\\updownarrow\", \"\\\\Updownarrow\",","    \".\"","];","","var fontAliases = {","    \"\\\\Bbb\": \"\\\\mathbb\",","    \"\\\\bold\": \"\\\\mathbf\",","    \"\\\\frak\": \"\\\\mathfrak\"","};","","// Single-argument color functions","defineFunction([","    \"\\\\blue\", \"\\\\orange\", \"\\\\pink\", \"\\\\red\",","    \"\\\\green\", \"\\\\gray\", \"\\\\purple\",","    \"\\\\blueA\", \"\\\\blueB\", \"\\\\blueC\", \"\\\\blueD\", \"\\\\blueE\",","    \"\\\\tealA\", \"\\\\tealB\", \"\\\\tealC\", \"\\\\tealD\", \"\\\\tealE\",","    \"\\\\greenA\", \"\\\\greenB\", \"\\\\greenC\", \"\\\\greenD\", \"\\\\greenE\",","    \"\\\\goldA\", \"\\\\goldB\", \"\\\\goldC\", \"\\\\goldD\", \"\\\\goldE\",","    \"\\\\redA\", \"\\\\redB\", \"\\\\redC\", \"\\\\redD\", \"\\\\redE\",","    \"\\\\maroonA\", \"\\\\maroonB\", \"\\\\maroonC\", \"\\\\maroonD\", \"\\\\maroonE\",","    \"\\\\purpleA\", \"\\\\purpleB\", \"\\\\purpleC\", \"\\\\purpleD\", \"\\\\purpleE\",","    \"\\\\mintA\", \"\\\\mintB\", \"\\\\mintC\",","    \"\\\\grayA\", \"\\\\grayB\", \"\\\\grayC\", \"\\\\grayD\", \"\\\\grayE\",","    \"\\\\grayF\", \"\\\\grayG\", \"\\\\grayH\", \"\\\\grayI\",","    \"\\\\kaBlue\", \"\\\\kaGreen\"","], {","    numArgs: 1,","    allowedInText: true,","    greediness: 3","}, function(context, args) {","    var body = args[0];","    return {","        type: \"color\",","        color: \"katex-\" + context.funcName.slice(1),","        value: ordargument(body)","    };","});","","// There are 2 flags for operators; whether they produce limits in","// displaystyle, and whether they are symbols and should grow in","// displaystyle. These four groups cover the four possible choices.","","// No limits, not symbols","defineFunction([","    \"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arg\", \"\\\\cos\", \"\\\\cosh\",","    \"\\\\cot\", \"\\\\coth\", \"\\\\csc\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\",","    \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\",","    \"\\\\tan\", \"\\\\tanh\"","], {","    numArgs: 0","}, function(context) {","    return {","        type: \"op\",","        limits: false,","        symbol: false,","        body: context.funcName","    };","});","","// Limits, not symbols","defineFunction([","    \"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\liminf\", \"\\\\limsup\", \"\\\\max\",","    \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"","], {","    numArgs: 0","}, function(context) {","    return {","        type: \"op\",","        limits: true,","        symbol: false,","        body: context.funcName","    };","});","","// No limits, symbols","defineFunction([","    \"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\"","], {","    numArgs: 0","}, function(context) {","    return {","        type: \"op\",","        limits: false,","        symbol: true,","        body: context.funcName","    };","});","","// Limits, symbols","defineFunction([","    \"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\",","    \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\",","    \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\"","], {","    numArgs: 0","}, function(context) {","    return {","        type: \"op\",","        limits: true,","        symbol: true,","        body: context.funcName","    };","});","","// \\mathop class command","defineFunction(\"\\\\mathop\", {","    numArgs: 1","}, function(context, args) {","    var body = args[0];","    return {","        type: \"op\",","        limits: false,","        symbol: false,","        value: ordargument(body)","    };","});","","// Fractions","defineFunction([","    \"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\",","    \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\",","    \"\\\\\\\\atopfrac\" // can’t be entered directly","], {","    numArgs: 2,","    greediness: 2","}, function(context, args) {","    var numer = args[0];","    var denom = args[1];","    var hasBarLine;","    var leftDelim = null;","    var rightDelim = null;","    var size = \"auto\";","","    switch (context.funcName) {","        case \"\\\\dfrac\":","        case \"\\\\frac\":","        case \"\\\\tfrac\":","            hasBarLine = true;","            break;","        case \"\\\\\\\\atopfrac\":","            hasBarLine = false;","            break;","        case \"\\\\dbinom\":","        case \"\\\\binom\":","        case \"\\\\tbinom\":","            hasBarLine = false;","            leftDelim = \"(\";","            rightDelim = \")\";","            break;","        default:","            throw new Error(\"Unrecognized genfrac command\");","    }","","    switch (context.funcName) {","        case \"\\\\dfrac\":","        case \"\\\\dbinom\":","            size = \"display\";","            break;","        case \"\\\\tfrac\":","        case \"\\\\tbinom\":","            size = \"text\";","            break;","    }","","    return {","        type: \"genfrac\",","        numer: numer,","        denom: denom,","        hasBarLine: hasBarLine,","        leftDelim: leftDelim,","        rightDelim: rightDelim,","        size: size","    };","});","","// Left and right overlap functions","defineFunction([\"\\\\llap\", \"\\\\rlap\"], {","    numArgs: 1,","    allowedInText: true","}, function(context, args) {","    var body = args[0];","    return {","        type: context.funcName.slice(1),","        body: body","    };","});","","// Delimiter functions","var checkDelimiter = function(delim, context) {","    if (utils.contains(delimiters, delim.value)) {","        return delim;","    } else {","        throw new ParseError(","            \"Invalid delimiter: '\" + delim.value + \"' after '\" +","            context.funcName + \"'\", delim);","    }","};","","defineFunction([","    \"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\",","    \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\",","    \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\",","    \"\\\\big\",  \"\\\\Big\",  \"\\\\bigg\",  \"\\\\Bigg\"","], {","    numArgs: 1","}, function(context, args) {","    var delim = checkDelimiter(args[0], context);","","    return {","        type: \"delimsizing\",","        size: delimiterSizes[context.funcName].size,","        mclass: delimiterSizes[context.funcName].mclass,","        value: delim.value","    };","});","","defineFunction([","    \"\\\\left\", \"\\\\right\"","], {","    numArgs: 1","}, function(context, args) {","    var delim = checkDelimiter(args[0], context);","","    // \\left and \\right are caught somewhere in Parser.js, which is","    // why this data doesn't match what is in buildHTML.","    return {","        type: \"leftright\",","        value: delim.value","    };","});","","defineFunction(\"\\\\middle\", {","    numArgs: 1","}, function(context, args) {","    var delim = checkDelimiter(args[0], context);","    if (!context.parser.leftrightDepth) {","        throw new ParseError(\"\\\\middle without preceding \\\\left\", delim);","    }","","    return {","        type: \"middle\",","        value: delim.value","    };","});","","// Sizing functions (handled in Parser.js explicitly, hence no handler)","defineFunction([","    \"\\\\tiny\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\",","    \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"","], 0, null);","","// Style changing functions (handled in Parser.js explicitly, hence no","// handler)","defineFunction([","    \"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\",","    \"\\\\scriptscriptstyle\"","], 0, null);","","defineFunction([","    // styles","    \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\",","","    // families","    \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\",","    \"\\\\mathtt\",","","    // aliases","    \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"","], {","    numArgs: 1,","    greediness: 2","}, function(context, args) {","    var body = args[0];","    var func = context.funcName;","    if (func in fontAliases) {","        func = fontAliases[func];","    }","    return {","        type: \"font\",","        font: func.slice(1),","        body: body","    };","});","","// Accents","defineFunction([","    \"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\",","    \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\"","    // We don't support expanding accents yet","    // \"\\\\widetilde\", \"\\\\widehat\"","], {","    numArgs: 1","}, function(context, args) {","    var base = args[0];","    return {","        type: \"accent\",","        accent: context.funcName,","        base: base","    };","});","","// Infix generalized fractions","defineFunction([\"\\\\over\", \"\\\\choose\", \"\\\\atop\"], {","    numArgs: 0,","    infix: true","}, function(context) {","    var replaceWith;","    switch (context.funcName) {","        case \"\\\\over\":","            replaceWith = \"\\\\frac\";","            break;","        case \"\\\\choose\":","            replaceWith = \"\\\\binom\";","            break;","        case \"\\\\atop\":","            replaceWith = \"\\\\\\\\atopfrac\";","            break;","        default:","            throw new Error(\"Unrecognized infix genfrac command\");","    }","    return {","        type: \"infix\",","        replaceWith: replaceWith,","        token: context.token","    };","});","","// Row breaks for aligned data","defineFunction([\"\\\\\\\\\", \"\\\\cr\"], {","    numArgs: 0,","    numOptionalArgs: 1,","    argTypes: [\"size\"]","}, function(context, args) {","    var size = args[0];","    return {","        type: \"cr\",","        size: size","    };","});","","// Environment delimiters","defineFunction([\"\\\\begin\", \"\\\\end\"], {","    numArgs: 1,","    argTypes: [\"text\"]","}, function(context, args) {","    var nameGroup = args[0];","    if (nameGroup.type !== \"ordgroup\") {","        throw new ParseError(\"Invalid environment name\", nameGroup);","    }","    var name = \"\";","    for (var i = 0; i < nameGroup.value.length; ++i) {","        name += nameGroup.value[i].value;","    }","    return {","        type: \"environment\",","        name: name,","        nameGroup: nameGroup","    };","});",""],"l":{"1":1,"2":1,"3":1,"4":1,"83":1,"84":31,"85":11,"87":31,"88":2,"91":31,"100":31,"101":206,"107":1,"108":0,"109":0,"111":0,"116":1,"120":0,"121":0,"122":0,"130":1,"136":1,"145":0,"146":0,"154":1,"160":0,"161":0,"162":0,"170":1,"173":0,"174":0,"181":1,"184":0,"185":0,"192":1,"197":0,"198":0,"199":0,"200":0,"210":1,"214":0,"221":1,"224":0,"229":1,"232":0,"233":0,"240":1,"246":0,"247":0,"255":1,"258":0,"259":0,"261":0,"269":0,"275":0,"283":1,"286":0,"293":1,"296":0,"297":0,"305":1,"324":1,"339":1,"346":1,"365":0,"366":0,"378":1,"386":0,"395":1,"401":0,"410":1,"415":0,"424":1,"431":0,"440":1,"443":0,"444":0,"453":1,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"468":0,"472":0,"473":0,"475":0,"476":0,"480":0,"481":0,"482":0,"483":0,"485":0,"488":0,"491":0,"492":0,"495":0,"496":0,"499":0,"511":1,"515":0,"516":0,"523":1,"524":0,"525":0,"527":0,"533":1,"541":0,"543":0,"551":1,"556":0,"560":0,"566":1,"569":0,"570":0,"571":0,"574":0,"581":1,"588":1,"593":1,"607":0,"608":0,"609":0,"610":0,"612":0,"620":1,"628":0,"629":0,"637":1,"641":0,"642":0,"644":0,"645":0,"647":0,"648":0,"650":0,"651":0,"653":0,"655":0,"663":1,"668":0,"669":0,"676":1,"680":0,"681":0,"682":0,"684":0,"685":0,"686":0,"688":0}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/parseData.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/parseData.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"ParseNode","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":61}}}},"statementMap":{"1":{"start":{"line":18,"column":0},"end":{"line":27,"column":1}},"2":{"start":{"line":19,"column":4},"end":{"line":19,"column":21}},"3":{"start":{"line":20,"column":4},"end":{"line":20,"column":23}},"4":{"start":{"line":21,"column":4},"end":{"line":21,"column":21}},"5":{"start":{"line":22,"column":4},"end":{"line":26,"column":5}},"6":{"start":{"line":23,"column":8},"end":{"line":23,"column":38}},"7":{"start":{"line":24,"column":8},"end":{"line":24,"column":38}},"8":{"start":{"line":25,"column":8},"end":{"line":25,"column":49}},"9":{"start":{"line":29,"column":0},"end":{"line":31,"column":2}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":22,"column":4}},{"start":{"line":22,"column":4},"end":{"line":22,"column":4}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":8},"end":{"line":22,"column":18}},{"start":{"line":22,"column":23},"end":{"line":22,"column":33}},{"start":{"line":22,"column":37},"end":{"line":22,"column":73}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":20},"end":{"line":25,"column":29}},{"start":{"line":25,"column":33},"end":{"line":25,"column":43}}]}},"code":["/**"," * The resulting parse tree nodes of the parse tree."," *"," * It is possible to provide position information, so that a ParseNode can"," * fulfil a role similar to a Token in error reporting."," * For details on the corresponding properties see Token constructor."," * Providing such information can lead to better error reporting."," *"," * @param {string}  type       type of node, like e.g. \"ordgroup\""," * @param {?object} value      type-specific representation of the node"," * @param {string}  mode       parse mode in action for this node,"," *                             \"math\" or \"text\""," * @param {Token=} firstToken  first token of the input for this node,"," *                             will omit position information if unset"," * @param {Token=} lastToken   last token of the input for this node,"," *                             will default to firstToken if unset"," */","function ParseNode(type, value, mode, firstToken, lastToken) {","    this.type = type;","    this.value = value;","    this.mode = mode;","    if (firstToken && (!lastToken || lastToken.lexer === firstToken.lexer)) {","        this.lexer = firstToken.lexer;","        this.start = firstToken.start;","        this.end = (lastToken || firstToken).end;","    }","}","","module.exports = {","    ParseNode: ParseNode","};","",""],"l":{"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"29":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/environments.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/environments.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":4,"28":3,"29":4,"30":0,"31":4,"32":4,"33":9,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[3,1],"6":[0,4],"7":[4,3],"8":[4,4],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":4,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"parseArray","line":13,"loc":{"start":{"line":13,"column":0},"end":{"line":13,"column":36}}},"2":{"name":"defineEnvironment","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":50}}},"3":{"name":"(anonymous_3)","line":89,"loc":{"start":{"line":89,"column":3},"end":{"line":89,"column":27}}},"4":{"name":"(anonymous_4)","line":92,"loc":{"start":{"line":92,"column":28},"end":{"line":92,"column":43}}},"5":{"name":"(anonymous_5)","line":128,"loc":{"start":{"line":128,"column":3},"end":{"line":128,"column":21}}},"6":{"name":"(anonymous_6)","line":156,"loc":{"start":{"line":156,"column":3},"end":{"line":156,"column":21}}},"7":{"name":"(anonymous_7)","line":190,"loc":{"start":{"line":190,"column":3},"end":{"line":190,"column":21}}},"8":{"name":"(anonymous_8)","line":198,"loc":{"start":{"line":198,"column":27},"end":{"line":198,"column":41}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":2,"column":39}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":41}},"3":{"start":{"line":4,"column":0},"end":{"line":4,"column":31}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"5":{"start":{"line":13,"column":0},"end":{"line":38,"column":1}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":17}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":21}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"9":{"start":{"line":17,"column":4},"end":{"line":34,"column":5}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":55}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":63}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":41}},"13":{"start":{"line":21,"column":8},"end":{"line":33,"column":9}},"14":{"start":{"line":22,"column":12},"end":{"line":22,"column":29}},"15":{"start":{"line":23,"column":15},"end":{"line":33,"column":9}},"16":{"start":{"line":24,"column":12},"end":{"line":24,"column":18}},"17":{"start":{"line":25,"column":15},"end":{"line":33,"column":9}},"18":{"start":{"line":26,"column":12},"end":{"line":26,"column":44}},"19":{"start":{"line":27,"column":12},"end":{"line":27,"column":40}},"20":{"start":{"line":28,"column":12},"end":{"line":28,"column":21}},"21":{"start":{"line":29,"column":12},"end":{"line":29,"column":27}},"22":{"start":{"line":31,"column":12},"end":{"line":32,"column":51}},"23":{"start":{"line":35,"column":4},"end":{"line":35,"column":23}},"24":{"start":{"line":36,"column":4},"end":{"line":36,"column":29}},"25":{"start":{"line":37,"column":4},"end":{"line":37,"column":59}},"26":{"start":{"line":64,"column":0},"end":{"line":83,"column":1}},"27":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"28":{"start":{"line":66,"column":8},"end":{"line":66,"column":24}},"29":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"30":{"start":{"line":69,"column":8},"end":{"line":69,"column":35}},"31":{"start":{"line":72,"column":4},"end":{"line":79,"column":6}},"32":{"start":{"line":80,"column":4},"end":{"line":82,"column":5}},"33":{"start":{"line":81,"column":8},"end":{"line":81,"column":40}},"34":{"start":{"line":87,"column":0},"end":{"line":116,"column":3}},"35":{"start":{"line":90,"column":4},"end":{"line":90,"column":27}},"36":{"start":{"line":91,"column":4},"end":{"line":91,"column":64}},"37":{"start":{"line":92,"column":4},"end":{"line":108,"column":7}},"38":{"start":{"line":93,"column":8},"end":{"line":93,"column":28}},"39":{"start":{"line":94,"column":8},"end":{"line":104,"column":9}},"40":{"start":{"line":95,"column":12},"end":{"line":98,"column":14}},"41":{"start":{"line":99,"column":15},"end":{"line":104,"column":9}},"42":{"start":{"line":100,"column":12},"end":{"line":103,"column":14}},"43":{"start":{"line":105,"column":8},"end":{"line":107,"column":18}},"44":{"start":{"line":109,"column":4},"end":{"line":113,"column":6}},"45":{"start":{"line":114,"column":4},"end":{"line":114,"column":42}},"46":{"start":{"line":115,"column":4},"end":{"line":115,"column":15}},"47":{"start":{"line":120,"column":0},"end":{"line":150,"column":3}},"48":{"start":{"line":129,"column":4},"end":{"line":136,"column":23}},"49":{"start":{"line":137,"column":4},"end":{"line":140,"column":6}},"50":{"start":{"line":141,"column":4},"end":{"line":141,"column":42}},"51":{"start":{"line":142,"column":4},"end":{"line":148,"column":5}},"52":{"start":{"line":143,"column":8},"end":{"line":147,"column":25}},"53":{"start":{"line":149,"column":4},"end":{"line":149,"column":15}},"54":{"start":{"line":155,"column":0},"end":{"line":183,"column":3}},"55":{"start":{"line":157,"column":4},"end":{"line":175,"column":6}},"56":{"start":{"line":176,"column":4},"end":{"line":176,"column":42}},"57":{"start":{"line":177,"column":4},"end":{"line":181,"column":21}},"58":{"start":{"line":182,"column":4},"end":{"line":182,"column":15}},"59":{"start":{"line":189,"column":0},"end":{"line":223,"column":3}},"60":{"start":{"line":191,"column":4},"end":{"line":194,"column":6}},"61":{"start":{"line":195,"column":4},"end":{"line":195,"column":42}},"62":{"start":{"line":196,"column":4},"end":{"line":196,"column":65}},"63":{"start":{"line":197,"column":4},"end":{"line":197,"column":20}},"64":{"start":{"line":198,"column":4},"end":{"line":206,"column":7}},"65":{"start":{"line":199,"column":8},"end":{"line":199,"column":14}},"66":{"start":{"line":200,"column":8},"end":{"line":202,"column":9}},"67":{"start":{"line":201,"column":12},"end":{"line":201,"column":45}},"68":{"start":{"line":203,"column":8},"end":{"line":205,"column":9}},"69":{"start":{"line":204,"column":12},"end":{"line":204,"column":33}},"70":{"start":{"line":207,"column":4},"end":{"line":221,"column":5}},"71":{"start":{"line":208,"column":8},"end":{"line":208,"column":24}},"72":{"start":{"line":209,"column":8},"end":{"line":209,"column":23}},"73":{"start":{"line":210,"column":8},"end":{"line":214,"column":9}},"74":{"start":{"line":211,"column":12},"end":{"line":211,"column":24}},"75":{"start":{"line":212,"column":15},"end":{"line":214,"column":9}},"76":{"start":{"line":213,"column":12},"end":{"line":213,"column":23}},"77":{"start":{"line":215,"column":8},"end":{"line":220,"column":10}},"78":{"start":{"line":222,"column":4},"end":{"line":222,"column":15}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":21,"column":8}},{"start":{"line":21,"column":8},"end":{"line":21,"column":8}}]},"2":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":15},"end":{"line":23,"column":15}},{"start":{"line":23,"column":15},"end":{"line":23,"column":15}}]},"3":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":15},"end":{"line":25,"column":15}},{"start":{"line":25,"column":15},"end":{"line":25,"column":15}}]},"4":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":19},"end":{"line":25,"column":34}},{"start":{"line":25,"column":38},"end":{"line":25,"column":53}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"6":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"7":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":17},"end":{"line":73,"column":30}},{"start":{"line":73,"column":34},"end":{"line":73,"column":35}}]},"8":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":25},"end":{"line":77,"column":46}},{"start":{"line":77,"column":50},"end":{"line":77,"column":51}}]},"9":{"line":91,"type":"cond-expr","locations":[{"start":{"line":91,"column":36},"end":{"line":91,"column":50}},{"start":{"line":91,"column":53},"end":{"line":91,"column":63}}]},"10":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":94,"column":8}},{"start":{"line":94,"column":8},"end":{"line":94,"column":8}}]},"11":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":15},"end":{"line":99,"column":15}},{"start":{"line":99,"column":15},"end":{"line":99,"column":15}}]},"12":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":4},"end":{"line":142,"column":4}},{"start":{"line":142,"column":4},"end":{"line":142,"column":4}}]},"13":{"line":203,"type":"if","locations":[{"start":{"line":203,"column":8},"end":{"line":203,"column":8}},{"start":{"line":203,"column":8},"end":{"line":203,"column":8}}]},"14":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":8}},{"start":{"line":210,"column":8},"end":{"line":210,"column":8}}]},"15":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":15},"end":{"line":212,"column":15}},{"start":{"line":212,"column":15},"end":{"line":212,"column":15}}]}},"code":["/* eslint no-constant-condition:0 */","var parseData = require(\"./parseData\");","var ParseError = require(\"./ParseError\");","var Style = require(\"./Style\");","","var ParseNode = parseData.ParseNode;","","/**"," * Parse the body of the environment, with rows delimited by \\\\ and"," * columns delimited by &, and create a nested list in row-major order"," * with one group per cell."," */","function parseArray(parser, result) {","    var row = [];","    var body = [row];","    var rowGaps = [];","    while (true) {","        var cell = parser.parseExpression(false, null);","        row.push(new ParseNode(\"ordgroup\", cell, parser.mode));","        var next = parser.nextToken.text;","        if (next === \"&\") {","            parser.consume();","        } else if (next === \"\\\\end\") {","            break;","        } else if (next === \"\\\\\\\\\" || next === \"\\\\cr\") {","            var cr = parser.parseFunction();","            rowGaps.push(cr.value.size);","            row = [];","            body.push(row);","        } else {","            throw new ParseError(\"Expected & or \\\\\\\\ or \\\\end\",","                                 parser.nextToken);","        }","    }","    result.body = body;","    result.rowGaps = rowGaps;","    return new ParseNode(result.type, result, parser.mode);","}","","/*"," * An environment definition is very similar to a function definition:"," * it is declared with a name or a list of names, a set of properties"," * and a handler containing the actual implementation."," *"," * The properties include:"," *  - numArgs: The number of arguments after the \\begin{name} function."," *  - argTypes: (optional) Just like for a function"," *  - allowedInText: (optional) Whether or not the environment is allowed inside"," *                   text mode (default false) (not enforced yet)"," *  - numOptionalArgs: (optional) Just like for a function"," * A bare number instead of that object indicates the numArgs value."," *"," * The handler function will receive two arguments"," *  - context: information and references provided by the parser"," *  - args: an array of arguments passed to \\begin{name}"," * The context contains the following properties:"," *  - envName: the name of the environment, one of the listed names."," *  - parser: the parser object"," *  - lexer: the lexer object"," *  - positions: the positions associated with these arguments from args."," * The handler must return a ParseResult."," */","","function defineEnvironment(names, props, handler) {","    if (typeof names === \"string\") {","        names = [names];","    }","    if (typeof props === \"number\") {","        props = { numArgs: props };","    }","    // Set default values of environments","    var data = {","        numArgs: props.numArgs || 0,","        argTypes: props.argTypes,","        greediness: 1,","        allowedInText: !!props.allowedInText,","        numOptionalArgs: props.numOptionalArgs || 0,","        handler: handler","    };","    for (var i = 0; i < names.length; ++i) {","        module.exports[names[i]] = data;","    }","}","","// Arrays are part of LaTeX, defined in lttab.dtx so its documentation","// is part of the source2e.pdf file of LaTeX2e source documentation.","defineEnvironment(\"array\", {","    numArgs: 1","}, function(context, args) {","    var colalign = args[0];","    colalign = colalign.value.map ? colalign.value : [colalign];","    var cols = colalign.map(function(node) {","        var ca = node.value;","        if (\"lcr\".indexOf(ca) !== -1) {","            return {","                type: \"align\",","                align: ca","            };","        } else if (ca === \"|\") {","            return {","                type: \"separator\",","                separator: \"|\"","            };","        }","        throw new ParseError(","            \"Unknown column alignment: \" + node.value,","            node);","    });","    var res = {","        type: \"array\",","        cols: cols,","        hskipBeforeAndAfter: true // \\@preamble in lttab.dtx","    };","    res = parseArray(context.parser, res);","    return res;","});","","// The matrix environments of amsmath builds on the array environment","// of LaTeX, which is discussed above.","defineEnvironment([","    \"matrix\",","    \"pmatrix\",","    \"bmatrix\",","    \"Bmatrix\",","    \"vmatrix\",","    \"Vmatrix\"","], {","}, function(context) {","    var delimiters = {","        \"matrix\": null,","        \"pmatrix\": [\"(\", \")\"],","        \"bmatrix\": [\"[\", \"]\"],","        \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],","        \"vmatrix\": [\"|\", \"|\"],","        \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]","    }[context.envName];","    var res = {","        type: \"array\",","        hskipBeforeAndAfter: false // \\hskip -\\arraycolsep in amsmath","    };","    res = parseArray(context.parser, res);","    if (delimiters) {","        res = new ParseNode(\"leftright\", {","            body: [res],","            left: delimiters[0],","            right: delimiters[1]","        }, context.mode);","    }","    return res;","});","","// A cases environment (in amsmath.sty) is almost equivalent to","// \\def\\arraystretch{1.2}%","// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.","defineEnvironment(\"cases\", {","}, function(context) {","    var res = {","        type: \"array\",","        arraystretch: 1.2,","        cols: [{","            type: \"align\",","            align: \"l\",","            pregap: 0,","            // TODO(kevinb) get the current style.","            // For now we use the metrics for TEXT style which is what we were","            // doing before.  Before attempting to get the current style we","            // should look at TeX's behavior especially for \\over and matrices.","            postgap: Style.TEXT.metrics.quad","        }, {","            type: \"align\",","            align: \"l\",","            pregap: 0,","            postgap: 0","        }]","    };","    res = parseArray(context.parser, res);","    res = new ParseNode(\"leftright\", {","        body: [res],","        left: \"\\\\{\",","        right: \".\"","    }, context.mode);","    return res;","});","","// An aligned environment is like the align* environment","// except it operates within math mode.","// Note that we assume \\nomallineskiplimit to be zero,","// so that \\strut@ is the same as \\strut.","defineEnvironment(\"aligned\", {","}, function(context) {","    var res = {","        type: \"array\",","        cols: []","    };","    res = parseArray(context.parser, res);","    var emptyGroup = new ParseNode(\"ordgroup\", [], context.mode);","    var numCols = 0;","    res.value.body.forEach(function(row) {","        var i;","        for (i = 1; i < row.length; i += 2) {","            row[i].value.unshift(emptyGroup);","        }","        if (numCols < row.length) {","            numCols = row.length;","        }","    });","    for (var i = 0; i < numCols; ++i) {","        var align = \"r\";","        var pregap = 0;","        if (i % 2 === 1) {","            align = \"l\";","        } else if (i > 0) {","            pregap = 2; // one \\qquad between columns","        }","        res.value.cols[i] = {","            type: \"align\",","            align: align,","            pregap: pregap,","            postgap: 0","        };","    }","    return res;","});",""],"l":{"2":1,"3":1,"4":1,"6":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"31":0,"35":0,"36":0,"37":0,"64":1,"65":4,"66":3,"68":4,"69":0,"72":4,"80":4,"81":9,"87":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"99":0,"100":0,"105":0,"109":0,"114":0,"115":0,"120":1,"129":0,"137":0,"141":0,"142":0,"143":0,"149":0,"155":1,"157":0,"176":0,"177":0,"182":0,"189":1,"191":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"203":0,"204":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"215":0,"222":0}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/MacroExpander.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/MacroExpander.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"MacroExpander","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":38}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":36},"end":{"line":18,"column":47}}},"3":{"name":"(anonymous_3)","line":44,"loc":{"start":{"line":44,"column":30},"end":{"line":44,"column":52}}},"4":{"name":"(anonymous_4)","line":63,"loc":{"start":{"line":63,"column":32},"end":{"line":63,"column":48}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":31}},"2":{"start":{"line":8,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":34}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":25}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":20}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":34}},"7":{"start":{"line":18,"column":0},"end":{"line":42,"column":2}},"8":{"start":{"line":19,"column":4},"end":{"line":41,"column":5}},"9":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"10":{"start":{"line":21,"column":12},"end":{"line":21,"column":46}},"11":{"start":{"line":23,"column":8},"end":{"line":23,"column":40}},"12":{"start":{"line":24,"column":8},"end":{"line":24,"column":33}},"13":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"14":{"start":{"line":26,"column":12},"end":{"line":26,"column":28}},"15":{"start":{"line":28,"column":8},"end":{"line":28,"column":42}},"16":{"start":{"line":29,"column":8},"end":{"line":39,"column":9}},"17":{"start":{"line":30,"column":12},"end":{"line":30,"column":49}},"18":{"start":{"line":31,"column":12},"end":{"line":31,"column":27}},"19":{"start":{"line":32,"column":12},"end":{"line":32,"column":38}},"20":{"start":{"line":33,"column":12},"end":{"line":36,"column":13}},"21":{"start":{"line":34,"column":16},"end":{"line":34,"column":36}},"22":{"start":{"line":35,"column":16},"end":{"line":35,"column":38}},"23":{"start":{"line":37,"column":12},"end":{"line":37,"column":32}},"24":{"start":{"line":38,"column":12},"end":{"line":38,"column":42}},"25":{"start":{"line":40,"column":8},"end":{"line":40,"column":50}},"26":{"start":{"line":44,"column":0},"end":{"line":54,"column":2}},"27":{"start":{"line":45,"column":4},"end":{"line":45,"column":34}},"28":{"start":{"line":46,"column":4},"end":{"line":46,"column":33}},"29":{"start":{"line":47,"column":4},"end":{"line":52,"column":5}},"30":{"start":{"line":48,"column":8},"end":{"line":51,"column":9}},"31":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"32":{"start":{"line":50,"column":12},"end":{"line":50,"column":37}},"33":{"start":{"line":53,"column":4},"end":{"line":53,"column":17}},"34":{"start":{"line":63,"column":0},"end":{"line":68,"column":2}},"35":{"start":{"line":64,"column":4},"end":{"line":64,"column":27}},"36":{"start":{"line":65,"column":4},"end":{"line":67,"column":5}},"37":{"start":{"line":66,"column":8},"end":{"line":66,"column":56}},"38":{"start":{"line":70,"column":0},"end":{"line":70,"column":31}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":8}},{"start":{"line":20,"column":8},"end":{"line":20,"column":8}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":8}},{"start":{"line":25,"column":8},"end":{"line":25,"column":8}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":14},"end":{"line":25,"column":37}},{"start":{"line":25,"column":41},"end":{"line":25,"column":73}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":29,"column":8}},{"start":{"line":29,"column":8},"end":{"line":29,"column":8}}]},"5":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":4},"end":{"line":47,"column":4}},{"start":{"line":47,"column":4},"end":{"line":47,"column":4}}]}},"code":["/**"," * This file contains the “gullet” where macros are expanded"," * until only non-macro tokens remain."," */","","var Lexer = require(\"./Lexer\");","","function MacroExpander(input, macros) {","    this.lexer = new Lexer(input);","    this.macros = macros;","    this.stack = []; // contains tokens in REVERSE order","    this.discardedWhiteSpace = [];","}","","/**"," * Recursively expand first token, then return first non-expandable token."," */","MacroExpander.prototype.nextToken = function() {","    for (;;) {","        if (this.stack.length === 0) {","            this.stack.push(this.lexer.lex());","        }","        var topToken = this.stack.pop();","        var name = topToken.text;","        if (!(name.charAt(0) === \"\\\\\" && this.macros.hasOwnProperty(name))) {","            return topToken;","        }","        var expansion = this.macros[name];","        if (typeof expansion === \"string\") {","            var bodyLexer = new Lexer(expansion);","            expansion = [];","            var tok = bodyLexer.lex();","            while (tok.text !== \"EOF\") {","                expansion.push(tok);","                tok = bodyLexer.lex();","            }","            expansion.reverse(); // to fit in with stack using push and pop","            this.macros[name] = expansion;","        }","        this.stack = this.stack.concat(expansion);","    }","};","","MacroExpander.prototype.get = function(ignoreSpace) {","    this.discardedWhiteSpace = [];","    var token = this.nextToken();","    if (ignoreSpace) {","        while (token.text === \" \") {","            this.discardedWhiteSpace.push(token);","            token = this.nextToken();","        }","    }","    return token;","};","","/**"," * Undo the effect of the preceding call to the get method."," * A call to this method MUST be immediately preceded and immediately followed"," * by a call to get.  Only used during mode switching, i.e. after one token"," * was got in the old mode but should get got again in a new mode"," * with possibly different whitespace handling."," */","MacroExpander.prototype.unget = function(token) {","    this.stack.push(token);","    while (this.discardedWhiteSpace.length !== 0) {","        this.stack.push(this.discardedWhiteSpace.pop());","    }","};","","module.exports = MacroExpander;",""],"l":{"6":1,"8":1,"9":0,"10":0,"11":0,"12":0,"18":1,"19":0,"20":0,"21":0,"23":0,"24":0,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"37":0,"38":0,"40":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"53":0,"63":1,"64":0,"65":0,"66":0,"70":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/Lexer.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/src/Lexer.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"Lexer","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}}},"2":{"name":"Token","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":40}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":24},"end":{"line":57,"column":49}}},"4":{"name":"(anonymous_4)","line":90,"loc":{"start":{"line":90,"column":22},"end":{"line":90,"column":33}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":41}},"3":{"start":{"line":19,"column":0},"end":{"line":22,"column":1}},"4":{"start":{"line":20,"column":4},"end":{"line":20,"column":23}},"5":{"start":{"line":21,"column":4},"end":{"line":21,"column":17}},"6":{"start":{"line":43,"column":0},"end":{"line":48,"column":1}},"7":{"start":{"line":44,"column":4},"end":{"line":44,"column":21}},"8":{"start":{"line":45,"column":4},"end":{"line":45,"column":23}},"9":{"start":{"line":46,"column":4},"end":{"line":46,"column":19}},"10":{"start":{"line":47,"column":4},"end":{"line":47,"column":23}},"11":{"start":{"line":57,"column":0},"end":{"line":62,"column":2}},"12":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"13":{"start":{"line":59,"column":8},"end":{"line":59,"column":31}},"14":{"start":{"line":61,"column":4},"end":{"line":61,"column":65}},"15":{"start":{"line":79,"column":0},"end":{"line":85,"column":2}},"16":{"start":{"line":90,"column":0},"end":{"line":107,"column":2}},"17":{"start":{"line":91,"column":4},"end":{"line":91,"column":27}},"18":{"start":{"line":92,"column":4},"end":{"line":92,"column":23}},"19":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"20":{"start":{"line":94,"column":8},"end":{"line":94,"column":48}},"21":{"start":{"line":96,"column":4},"end":{"line":96,"column":48}},"22":{"start":{"line":97,"column":4},"end":{"line":101,"column":5}},"23":{"start":{"line":98,"column":8},"end":{"line":100,"column":55}},"24":{"start":{"line":102,"column":4},"end":{"line":102,"column":31}},"25":{"start":{"line":103,"column":4},"end":{"line":103,"column":25}},"26":{"start":{"line":104,"column":4},"end":{"line":104,"column":32}},"27":{"start":{"line":105,"column":4},"end":{"line":105,"column":23}},"28":{"start":{"line":106,"column":4},"end":{"line":106,"column":45}},"29":{"start":{"line":109,"column":0},"end":{"line":109,"column":23}}},"branchMap":{"1":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"2":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"3":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"4":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":15},"end":{"line":102,"column":23}},{"start":{"line":102,"column":27},"end":{"line":102,"column":30}}]}},"code":["/**"," * The Lexer class handles tokenizing the input in various ways. Since our"," * parser expects us to be able to backtrack, the lexer allows lexing from any"," * given starting point."," *"," * Its main exposed function is the `lex` function, which takes a position to"," * lex from and a type of token to lex. It defers to the appropriate `_innerLex`"," * function."," *"," * The various `_innerLex` functions perform the actual lexing of different"," * kinds."," */","","var matchAt = require(\"match-at\");","","var ParseError = require(\"./ParseError\");","","// The main lexer class","function Lexer(input) {","    this.input = input;","    this.pos = 0;","}","","/**"," * The resulting token returned from `lex`."," *"," * It consists of the token text plus some position information."," * The position information is essentially a range in an input string,"," * but instead of referencing the bare input string, we refer to the lexer."," * That way it is possible to attach extra metadata to the input string,"," * like for example a file name or similar."," *"," * The position information (all three parameters) is optional,"," * so it is OK to construct synthetic tokens if appropriate."," * Not providing available position information may lead to"," * degraded error reporting, though."," *"," * @param {string}  text   the text of this token"," * @param {number=} start  the start offset, zero-based inclusive"," * @param {number=} end    the end offset, zero-based exclusive"," * @param {Lexer=}  lexer  the lexer which in turn holds the input string"," */","function Token(text, start, end, lexer) {","    this.text = text;","    this.start = start;","    this.end = end;","    this.lexer = lexer;","}","","/**"," * Given a pair of tokens (this and endToken), compute a “Token” encompassing"," * the whole input range enclosed by these two."," *"," * @param {Token}  endToken  last token of the range, inclusive"," * @param {string} text      the text of the newly constructed token"," */","Token.prototype.range = function(endToken, text) {","    if (endToken.lexer !== this.lexer) {","        return new Token(text); // sorry, no position information available","    }","    return new Token(text, this.start, endToken.end, this.lexer);","};","","/* The following tokenRegex"," * - matches typical whitespace (but not NBSP etc.) using its first group"," * - does not match any control character \\x00-\\x1f except whitespace"," * - does not match a bare backslash"," * - matches any ASCII character except those just mentioned"," * - does not match the BMP private use area \\uE000-\\uF8FF"," * - does not match bare surrogate code units"," * - matches any BMP character except for those just described"," * - matches any valid Unicode surrogate pair"," * - matches a backslash followed by one or more letters"," * - matches a backslash followed by any BMP character, including newline"," * Just because the Lexer matches something doesn't mean it's valid input:"," * If there is no matching function or symbol definition, the Parser will"," * still reject the input."," */","var tokenRegex = new RegExp(","    \"([ \\r\\n\\t]+)|\" +                                 // whitespace","    \"([!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" +  // single codepoint","    \"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" +               // surrogate pair","    \"|\\\\\\\\(?:[a-zA-Z]+|[^\\uD800-\\uDFFF])\" +           // function name","    \")\"",");","","/**"," * This function lexes a single token."," */","Lexer.prototype.lex = function() {","    var input = this.input;","    var pos = this.pos;","    if (pos === input.length) {","        return new Token(\"EOF\", pos, pos, this);","    }","    var match = matchAt(tokenRegex, input, pos);","    if (match === null) {","        throw new ParseError(","            \"Unexpected character: '\" + input[pos] + \"'\",","            new Token(input[pos], pos, pos + 1, this));","    }","    var text = match[2] || \" \";","    var start = this.pos;","    this.pos += match[0].length;","    var end = this.pos;","    return new Token(text, start, end, this);","};","","module.exports = Lexer;",""],"l":{"14":1,"16":1,"19":1,"20":0,"21":0,"43":1,"44":0,"45":0,"46":0,"47":0,"57":1,"58":0,"59":0,"61":0,"79":1,"90":1,"91":0,"92":0,"93":0,"94":0,"96":0,"97":0,"98":0,"102":0,"103":0,"104":0,"105":0,"106":0,"109":1}},"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/cli.js":{"path":"/home/travis/build/npmtest/node-npmtest-katex/node_modules/katex/cli.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":1,"13":0,"14":0,"15":0},"b":{"1":[0,1]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":24,"loc":{"start":{"line":24,"column":25},"end":{"line":24,"column":41}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":24},"end":{"line":28,"column":35}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":15}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":33}},"4":{"start":{"line":12,"column":0},"end":{"line":22,"column":1}},"5":{"start":{"line":13,"column":4},"end":{"line":15,"column":39}},"6":{"start":{"line":17,"column":4},"end":{"line":18,"column":28}},"7":{"start":{"line":19,"column":4},"end":{"line":19,"column":65}},"8":{"start":{"line":20,"column":4},"end":{"line":20,"column":80}},"9":{"start":{"line":21,"column":4},"end":{"line":21,"column":19}},"10":{"start":{"line":24,"column":0},"end":{"line":26,"column":3}},"11":{"start":{"line":25,"column":4},"end":{"line":25,"column":30}},"12":{"start":{"line":28,"column":0},"end":{"line":32,"column":3}},"13":{"start":{"line":29,"column":4},"end":{"line":29,"column":73}},"14":{"start":{"line":30,"column":4},"end":{"line":30,"column":54}},"15":{"start":{"line":31,"column":4},"end":{"line":31,"column":24}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":0},"end":{"line":12,"column":0}},{"start":{"line":12,"column":0},"end":{"line":12,"column":0}}]}},"code":["//#!/usr/bin/env node","// Simple CLI for KaTeX.","// Reads TeX from stdin, outputs HTML to stdout.","/* eslint no-console:0 */","","var katex = require(\"./\");","var input = \"\";","","// Skip the first two args, which are just \"node\" and \"cli.js\"","var args = process.argv.slice(2);","","if (args.indexOf(\"--help\") !== -1) {","    console.log(process.argv[0] + \" \" + process.argv[1] +","                \" [ --help ]\" +","                \" [ --display-mode ]\");","","    console.log(\"\\n\" +","                \"Options:\");","    console.log(\"  --help            Display this help message\");","    console.log(\"  --display-mode    Render in display mode (not inline mode)\");","    process.exit();","}","","process.stdin.on(\"data\", function(chunk) {","    input += chunk.toString();","});","","process.stdin.on(\"end\", function() {","    var options = { displayMode: args.indexOf(\"--display-mode\") !== -1 };","    var output = katex.renderToString(input, options);","    console.log(output);","});",""],"l":{"6":1,"7":1,"10":1,"12":1,"13":0,"17":0,"19":0,"20":0,"21":0,"24":1,"25":0,"28":1,"29":0,"30":0,"31":0}}}